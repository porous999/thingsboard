// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: efento/proto_config.proto

package org.thingsboard.server.gen.transport.coap;

public final class ConfigProtos {
  private ConfigProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProtoChannelControlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ProtoChannelControl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Channel index                                                                                                              
     * </pre>
     *
     * <code>uint32 channel_index = 1;</code>
     * @return The channelIndex.
     */
    int getChannelIndex();

    /**
     * <pre>
     *                            0x02 - Off                                                                                      
     * </pre>
     *
     * <code>repeated uint32 control_params = 2;</code>
     * @return A list containing the controlParams.
     */
    java.util.List<java.lang.Integer> getControlParamsList();
    /**
     * <pre>
     *                            0x02 - Off                                                                                      
     * </pre>
     *
     * <code>repeated uint32 control_params = 2;</code>
     * @return The count of controlParams.
     */
    int getControlParamsCount();
    /**
     * <pre>
     *                            0x02 - Off                                                                                      
     * </pre>
     *
     * <code>repeated uint32 control_params = 2;</code>
     * @param index The index of the element to return.
     * @return The controlParams at the given index.
     */
    int getControlParams(int index);
  }
  /**
   * <pre>
   * Message containing optional channels control parameters                                                                      
   * </pre>
   *
   * Protobuf type {@code ProtoChannelControl}
   */
  public static final class ProtoChannelControl extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ProtoChannelControl)
      ProtoChannelControlOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtoChannelControl.newBuilder() to construct.
    private ProtoChannelControl(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoChannelControl() {
      controlParams_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtoChannelControl();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoChannelControl_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoChannelControl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.class, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder.class);
    }

    public static final int CHANNEL_INDEX_FIELD_NUMBER = 1;
    private int channelIndex_ = 0;
    /**
     * <pre>
     * Channel index                                                                                                              
     * </pre>
     *
     * <code>uint32 channel_index = 1;</code>
     * @return The channelIndex.
     */
    @java.lang.Override
    public int getChannelIndex() {
      return channelIndex_;
    }

    public static final int CONTROL_PARAMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList controlParams_;
    /**
     * <pre>
     *                            0x02 - Off                                                                                      
     * </pre>
     *
     * <code>repeated uint32 control_params = 2;</code>
     * @return A list containing the controlParams.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getControlParamsList() {
      return controlParams_;
    }
    /**
     * <pre>
     *                            0x02 - Off                                                                                      
     * </pre>
     *
     * <code>repeated uint32 control_params = 2;</code>
     * @return The count of controlParams.
     */
    public int getControlParamsCount() {
      return controlParams_.size();
    }
    /**
     * <pre>
     *                            0x02 - Off                                                                                      
     * </pre>
     *
     * <code>repeated uint32 control_params = 2;</code>
     * @param index The index of the element to return.
     * @return The controlParams at the given index.
     */
    public int getControlParams(int index) {
      return controlParams_.getInt(index);
    }
    private int controlParamsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (channelIndex_ != 0) {
        output.writeUInt32(1, channelIndex_);
      }
      if (getControlParamsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(controlParamsMemoizedSerializedSize);
      }
      for (int i = 0; i < controlParams_.size(); i++) {
        output.writeUInt32NoTag(controlParams_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (channelIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, channelIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < controlParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(controlParams_.getInt(i));
        }
        size += dataSize;
        if (!getControlParamsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        controlParamsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl)) {
        return super.equals(obj);
      }
      org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl other = (org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl) obj;

      if (getChannelIndex()
          != other.getChannelIndex()) return false;
      if (!getControlParamsList()
          .equals(other.getControlParamsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHANNEL_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getChannelIndex();
      if (getControlParamsCount() > 0) {
        hash = (37 * hash) + CONTROL_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getControlParamsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message containing optional channels control parameters                                                                      
     * </pre>
     *
     * Protobuf type {@code ProtoChannelControl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ProtoChannelControl)
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoChannelControl_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoChannelControl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.class, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder.class);
      }

      // Construct using org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelIndex_ = 0;
        controlParams_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoChannelControl_descriptor;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl getDefaultInstanceForType() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.getDefaultInstance();
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl build() {
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl buildPartial() {
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl result = new org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          controlParams_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.controlParams_ = controlParams_;
      }

      private void buildPartial0(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelIndex_ = channelIndex_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl) {
          return mergeFrom((org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl other) {
        if (other == org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.getDefaultInstance()) return this;
        if (other.getChannelIndex() != 0) {
          setChannelIndex(other.getChannelIndex());
        }
        if (!other.controlParams_.isEmpty()) {
          if (controlParams_.isEmpty()) {
            controlParams_ = other.controlParams_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureControlParamsIsMutable();
            controlParams_.addAll(other.controlParams_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelIndex_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int v = input.readUInt32();
                ensureControlParamsIsMutable();
                controlParams_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureControlParamsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  controlParams_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int channelIndex_ ;
      /**
       * <pre>
       * Channel index                                                                                                              
       * </pre>
       *
       * <code>uint32 channel_index = 1;</code>
       * @return The channelIndex.
       */
      @java.lang.Override
      public int getChannelIndex() {
        return channelIndex_;
      }
      /**
       * <pre>
       * Channel index                                                                                                              
       * </pre>
       *
       * <code>uint32 channel_index = 1;</code>
       * @param value The channelIndex to set.
       * @return This builder for chaining.
       */
      public Builder setChannelIndex(int value) {
        
        channelIndex_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Channel index                                                                                                              
       * </pre>
       *
       * <code>uint32 channel_index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList controlParams_ = emptyIntList();
      private void ensureControlParamsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          controlParams_ = mutableCopy(controlParams_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       *                            0x02 - Off                                                                                      
       * </pre>
       *
       * <code>repeated uint32 control_params = 2;</code>
       * @return A list containing the controlParams.
       */
      public java.util.List<java.lang.Integer>
          getControlParamsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(controlParams_) : controlParams_;
      }
      /**
       * <pre>
       *                            0x02 - Off                                                                                      
       * </pre>
       *
       * <code>repeated uint32 control_params = 2;</code>
       * @return The count of controlParams.
       */
      public int getControlParamsCount() {
        return controlParams_.size();
      }
      /**
       * <pre>
       *                            0x02 - Off                                                                                      
       * </pre>
       *
       * <code>repeated uint32 control_params = 2;</code>
       * @param index The index of the element to return.
       * @return The controlParams at the given index.
       */
      public int getControlParams(int index) {
        return controlParams_.getInt(index);
      }
      /**
       * <pre>
       *                            0x02 - Off                                                                                      
       * </pre>
       *
       * <code>repeated uint32 control_params = 2;</code>
       * @param index The index to set the value at.
       * @param value The controlParams to set.
       * @return This builder for chaining.
       */
      public Builder setControlParams(
          int index, int value) {
        
        ensureControlParamsIsMutable();
        controlParams_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *                            0x02 - Off                                                                                      
       * </pre>
       *
       * <code>repeated uint32 control_params = 2;</code>
       * @param value The controlParams to add.
       * @return This builder for chaining.
       */
      public Builder addControlParams(int value) {
        
        ensureControlParamsIsMutable();
        controlParams_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *                            0x02 - Off                                                                                      
       * </pre>
       *
       * <code>repeated uint32 control_params = 2;</code>
       * @param values The controlParams to add.
       * @return This builder for chaining.
       */
      public Builder addAllControlParams(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureControlParamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, controlParams_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *                            0x02 - Off                                                                                      
       * </pre>
       *
       * <code>repeated uint32 control_params = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearControlParams() {
        controlParams_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ProtoChannelControl)
    }

    // @@protoc_insertion_point(class_scope:ProtoChannelControl)
    private static final org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl();
    }

    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoChannelControl>
        PARSER = new com.google.protobuf.AbstractParser<ProtoChannelControl>() {
      @java.lang.Override
      public ProtoChannelControl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoChannelControl> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoChannelControl> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtoCalibrationParametersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ProtoCalibrationParameters)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *      - calibration_request[0:2] - requested channel number.                                                                
     * </pre>
     *
     * <code>uint32 calibration_request = 1;</code>
     * @return The calibrationRequest.
     */
    int getCalibrationRequest();

    /**
     * <pre>
     * Assignment of a channel.                                                                                                   
     * </pre>
     *
     * <code>uint32 channel_assignment = 2;</code>
     * @return The channelAssignment.
     */
    int getChannelAssignment();

    /**
     * <pre>
     * Table of calibration parameters. Max size = 8.                                                                             
     * </pre>
     *
     * <code>repeated int32 parameters = 3;</code>
     * @return A list containing the parameters.
     */
    java.util.List<java.lang.Integer> getParametersList();
    /**
     * <pre>
     * Table of calibration parameters. Max size = 8.                                                                             
     * </pre>
     *
     * <code>repeated int32 parameters = 3;</code>
     * @return The count of parameters.
     */
    int getParametersCount();
    /**
     * <pre>
     * Table of calibration parameters. Max size = 8.                                                                             
     * </pre>
     *
     * <code>repeated int32 parameters = 3;</code>
     * @param index The index of the element to return.
     * @return The parameters at the given index.
     */
    int getParameters(int index);
  }
  /**
   * <pre>
   * Message containing request data for accesing calibration parameters                                                          
   * </pre>
   *
   * Protobuf type {@code ProtoCalibrationParameters}
   */
  public static final class ProtoCalibrationParameters extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ProtoCalibrationParameters)
      ProtoCalibrationParametersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtoCalibrationParameters.newBuilder() to construct.
    private ProtoCalibrationParameters(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoCalibrationParameters() {
      parameters_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtoCalibrationParameters();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoCalibrationParameters_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoCalibrationParameters_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.class, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.Builder.class);
    }

    public static final int CALIBRATION_REQUEST_FIELD_NUMBER = 1;
    private int calibrationRequest_ = 0;
    /**
     * <pre>
     *      - calibration_request[0:2] - requested channel number.                                                                
     * </pre>
     *
     * <code>uint32 calibration_request = 1;</code>
     * @return The calibrationRequest.
     */
    @java.lang.Override
    public int getCalibrationRequest() {
      return calibrationRequest_;
    }

    public static final int CHANNEL_ASSIGNMENT_FIELD_NUMBER = 2;
    private int channelAssignment_ = 0;
    /**
     * <pre>
     * Assignment of a channel.                                                                                                   
     * </pre>
     *
     * <code>uint32 channel_assignment = 2;</code>
     * @return The channelAssignment.
     */
    @java.lang.Override
    public int getChannelAssignment() {
      return channelAssignment_;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList parameters_;
    /**
     * <pre>
     * Table of calibration parameters. Max size = 8.                                                                             
     * </pre>
     *
     * <code>repeated int32 parameters = 3;</code>
     * @return A list containing the parameters.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getParametersList() {
      return parameters_;
    }
    /**
     * <pre>
     * Table of calibration parameters. Max size = 8.                                                                             
     * </pre>
     *
     * <code>repeated int32 parameters = 3;</code>
     * @return The count of parameters.
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <pre>
     * Table of calibration parameters. Max size = 8.                                                                             
     * </pre>
     *
     * <code>repeated int32 parameters = 3;</code>
     * @param index The index of the element to return.
     * @return The parameters at the given index.
     */
    public int getParameters(int index) {
      return parameters_.getInt(index);
    }
    private int parametersMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (calibrationRequest_ != 0) {
        output.writeUInt32(1, calibrationRequest_);
      }
      if (channelAssignment_ != 0) {
        output.writeUInt32(2, channelAssignment_);
      }
      if (getParametersList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(parametersMemoizedSerializedSize);
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeInt32NoTag(parameters_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (calibrationRequest_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, calibrationRequest_);
      }
      if (channelAssignment_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, channelAssignment_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < parameters_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(parameters_.getInt(i));
        }
        size += dataSize;
        if (!getParametersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        parametersMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters)) {
        return super.equals(obj);
      }
      org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters other = (org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters) obj;

      if (getCalibrationRequest()
          != other.getCalibrationRequest()) return false;
      if (getChannelAssignment()
          != other.getChannelAssignment()) return false;
      if (!getParametersList()
          .equals(other.getParametersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALIBRATION_REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getCalibrationRequest();
      hash = (37 * hash) + CHANNEL_ASSIGNMENT_FIELD_NUMBER;
      hash = (53 * hash) + getChannelAssignment();
      if (getParametersCount() > 0) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParametersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message containing request data for accesing calibration parameters                                                          
     * </pre>
     *
     * Protobuf type {@code ProtoCalibrationParameters}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ProtoCalibrationParameters)
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParametersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoCalibrationParameters_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoCalibrationParameters_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.class, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.Builder.class);
      }

      // Construct using org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        calibrationRequest_ = 0;
        channelAssignment_ = 0;
        parameters_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoCalibrationParameters_descriptor;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters getDefaultInstanceForType() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.getDefaultInstance();
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters build() {
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters buildPartial() {
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters result = new org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters result) {
        if (((bitField0_ & 0x00000004) != 0)) {
          parameters_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.parameters_ = parameters_;
      }

      private void buildPartial0(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.calibrationRequest_ = calibrationRequest_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelAssignment_ = channelAssignment_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters) {
          return mergeFrom((org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters other) {
        if (other == org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.getDefaultInstance()) return this;
        if (other.getCalibrationRequest() != 0) {
          setCalibrationRequest(other.getCalibrationRequest());
        }
        if (other.getChannelAssignment() != 0) {
          setChannelAssignment(other.getChannelAssignment());
        }
        if (!other.parameters_.isEmpty()) {
          if (parameters_.isEmpty()) {
            parameters_ = other.parameters_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureParametersIsMutable();
            parameters_.addAll(other.parameters_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                calibrationRequest_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                channelAssignment_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                int v = input.readInt32();
                ensureParametersIsMutable();
                parameters_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureParametersIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  parameters_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int calibrationRequest_ ;
      /**
       * <pre>
       *      - calibration_request[0:2] - requested channel number.                                                                
       * </pre>
       *
       * <code>uint32 calibration_request = 1;</code>
       * @return The calibrationRequest.
       */
      @java.lang.Override
      public int getCalibrationRequest() {
        return calibrationRequest_;
      }
      /**
       * <pre>
       *      - calibration_request[0:2] - requested channel number.                                                                
       * </pre>
       *
       * <code>uint32 calibration_request = 1;</code>
       * @param value The calibrationRequest to set.
       * @return This builder for chaining.
       */
      public Builder setCalibrationRequest(int value) {
        
        calibrationRequest_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *      - calibration_request[0:2] - requested channel number.                                                                
       * </pre>
       *
       * <code>uint32 calibration_request = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalibrationRequest() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calibrationRequest_ = 0;
        onChanged();
        return this;
      }

      private int channelAssignment_ ;
      /**
       * <pre>
       * Assignment of a channel.                                                                                                   
       * </pre>
       *
       * <code>uint32 channel_assignment = 2;</code>
       * @return The channelAssignment.
       */
      @java.lang.Override
      public int getChannelAssignment() {
        return channelAssignment_;
      }
      /**
       * <pre>
       * Assignment of a channel.                                                                                                   
       * </pre>
       *
       * <code>uint32 channel_assignment = 2;</code>
       * @param value The channelAssignment to set.
       * @return This builder for chaining.
       */
      public Builder setChannelAssignment(int value) {
        
        channelAssignment_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Assignment of a channel.                                                                                                   
       * </pre>
       *
       * <code>uint32 channel_assignment = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelAssignment() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelAssignment_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList parameters_ = emptyIntList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          parameters_ = mutableCopy(parameters_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * Table of calibration parameters. Max size = 8.                                                                             
       * </pre>
       *
       * <code>repeated int32 parameters = 3;</code>
       * @return A list containing the parameters.
       */
      public java.util.List<java.lang.Integer>
          getParametersList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(parameters_) : parameters_;
      }
      /**
       * <pre>
       * Table of calibration parameters. Max size = 8.                                                                             
       * </pre>
       *
       * <code>repeated int32 parameters = 3;</code>
       * @return The count of parameters.
       */
      public int getParametersCount() {
        return parameters_.size();
      }
      /**
       * <pre>
       * Table of calibration parameters. Max size = 8.                                                                             
       * </pre>
       *
       * <code>repeated int32 parameters = 3;</code>
       * @param index The index of the element to return.
       * @return The parameters at the given index.
       */
      public int getParameters(int index) {
        return parameters_.getInt(index);
      }
      /**
       * <pre>
       * Table of calibration parameters. Max size = 8.                                                                             
       * </pre>
       *
       * <code>repeated int32 parameters = 3;</code>
       * @param index The index to set the value at.
       * @param value The parameters to set.
       * @return This builder for chaining.
       */
      public Builder setParameters(
          int index, int value) {
        
        ensureParametersIsMutable();
        parameters_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Table of calibration parameters. Max size = 8.                                                                             
       * </pre>
       *
       * <code>repeated int32 parameters = 3;</code>
       * @param value The parameters to add.
       * @return This builder for chaining.
       */
      public Builder addParameters(int value) {
        
        ensureParametersIsMutable();
        parameters_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Table of calibration parameters. Max size = 8.                                                                             
       * </pre>
       *
       * <code>repeated int32 parameters = 3;</code>
       * @param values The parameters to add.
       * @return This builder for chaining.
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureParametersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameters_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Table of calibration parameters. Max size = 8.                                                                             
       * </pre>
       *
       * <code>repeated int32 parameters = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameters() {
        parameters_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ProtoCalibrationParameters)
    }

    // @@protoc_insertion_point(class_scope:ProtoCalibrationParameters)
    private static final org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters();
    }

    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoCalibrationParameters>
        PARSER = new com.google.protobuf.AbstractParser<ProtoCalibrationParameters>() {
      @java.lang.Override
      public ProtoCalibrationParameters parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoCalibrationParameters> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoCalibrationParameters> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtoConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ProtoConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Range [1:65535] - minimum value can vary depends on installed sensors 
     * </pre>
     *
     * <code>uint32 measurement_period_base = 2;</code>
     * @return The measurementPeriodBase.
     */
    int getMeasurementPeriodBase();

    /**
     * <pre>
     * Range [1:65535] - minimum value can vary depends on installed sensors 
     * </pre>
     *
     * <code>uint32 measurement_period_factor = 26;</code>
     * @return The measurementPeriodFactor.
     */
    int getMeasurementPeriodFactor();

    /**
     * <pre>
     * Transmission interval in seconds. Range: [60:604800]                                                                       
     * </pre>
     *
     * <code>uint32 transmission_interval = 3;</code>
     * @return The transmissionInterval.
     */
    int getTransmissionInterval();

    /**
     * <pre>
     * 0xFFFFFFFF  - always on                                                                                                    
     * </pre>
     *
     * <code>uint32 ble_turnoff_time = 4;</code>
     * @return The bleTurnoffTime.
     */
    int getBleTurnoffTime();

    /**
     * <pre>
     * 0xFFFFFFFF  - always request ACK                                                                                           
     * </pre>
     *
     * <code>uint32 ack_interval = 5;</code>
     * @return The ackInterval.
     */
    int getAckInterval();

    /**
     * <pre>
     * device info. This field is only sent by server                                                                             
     * </pre>
     *
     * <code>bool request_device_info = 6;</code>
     * @return The requestDeviceInfo.
     */
    boolean getRequestDeviceInfo();

    /**
     * <pre>
     * Specifies, if software update is available. This field is only sent by server                                              
     * </pre>
     *
     * <code>bool request_fw_update = 7;</code>
     * @return The requestFwUpdate.
     */
    boolean getRequestFwUpdate();

    /**
     * <pre>
     * Current time in seconds sine 1st of January 1970 (epoch time).                                                             
     * </pre>
     *
     * <code>uint32 current_time = 8;</code>
     * @return The currentTime.
     */
    int getCurrentTime();

    /**
     * <pre>
     * 65535 - disable transfer limit function                                                                                    
     * </pre>
     *
     * <code>uint32 transfer_limit = 9;</code>
     * @return The transferLimit.
     */
    int getTransferLimit();

    /**
     * <pre>
     * 65535 - disable transfer limit function                                                                                    
     * </pre>
     *
     * <code>uint32 transfer_limit_timer = 10;</code>
     * @return The transferLimitTimer.
     */
    int getTransferLimitTimer();

    /**
     * <pre>
     * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
     * </pre>
     *
     * <code>string data_server_ip = 11;</code>
     * @return The dataServerIp.
     */
    java.lang.String getDataServerIp();
    /**
     * <pre>
     * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
     * </pre>
     *
     * <code>string data_server_ip = 11;</code>
     * @return The bytes for dataServerIp.
     */
    com.google.protobuf.ByteString
        getDataServerIpBytes();

    /**
     * <pre>
     * Range: [1:65535]                                                                                                           
     * </pre>
     *
     * <code>uint32 data_server_port = 12;</code>
     * @return The dataServerPort.
     */
    int getDataServerPort();

    /**
     * <pre>
     * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
     * </pre>
     *
     * <code>string update_server_ip = 13;</code>
     * @return The updateServerIp.
     */
    java.lang.String getUpdateServerIp();
    /**
     * <pre>
     * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
     * </pre>
     *
     * <code>string update_server_ip = 13;</code>
     * @return The bytes for updateServerIp.
     */
    com.google.protobuf.ByteString
        getUpdateServerIpBytes();

    /**
     * <pre>
     * Range: [1:65535]                                                                                                           
     * </pre>
     *
     * <code>uint32 update_server_port_udp = 14;</code>
     * @return The updateServerPortUdp.
     */
    int getUpdateServerPortUdp();

    /**
     * <pre>
     * Range: [1:65535]                                                                                                           
     * </pre>
     *
     * <code>uint32 update_server_port_coap = 15;</code>
     * @return The updateServerPortCoap.
     */
    int getUpdateServerPortCoap();

    /**
     * <pre>
     * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
     * </pre>
     *
     * <code>string apn = 16;</code>
     * @return The apn.
     */
    java.lang.String getApn();
    /**
     * <pre>
     * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
     * </pre>
     *
     * <code>string apn = 16;</code>
     * @return The bytes for apn.
     */
    com.google.protobuf.ByteString
        getApnBytes();

    /**
     * <pre>
     * 0xFFFFFFFF or 1000000 - automatic selection                                                                                
     * </pre>
     *
     * <code>uint32 plmn_selection = 17;</code>
     * @return The plmnSelection.
     */
    int getPlmnSelection();

    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>uint32 disable_modem_request = 18;</code>
     * @return The disableModemRequest.
     */
    int getDisableModemRequest();

    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>bool request_configuration = 19;</code>
     * @return The requestConfiguration.
     */
    boolean getRequestConfiguration();

    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated uint32 errors = 20;</code>
     * @return A list containing the errors.
     */
    java.util.List<java.lang.Integer> getErrorsList();
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated uint32 errors = 20;</code>
     * @return The count of errors.
     */
    int getErrorsCount();
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated uint32 errors = 20;</code>
     * @param index The index of the element to return.
     * @return The errors at the given index.
     */
    int getErrors(int index);

    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>uint32 hash = 21;</code>
     * @return The hash.
     */
    int getHash();

    /**
     * <pre>
     * If true, the device will accept the configuration without functional testing (eg. network connection)                      
     * </pre>
     *
     * <code>bool accept_without_testing = 22;</code>
     * @return The acceptWithoutTesting.
     */
    boolean getAcceptWithoutTesting();

    /**
     * <pre>
     *   - 255: do not send cloud_token field                                                                                     
     * </pre>
     *
     * <code>uint32 cloud_token_config = 23;</code>
     * @return The cloudTokenConfig.
     */
    int getCloudTokenConfig();

    /**
     * <pre>
     * Cloud token that should be sent with each measurement frame                                                                
     * </pre>
     *
     * <code>string cloud_token = 24;</code>
     * @return The cloudToken.
     */
    java.lang.String getCloudToken();
    /**
     * <pre>
     * Cloud token that should be sent with each measurement frame                                                                
     * </pre>
     *
     * <code>string cloud_token = 24;</code>
     * @return The bytes for cloudToken.
     */
    com.google.protobuf.ByteString
        getCloudTokenBytes();

    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>bytes serial_number = 25;</code>
     * @return The serialNumber.
     */
    com.google.protobuf.ByteString getSerialNumber();

    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @return A list containing the channelTypes.
     */
    java.util.List<org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType> getChannelTypesList();
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @return The count of channelTypes.
     */
    int getChannelTypesCount();
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @param index The index of the element to return.
     * @return The channelTypes at the given index.
     */
    org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType getChannelTypes(int index);
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @return A list containing the enum numeric values on the wire for channelTypes.
     */
    java.util.List<java.lang.Integer>
    getChannelTypesValueList();
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of channelTypes at the given index.
     */
    int getChannelTypesValue(int index);

    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule> 
        getRulesList();
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule getRules(int index);
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    int getRulesCount();
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    java.util.List<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder> 
        getRulesOrBuilderList();
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder getRulesOrBuilder(
        int index);

    /**
     * <pre>
     * 0xFFFFFFFF - Functionality disabled                                                                                        
     * </pre>
     *
     * <code>uint32 supervision_period = 29;</code>
     * @return The supervisionPeriod.
     */
    int getSupervisionPeriod();

    /**
     * <pre>
     * If true, sensor's measurement memory will be erased                                                                        
     * </pre>
     *
     * <code>bool memory_reset_request = 30;</code>
     * @return The memoryResetRequest.
     */
    boolean getMemoryResetRequest();

    /**
     * <pre>
     * example: To enable band 3, 8 and 20 set to  (1 &lt;&lt; 2) + (1 &lt;&lt; 5) + (1 &lt;&lt; 11) = 2084                                         
     * </pre>
     *
     * <code>uint32 modem_bands_mask = 31;</code>
     * @return The modemBandsMask.
     */
    int getModemBandsMask();

    /**
     * <pre>
     * Data endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string data_endpoint = 32;</code>
     * @return The dataEndpoint.
     */
    java.lang.String getDataEndpoint();
    /**
     * <pre>
     * Data endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string data_endpoint = 32;</code>
     * @return The bytes for dataEndpoint.
     */
    com.google.protobuf.ByteString
        getDataEndpointBytes();

    /**
     * <pre>
     * Configuration endpoint (string - max length 16)                                                                            
     * </pre>
     *
     * <code>string configuration_endpoint = 33;</code>
     * @return The configurationEndpoint.
     */
    java.lang.String getConfigurationEndpoint();
    /**
     * <pre>
     * Configuration endpoint (string - max length 16)                                                                            
     * </pre>
     *
     * <code>string configuration_endpoint = 33;</code>
     * @return The bytes for configurationEndpoint.
     */
    com.google.protobuf.ByteString
        getConfigurationEndpointBytes();

    /**
     * <pre>
     * Device info endpoint (string - max length 16)                                                                              
     * </pre>
     *
     * <code>string device_info_endpoint = 34;</code>
     * @return The deviceInfoEndpoint.
     */
    java.lang.String getDeviceInfoEndpoint();
    /**
     * <pre>
     * Device info endpoint (string - max length 16)                                                                              
     * </pre>
     *
     * <code>string device_info_endpoint = 34;</code>
     * @return The bytes for deviceInfoEndpoint.
     */
    com.google.protobuf.ByteString
        getDeviceInfoEndpointBytes();

    /**
     * <pre>
     * Time endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string time_endpoint = 35;</code>
     * @return The timeEndpoint.
     */
    java.lang.String getTimeEndpoint();
    /**
     * <pre>
     * Time endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string time_endpoint = 35;</code>
     * @return The bytes for timeEndpoint.
     */
    com.google.protobuf.ByteString
        getTimeEndpointBytes();

    /**
     * <pre>
     * Range: [1:4]                                                                                                               
     * </pre>
     *
     * <code>uint32 ble_tx_power_level = 36;</code>
     * @return The bleTxPowerLevel.
     */
    int getBleTxPowerLevel();

    /**
     * <pre>
     * If true, the sensor's runtime errors will be cleared                                                                       
     * </pre>
     *
     * <code>bool request_runtime_errors_clear = 37;</code>
     * @return The requestRuntimeErrorsClear.
     */
    boolean getRequestRuntimeErrorsClear();

    /**
     * <pre>
     * Timestamp when a new error code was reported                                                                               
     * </pre>
     *
     * <code>uint32 error_timestamp = 38;</code>
     * @return The errorTimestamp.
     */
    int getErrorTimestamp();

    /**
     * <pre>
     * Timestamp when the new configuration was set                                                                               
     * </pre>
     *
     * <code>uint32 hash_timestamp = 39;</code>
     * @return The hashTimestamp.
     */
    int getHashTimestamp();

    /**
     * <pre>
     *   - 65000 - cloud token sent in the payload                                                                                
     * </pre>
     *
     * <code>uint32 cloud_token_coap_option = 40;</code>
     * @return The cloudTokenCoapOption.
     */
    int getCloudTokenCoapOption();

    /**
     * <pre>
     *   - 65000 - no payload signature in CoAP option                                                                            
     * </pre>
     *
     * <code>uint32 payload_signature_coap_option = 41;</code>
     * @return The payloadSignatureCoapOption.
     */
    int getPayloadSignatureCoapOption();

    /**
     * <pre>
     * Note: when setting less than four octets the remaining will be filled with zeros.                                          
     * </pre>
     *
     * <code>repeated uint32 dns_server_ip = 42;</code>
     * @return A list containing the dnsServerIp.
     */
    java.util.List<java.lang.Integer> getDnsServerIpList();
    /**
     * <pre>
     * Note: when setting less than four octets the remaining will be filled with zeros.                                          
     * </pre>
     *
     * <code>repeated uint32 dns_server_ip = 42;</code>
     * @return The count of dnsServerIp.
     */
    int getDnsServerIpCount();
    /**
     * <pre>
     * Note: when setting less than four octets the remaining will be filled with zeros.                                          
     * </pre>
     *
     * <code>repeated uint32 dns_server_ip = 42;</code>
     * @param index The index of the element to return.
     * @return The dnsServerIp at the given index.
     */
    int getDnsServerIp(int index);

    /**
     * <pre>
     *   - 864002 - DNS request is only after communication failed                                                                
     * </pre>
     *
     * <code>uint32 dns_ttl_config = 43;</code>
     * @return The dnsTtlConfig.
     */
    int getDnsTtlConfig();

    /**
     * <pre>
     * values &gt; 0 - last part of the split payload, the value indicates the total number of the messages sent                     
     * </pre>
     *
     * <code>sint32 payload_split_info = 44;</code>
     * @return The payloadSplitInfo.
     */
    int getPayloadSplitInfo();

    /**
     * <pre>
     * For BC66 module, this field is a DFOTA URL                                                                                 
     * </pre>
     *
     * <code>string modem_update_request = 45;</code>
     * @return The modemUpdateRequest.
     */
    java.lang.String getModemUpdateRequest();
    /**
     * <pre>
     * For BC66 module, this field is a DFOTA URL                                                                                 
     * </pre>
     *
     * <code>string modem_update_request = 45;</code>
     * @return The bytes for modemUpdateRequest.
     */
    com.google.protobuf.ByteString
        getModemUpdateRequestBytes();

    /**
     * <pre>
     * 2nd - 12th items - Cellular parameters                                                                                     
     * </pre>
     *
     * <code>repeated uint32 cellular_config_params = 46;</code>
     * @return A list containing the cellularConfigParams.
     */
    java.util.List<java.lang.Integer> getCellularConfigParamsList();
    /**
     * <pre>
     * 2nd - 12th items - Cellular parameters                                                                                     
     * </pre>
     *
     * <code>repeated uint32 cellular_config_params = 46;</code>
     * @return The count of cellularConfigParams.
     */
    int getCellularConfigParamsCount();
    /**
     * <pre>
     * 2nd - 12th items - Cellular parameters                                                                                     
     * </pre>
     *
     * <code>repeated uint32 cellular_config_params = 46;</code>
     * @param index The index of the element to return.
     * @return The cellularConfigParams at the given index.
     */
    int getCellularConfigParams(int index);

    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar> 
        getCalendarsList();
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar getCalendars(int index);
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    int getCalendarsCount();
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    java.util.List<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder> 
        getCalendarsOrBuilderList();
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder getCalendarsOrBuilder(
        int index);

    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    java.util.List<org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl> 
        getChannelsControlRequestList();
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl getChannelsControlRequest(int index);
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    int getChannelsControlRequestCount();
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    java.util.List<? extends org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder> 
        getChannelsControlRequestOrBuilderList();
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder getChannelsControlRequestOrBuilder(
        int index);

    /**
     * <pre>
     * Set/get calibration parameters for single channel.                                                                         
     * </pre>
     *
     * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
     * @return Whether the calibrationParametersRequest field is set.
     */
    boolean hasCalibrationParametersRequest();
    /**
     * <pre>
     * Set/get calibration parameters for single channel.                                                                         
     * </pre>
     *
     * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
     * @return The calibrationParametersRequest.
     */
    org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters getCalibrationParametersRequest();
    /**
     * <pre>
     * Set/get calibration parameters for single channel.                                                                         
     * </pre>
     *
     * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
     */
    org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParametersOrBuilder getCalibrationParametersRequestOrBuilder();

    /**
     * <pre>
     *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
     * </pre>
     *
     * <code>repeated uint32 led_config = 50;</code>
     * @return A list containing the ledConfig.
     */
    java.util.List<java.lang.Integer> getLedConfigList();
    /**
     * <pre>
     *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
     * </pre>
     *
     * <code>repeated uint32 led_config = 50;</code>
     * @return The count of ledConfig.
     */
    int getLedConfigCount();
    /**
     * <pre>
     *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
     * </pre>
     *
     * <code>repeated uint32 led_config = 50;</code>
     * @param index The index of the element to return.
     * @return The ledConfig at the given index.
     */
    int getLedConfig(int index);

    /**
     * <pre>
     *   - 2: network troubleshooting enabled                                                                                     
     * </pre>
     *
     * <code>uint32 network_troubleshooting = 51;</code>
     * @return The networkTroubleshooting.
     */
    int getNetworkTroubleshooting();

    /**
     * <pre>
     * 0x7F - encryption key disabled.                                                                                            
     * </pre>
     *
     * <code>bytes encryption_key = 54;</code>
     * @return The encryptionKey.
     */
    com.google.protobuf.ByteString getEncryptionKey();

    /**
     * <pre>
     * User name can only be set to custom value if apn has been configured (is not automatic)                                    
     * </pre>
     *
     * <code>string apn_user_name = 55;</code>
     * @return The apnUserName.
     */
    java.lang.String getApnUserName();
    /**
     * <pre>
     * User name can only be set to custom value if apn has been configured (is not automatic)                                    
     * </pre>
     *
     * <code>string apn_user_name = 55;</code>
     * @return The bytes for apnUserName.
     */
    com.google.protobuf.ByteString
        getApnUserNameBytes();

    /**
     * <pre>
     * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
     * </pre>
     *
     * <code>string apn_password = 56;</code>
     * @return The apnPassword.
     */
    java.lang.String getApnPassword();
    /**
     * <pre>
     * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
     * </pre>
     *
     * <code>string apn_password = 56;</code>
     * @return The bytes for apnPassword.
     */
    com.google.protobuf.ByteString
        getApnPasswordBytes();
  }
  /**
   * <pre>
   * If the value of a selected parameter shall not be changed, do not include it in the payload                                  
   * </pre>
   *
   * Protobuf type {@code ProtoConfig}
   */
  public static final class ProtoConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ProtoConfig)
      ProtoConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtoConfig.newBuilder() to construct.
    private ProtoConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoConfig() {
      dataServerIp_ = "";
      updateServerIp_ = "";
      apn_ = "";
      errors_ = emptyIntList();
      cloudToken_ = "";
      serialNumber_ = com.google.protobuf.ByteString.EMPTY;
      channelTypes_ = java.util.Collections.emptyList();
      rules_ = java.util.Collections.emptyList();
      dataEndpoint_ = "";
      configurationEndpoint_ = "";
      deviceInfoEndpoint_ = "";
      timeEndpoint_ = "";
      dnsServerIp_ = emptyIntList();
      modemUpdateRequest_ = "";
      cellularConfigParams_ = emptyIntList();
      calendars_ = java.util.Collections.emptyList();
      channelsControlRequest_ = java.util.Collections.emptyList();
      ledConfig_ = emptyIntList();
      encryptionKey_ = com.google.protobuf.ByteString.EMPTY;
      apnUserName_ = "";
      apnPassword_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtoConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig.class, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig.Builder.class);
    }

    public static final int MEASUREMENT_PERIOD_BASE_FIELD_NUMBER = 2;
    private int measurementPeriodBase_ = 0;
    /**
     * <pre>
     * Range [1:65535] - minimum value can vary depends on installed sensors 
     * </pre>
     *
     * <code>uint32 measurement_period_base = 2;</code>
     * @return The measurementPeriodBase.
     */
    @java.lang.Override
    public int getMeasurementPeriodBase() {
      return measurementPeriodBase_;
    }

    public static final int MEASUREMENT_PERIOD_FACTOR_FIELD_NUMBER = 26;
    private int measurementPeriodFactor_ = 0;
    /**
     * <pre>
     * Range [1:65535] - minimum value can vary depends on installed sensors 
     * </pre>
     *
     * <code>uint32 measurement_period_factor = 26;</code>
     * @return The measurementPeriodFactor.
     */
    @java.lang.Override
    public int getMeasurementPeriodFactor() {
      return measurementPeriodFactor_;
    }

    public static final int TRANSMISSION_INTERVAL_FIELD_NUMBER = 3;
    private int transmissionInterval_ = 0;
    /**
     * <pre>
     * Transmission interval in seconds. Range: [60:604800]                                                                       
     * </pre>
     *
     * <code>uint32 transmission_interval = 3;</code>
     * @return The transmissionInterval.
     */
    @java.lang.Override
    public int getTransmissionInterval() {
      return transmissionInterval_;
    }

    public static final int BLE_TURNOFF_TIME_FIELD_NUMBER = 4;
    private int bleTurnoffTime_ = 0;
    /**
     * <pre>
     * 0xFFFFFFFF  - always on                                                                                                    
     * </pre>
     *
     * <code>uint32 ble_turnoff_time = 4;</code>
     * @return The bleTurnoffTime.
     */
    @java.lang.Override
    public int getBleTurnoffTime() {
      return bleTurnoffTime_;
    }

    public static final int ACK_INTERVAL_FIELD_NUMBER = 5;
    private int ackInterval_ = 0;
    /**
     * <pre>
     * 0xFFFFFFFF  - always request ACK                                                                                           
     * </pre>
     *
     * <code>uint32 ack_interval = 5;</code>
     * @return The ackInterval.
     */
    @java.lang.Override
    public int getAckInterval() {
      return ackInterval_;
    }

    public static final int REQUEST_DEVICE_INFO_FIELD_NUMBER = 6;
    private boolean requestDeviceInfo_ = false;
    /**
     * <pre>
     * device info. This field is only sent by server                                                                             
     * </pre>
     *
     * <code>bool request_device_info = 6;</code>
     * @return The requestDeviceInfo.
     */
    @java.lang.Override
    public boolean getRequestDeviceInfo() {
      return requestDeviceInfo_;
    }

    public static final int REQUEST_FW_UPDATE_FIELD_NUMBER = 7;
    private boolean requestFwUpdate_ = false;
    /**
     * <pre>
     * Specifies, if software update is available. This field is only sent by server                                              
     * </pre>
     *
     * <code>bool request_fw_update = 7;</code>
     * @return The requestFwUpdate.
     */
    @java.lang.Override
    public boolean getRequestFwUpdate() {
      return requestFwUpdate_;
    }

    public static final int CURRENT_TIME_FIELD_NUMBER = 8;
    private int currentTime_ = 0;
    /**
     * <pre>
     * Current time in seconds sine 1st of January 1970 (epoch time).                                                             
     * </pre>
     *
     * <code>uint32 current_time = 8;</code>
     * @return The currentTime.
     */
    @java.lang.Override
    public int getCurrentTime() {
      return currentTime_;
    }

    public static final int TRANSFER_LIMIT_FIELD_NUMBER = 9;
    private int transferLimit_ = 0;
    /**
     * <pre>
     * 65535 - disable transfer limit function                                                                                    
     * </pre>
     *
     * <code>uint32 transfer_limit = 9;</code>
     * @return The transferLimit.
     */
    @java.lang.Override
    public int getTransferLimit() {
      return transferLimit_;
    }

    public static final int TRANSFER_LIMIT_TIMER_FIELD_NUMBER = 10;
    private int transferLimitTimer_ = 0;
    /**
     * <pre>
     * 65535 - disable transfer limit function                                                                                    
     * </pre>
     *
     * <code>uint32 transfer_limit_timer = 10;</code>
     * @return The transferLimitTimer.
     */
    @java.lang.Override
    public int getTransferLimitTimer() {
      return transferLimitTimer_;
    }

    public static final int DATA_SERVER_IP_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private volatile java.lang.Object dataServerIp_ = "";
    /**
     * <pre>
     * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
     * </pre>
     *
     * <code>string data_server_ip = 11;</code>
     * @return The dataServerIp.
     */
    @java.lang.Override
    public java.lang.String getDataServerIp() {
      java.lang.Object ref = dataServerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataServerIp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
     * </pre>
     *
     * <code>string data_server_ip = 11;</code>
     * @return The bytes for dataServerIp.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataServerIpBytes() {
      java.lang.Object ref = dataServerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataServerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_SERVER_PORT_FIELD_NUMBER = 12;
    private int dataServerPort_ = 0;
    /**
     * <pre>
     * Range: [1:65535]                                                                                                           
     * </pre>
     *
     * <code>uint32 data_server_port = 12;</code>
     * @return The dataServerPort.
     */
    @java.lang.Override
    public int getDataServerPort() {
      return dataServerPort_;
    }

    public static final int UPDATE_SERVER_IP_FIELD_NUMBER = 13;
    @SuppressWarnings("serial")
    private volatile java.lang.Object updateServerIp_ = "";
    /**
     * <pre>
     * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
     * </pre>
     *
     * <code>string update_server_ip = 13;</code>
     * @return The updateServerIp.
     */
    @java.lang.Override
    public java.lang.String getUpdateServerIp() {
      java.lang.Object ref = updateServerIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        updateServerIp_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
     * </pre>
     *
     * <code>string update_server_ip = 13;</code>
     * @return The bytes for updateServerIp.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUpdateServerIpBytes() {
      java.lang.Object ref = updateServerIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        updateServerIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UPDATE_SERVER_PORT_UDP_FIELD_NUMBER = 14;
    private int updateServerPortUdp_ = 0;
    /**
     * <pre>
     * Range: [1:65535]                                                                                                           
     * </pre>
     *
     * <code>uint32 update_server_port_udp = 14;</code>
     * @return The updateServerPortUdp.
     */
    @java.lang.Override
    public int getUpdateServerPortUdp() {
      return updateServerPortUdp_;
    }

    public static final int UPDATE_SERVER_PORT_COAP_FIELD_NUMBER = 15;
    private int updateServerPortCoap_ = 0;
    /**
     * <pre>
     * Range: [1:65535]                                                                                                           
     * </pre>
     *
     * <code>uint32 update_server_port_coap = 15;</code>
     * @return The updateServerPortCoap.
     */
    @java.lang.Override
    public int getUpdateServerPortCoap() {
      return updateServerPortCoap_;
    }

    public static final int APN_FIELD_NUMBER = 16;
    @SuppressWarnings("serial")
    private volatile java.lang.Object apn_ = "";
    /**
     * <pre>
     * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
     * </pre>
     *
     * <code>string apn = 16;</code>
     * @return The apn.
     */
    @java.lang.Override
    public java.lang.String getApn() {
      java.lang.Object ref = apn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
     * </pre>
     *
     * <code>string apn = 16;</code>
     * @return The bytes for apn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getApnBytes() {
      java.lang.Object ref = apn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLMN_SELECTION_FIELD_NUMBER = 17;
    private int plmnSelection_ = 0;
    /**
     * <pre>
     * 0xFFFFFFFF or 1000000 - automatic selection                                                                                
     * </pre>
     *
     * <code>uint32 plmn_selection = 17;</code>
     * @return The plmnSelection.
     */
    @java.lang.Override
    public int getPlmnSelection() {
      return plmnSelection_;
    }

    public static final int DISABLE_MODEM_REQUEST_FIELD_NUMBER = 18;
    private int disableModemRequest_ = 0;
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>uint32 disable_modem_request = 18;</code>
     * @return The disableModemRequest.
     */
    @java.lang.Override
    public int getDisableModemRequest() {
      return disableModemRequest_;
    }

    public static final int REQUEST_CONFIGURATION_FIELD_NUMBER = 19;
    private boolean requestConfiguration_ = false;
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>bool request_configuration = 19;</code>
     * @return The requestConfiguration.
     */
    @java.lang.Override
    public boolean getRequestConfiguration() {
      return requestConfiguration_;
    }

    public static final int ERRORS_FIELD_NUMBER = 20;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList errors_;
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated uint32 errors = 20;</code>
     * @return A list containing the errors.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getErrorsList() {
      return errors_;
    }
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated uint32 errors = 20;</code>
     * @return The count of errors.
     */
    public int getErrorsCount() {
      return errors_.size();
    }
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated uint32 errors = 20;</code>
     * @param index The index of the element to return.
     * @return The errors at the given index.
     */
    public int getErrors(int index) {
      return errors_.getInt(index);
    }
    private int errorsMemoizedSerializedSize = -1;

    public static final int HASH_FIELD_NUMBER = 21;
    private int hash_ = 0;
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>uint32 hash = 21;</code>
     * @return The hash.
     */
    @java.lang.Override
    public int getHash() {
      return hash_;
    }

    public static final int ACCEPT_WITHOUT_TESTING_FIELD_NUMBER = 22;
    private boolean acceptWithoutTesting_ = false;
    /**
     * <pre>
     * If true, the device will accept the configuration without functional testing (eg. network connection)                      
     * </pre>
     *
     * <code>bool accept_without_testing = 22;</code>
     * @return The acceptWithoutTesting.
     */
    @java.lang.Override
    public boolean getAcceptWithoutTesting() {
      return acceptWithoutTesting_;
    }

    public static final int CLOUD_TOKEN_CONFIG_FIELD_NUMBER = 23;
    private int cloudTokenConfig_ = 0;
    /**
     * <pre>
     *   - 255: do not send cloud_token field                                                                                     
     * </pre>
     *
     * <code>uint32 cloud_token_config = 23;</code>
     * @return The cloudTokenConfig.
     */
    @java.lang.Override
    public int getCloudTokenConfig() {
      return cloudTokenConfig_;
    }

    public static final int CLOUD_TOKEN_FIELD_NUMBER = 24;
    @SuppressWarnings("serial")
    private volatile java.lang.Object cloudToken_ = "";
    /**
     * <pre>
     * Cloud token that should be sent with each measurement frame                                                                
     * </pre>
     *
     * <code>string cloud_token = 24;</code>
     * @return The cloudToken.
     */
    @java.lang.Override
    public java.lang.String getCloudToken() {
      java.lang.Object ref = cloudToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cloudToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Cloud token that should be sent with each measurement frame                                                                
     * </pre>
     *
     * <code>string cloud_token = 24;</code>
     * @return The bytes for cloudToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCloudTokenBytes() {
      java.lang.Object ref = cloudToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cloudToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIAL_NUMBER_FIELD_NUMBER = 25;
    private com.google.protobuf.ByteString serialNumber_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>bytes serial_number = 25;</code>
     * @return The serialNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSerialNumber() {
      return serialNumber_;
    }

    public static final int CHANNEL_TYPES_FIELD_NUMBER = 27;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> channelTypes_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType> channelTypes_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType>() {
              public org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType convert(java.lang.Integer from) {
                org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType result = org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType.forNumber(from);
                return result == null ? org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @return A list containing the channelTypes.
     */
    @java.lang.Override
    public java.util.List<org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType> getChannelTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType>(channelTypes_, channelTypes_converter_);
    }
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @return The count of channelTypes.
     */
    @java.lang.Override
    public int getChannelTypesCount() {
      return channelTypes_.size();
    }
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @param index The index of the element to return.
     * @return The channelTypes at the given index.
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType getChannelTypes(int index) {
      return channelTypes_converter_.convert(channelTypes_.get(index));
    }
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @return A list containing the enum numeric values on the wire for channelTypes.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getChannelTypesValueList() {
      return channelTypes_;
    }
    /**
     * <pre>
     * This field is only sent by device                                                                                          
     * </pre>
     *
     * <code>repeated .MeasurementType channel_types = 27;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of channelTypes at the given index.
     */
    @java.lang.Override
    public int getChannelTypesValue(int index) {
      return channelTypes_.get(index);
    }
    private int channelTypesMemoizedSerializedSize;

    public static final int RULES_FIELD_NUMBER = 28;
    @SuppressWarnings("serial")
    private java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule> rules_;
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    @java.lang.Override
    public java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule> getRulesList() {
      return rules_;
    }
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder> 
        getRulesOrBuilderList() {
      return rules_;
    }
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    @java.lang.Override
    public int getRulesCount() {
      return rules_.size();
    }
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule getRules(int index) {
      return rules_.get(index);
    }
    /**
     * <pre>
     * Edge logic rules set on the device. Up to 12 rules are supported                                                           
     * </pre>
     *
     * <code>repeated .ProtoRule rules = 28;</code>
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder getRulesOrBuilder(
        int index) {
      return rules_.get(index);
    }

    public static final int SUPERVISION_PERIOD_FIELD_NUMBER = 29;
    private int supervisionPeriod_ = 0;
    /**
     * <pre>
     * 0xFFFFFFFF - Functionality disabled                                                                                        
     * </pre>
     *
     * <code>uint32 supervision_period = 29;</code>
     * @return The supervisionPeriod.
     */
    @java.lang.Override
    public int getSupervisionPeriod() {
      return supervisionPeriod_;
    }

    public static final int MEMORY_RESET_REQUEST_FIELD_NUMBER = 30;
    private boolean memoryResetRequest_ = false;
    /**
     * <pre>
     * If true, sensor's measurement memory will be erased                                                                        
     * </pre>
     *
     * <code>bool memory_reset_request = 30;</code>
     * @return The memoryResetRequest.
     */
    @java.lang.Override
    public boolean getMemoryResetRequest() {
      return memoryResetRequest_;
    }

    public static final int MODEM_BANDS_MASK_FIELD_NUMBER = 31;
    private int modemBandsMask_ = 0;
    /**
     * <pre>
     * example: To enable band 3, 8 and 20 set to  (1 &lt;&lt; 2) + (1 &lt;&lt; 5) + (1 &lt;&lt; 11) = 2084                                         
     * </pre>
     *
     * <code>uint32 modem_bands_mask = 31;</code>
     * @return The modemBandsMask.
     */
    @java.lang.Override
    public int getModemBandsMask() {
      return modemBandsMask_;
    }

    public static final int DATA_ENDPOINT_FIELD_NUMBER = 32;
    @SuppressWarnings("serial")
    private volatile java.lang.Object dataEndpoint_ = "";
    /**
     * <pre>
     * Data endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string data_endpoint = 32;</code>
     * @return The dataEndpoint.
     */
    @java.lang.Override
    public java.lang.String getDataEndpoint() {
      java.lang.Object ref = dataEndpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dataEndpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Data endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string data_endpoint = 32;</code>
     * @return The bytes for dataEndpoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDataEndpointBytes() {
      java.lang.Object ref = dataEndpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dataEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIGURATION_ENDPOINT_FIELD_NUMBER = 33;
    @SuppressWarnings("serial")
    private volatile java.lang.Object configurationEndpoint_ = "";
    /**
     * <pre>
     * Configuration endpoint (string - max length 16)                                                                            
     * </pre>
     *
     * <code>string configuration_endpoint = 33;</code>
     * @return The configurationEndpoint.
     */
    @java.lang.Override
    public java.lang.String getConfigurationEndpoint() {
      java.lang.Object ref = configurationEndpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        configurationEndpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Configuration endpoint (string - max length 16)                                                                            
     * </pre>
     *
     * <code>string configuration_endpoint = 33;</code>
     * @return The bytes for configurationEndpoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getConfigurationEndpointBytes() {
      java.lang.Object ref = configurationEndpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        configurationEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICE_INFO_ENDPOINT_FIELD_NUMBER = 34;
    @SuppressWarnings("serial")
    private volatile java.lang.Object deviceInfoEndpoint_ = "";
    /**
     * <pre>
     * Device info endpoint (string - max length 16)                                                                              
     * </pre>
     *
     * <code>string device_info_endpoint = 34;</code>
     * @return The deviceInfoEndpoint.
     */
    @java.lang.Override
    public java.lang.String getDeviceInfoEndpoint() {
      java.lang.Object ref = deviceInfoEndpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceInfoEndpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Device info endpoint (string - max length 16)                                                                              
     * </pre>
     *
     * <code>string device_info_endpoint = 34;</code>
     * @return The bytes for deviceInfoEndpoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDeviceInfoEndpointBytes() {
      java.lang.Object ref = deviceInfoEndpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceInfoEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_ENDPOINT_FIELD_NUMBER = 35;
    @SuppressWarnings("serial")
    private volatile java.lang.Object timeEndpoint_ = "";
    /**
     * <pre>
     * Time endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string time_endpoint = 35;</code>
     * @return The timeEndpoint.
     */
    @java.lang.Override
    public java.lang.String getTimeEndpoint() {
      java.lang.Object ref = timeEndpoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timeEndpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Time endpoint (string - max length 16)                                                                                     
     * </pre>
     *
     * <code>string time_endpoint = 35;</code>
     * @return The bytes for timeEndpoint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimeEndpointBytes() {
      java.lang.Object ref = timeEndpoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timeEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BLE_TX_POWER_LEVEL_FIELD_NUMBER = 36;
    private int bleTxPowerLevel_ = 0;
    /**
     * <pre>
     * Range: [1:4]                                                                                                               
     * </pre>
     *
     * <code>uint32 ble_tx_power_level = 36;</code>
     * @return The bleTxPowerLevel.
     */
    @java.lang.Override
    public int getBleTxPowerLevel() {
      return bleTxPowerLevel_;
    }

    public static final int REQUEST_RUNTIME_ERRORS_CLEAR_FIELD_NUMBER = 37;
    private boolean requestRuntimeErrorsClear_ = false;
    /**
     * <pre>
     * If true, the sensor's runtime errors will be cleared                                                                       
     * </pre>
     *
     * <code>bool request_runtime_errors_clear = 37;</code>
     * @return The requestRuntimeErrorsClear.
     */
    @java.lang.Override
    public boolean getRequestRuntimeErrorsClear() {
      return requestRuntimeErrorsClear_;
    }

    public static final int ERROR_TIMESTAMP_FIELD_NUMBER = 38;
    private int errorTimestamp_ = 0;
    /**
     * <pre>
     * Timestamp when a new error code was reported                                                                               
     * </pre>
     *
     * <code>uint32 error_timestamp = 38;</code>
     * @return The errorTimestamp.
     */
    @java.lang.Override
    public int getErrorTimestamp() {
      return errorTimestamp_;
    }

    public static final int HASH_TIMESTAMP_FIELD_NUMBER = 39;
    private int hashTimestamp_ = 0;
    /**
     * <pre>
     * Timestamp when the new configuration was set                                                                               
     * </pre>
     *
     * <code>uint32 hash_timestamp = 39;</code>
     * @return The hashTimestamp.
     */
    @java.lang.Override
    public int getHashTimestamp() {
      return hashTimestamp_;
    }

    public static final int CLOUD_TOKEN_COAP_OPTION_FIELD_NUMBER = 40;
    private int cloudTokenCoapOption_ = 0;
    /**
     * <pre>
     *   - 65000 - cloud token sent in the payload                                                                                
     * </pre>
     *
     * <code>uint32 cloud_token_coap_option = 40;</code>
     * @return The cloudTokenCoapOption.
     */
    @java.lang.Override
    public int getCloudTokenCoapOption() {
      return cloudTokenCoapOption_;
    }

    public static final int PAYLOAD_SIGNATURE_COAP_OPTION_FIELD_NUMBER = 41;
    private int payloadSignatureCoapOption_ = 0;
    /**
     * <pre>
     *   - 65000 - no payload signature in CoAP option                                                                            
     * </pre>
     *
     * <code>uint32 payload_signature_coap_option = 41;</code>
     * @return The payloadSignatureCoapOption.
     */
    @java.lang.Override
    public int getPayloadSignatureCoapOption() {
      return payloadSignatureCoapOption_;
    }

    public static final int DNS_SERVER_IP_FIELD_NUMBER = 42;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList dnsServerIp_;
    /**
     * <pre>
     * Note: when setting less than four octets the remaining will be filled with zeros.                                          
     * </pre>
     *
     * <code>repeated uint32 dns_server_ip = 42;</code>
     * @return A list containing the dnsServerIp.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getDnsServerIpList() {
      return dnsServerIp_;
    }
    /**
     * <pre>
     * Note: when setting less than four octets the remaining will be filled with zeros.                                          
     * </pre>
     *
     * <code>repeated uint32 dns_server_ip = 42;</code>
     * @return The count of dnsServerIp.
     */
    public int getDnsServerIpCount() {
      return dnsServerIp_.size();
    }
    /**
     * <pre>
     * Note: when setting less than four octets the remaining will be filled with zeros.                                          
     * </pre>
     *
     * <code>repeated uint32 dns_server_ip = 42;</code>
     * @param index The index of the element to return.
     * @return The dnsServerIp at the given index.
     */
    public int getDnsServerIp(int index) {
      return dnsServerIp_.getInt(index);
    }
    private int dnsServerIpMemoizedSerializedSize = -1;

    public static final int DNS_TTL_CONFIG_FIELD_NUMBER = 43;
    private int dnsTtlConfig_ = 0;
    /**
     * <pre>
     *   - 864002 - DNS request is only after communication failed                                                                
     * </pre>
     *
     * <code>uint32 dns_ttl_config = 43;</code>
     * @return The dnsTtlConfig.
     */
    @java.lang.Override
    public int getDnsTtlConfig() {
      return dnsTtlConfig_;
    }

    public static final int PAYLOAD_SPLIT_INFO_FIELD_NUMBER = 44;
    private int payloadSplitInfo_ = 0;
    /**
     * <pre>
     * values &gt; 0 - last part of the split payload, the value indicates the total number of the messages sent                     
     * </pre>
     *
     * <code>sint32 payload_split_info = 44;</code>
     * @return The payloadSplitInfo.
     */
    @java.lang.Override
    public int getPayloadSplitInfo() {
      return payloadSplitInfo_;
    }

    public static final int MODEM_UPDATE_REQUEST_FIELD_NUMBER = 45;
    @SuppressWarnings("serial")
    private volatile java.lang.Object modemUpdateRequest_ = "";
    /**
     * <pre>
     * For BC66 module, this field is a DFOTA URL                                                                                 
     * </pre>
     *
     * <code>string modem_update_request = 45;</code>
     * @return The modemUpdateRequest.
     */
    @java.lang.Override
    public java.lang.String getModemUpdateRequest() {
      java.lang.Object ref = modemUpdateRequest_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modemUpdateRequest_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * For BC66 module, this field is a DFOTA URL                                                                                 
     * </pre>
     *
     * <code>string modem_update_request = 45;</code>
     * @return The bytes for modemUpdateRequest.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getModemUpdateRequestBytes() {
      java.lang.Object ref = modemUpdateRequest_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modemUpdateRequest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CELLULAR_CONFIG_PARAMS_FIELD_NUMBER = 46;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList cellularConfigParams_;
    /**
     * <pre>
     * 2nd - 12th items - Cellular parameters                                                                                     
     * </pre>
     *
     * <code>repeated uint32 cellular_config_params = 46;</code>
     * @return A list containing the cellularConfigParams.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getCellularConfigParamsList() {
      return cellularConfigParams_;
    }
    /**
     * <pre>
     * 2nd - 12th items - Cellular parameters                                                                                     
     * </pre>
     *
     * <code>repeated uint32 cellular_config_params = 46;</code>
     * @return The count of cellularConfigParams.
     */
    public int getCellularConfigParamsCount() {
      return cellularConfigParams_.size();
    }
    /**
     * <pre>
     * 2nd - 12th items - Cellular parameters                                                                                     
     * </pre>
     *
     * <code>repeated uint32 cellular_config_params = 46;</code>
     * @param index The index of the element to return.
     * @return The cellularConfigParams at the given index.
     */
    public int getCellularConfigParams(int index) {
      return cellularConfigParams_.getInt(index);
    }
    private int cellularConfigParamsMemoizedSerializedSize = -1;

    public static final int CALENDARS_FIELD_NUMBER = 47;
    @SuppressWarnings("serial")
    private java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar> calendars_;
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    @java.lang.Override
    public java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar> getCalendarsList() {
      return calendars_;
    }
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder> 
        getCalendarsOrBuilderList() {
      return calendars_;
    }
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    @java.lang.Override
    public int getCalendarsCount() {
      return calendars_.size();
    }
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar getCalendars(int index) {
      return calendars_.get(index);
    }
    /**
     * <pre>
     * Calendar configuration. Up to 6 calendars are supported                                                                    
     * </pre>
     *
     * <code>repeated .ProtoCalendar calendars = 47;</code>
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder getCalendarsOrBuilder(
        int index) {
      return calendars_.get(index);
    }

    public static final int CHANNELS_CONTROL_REQUEST_FIELD_NUMBER = 48;
    @SuppressWarnings("serial")
    private java.util.List<org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl> channelsControlRequest_;
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    @java.lang.Override
    public java.util.List<org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl> getChannelsControlRequestList() {
      return channelsControlRequest_;
    }
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder> 
        getChannelsControlRequestOrBuilderList() {
      return channelsControlRequest_;
    }
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    @java.lang.Override
    public int getChannelsControlRequestCount() {
      return channelsControlRequest_.size();
    }
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl getChannelsControlRequest(int index) {
      return channelsControlRequest_.get(index);
    }
    /**
     * <pre>
     * This field is only sent by server                                                                                          
     * </pre>
     *
     * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder getChannelsControlRequestOrBuilder(
        int index) {
      return channelsControlRequest_.get(index);
    }

    public static final int CALIBRATION_PARAMETERS_REQUEST_FIELD_NUMBER = 49;
    private org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters calibrationParametersRequest_;
    /**
     * <pre>
     * Set/get calibration parameters for single channel.                                                                         
     * </pre>
     *
     * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
     * @return Whether the calibrationParametersRequest field is set.
     */
    @java.lang.Override
    public boolean hasCalibrationParametersRequest() {
      return calibrationParametersRequest_ != null;
    }
    /**
     * <pre>
     * Set/get calibration parameters for single channel.                                                                         
     * </pre>
     *
     * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
     * @return The calibrationParametersRequest.
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters getCalibrationParametersRequest() {
      return calibrationParametersRequest_ == null ? org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.getDefaultInstance() : calibrationParametersRequest_;
    }
    /**
     * <pre>
     * Set/get calibration parameters for single channel.                                                                         
     * </pre>
     *
     * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
     */
    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParametersOrBuilder getCalibrationParametersRequestOrBuilder() {
      return calibrationParametersRequest_ == null ? org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.getDefaultInstance() : calibrationParametersRequest_;
    }

    public static final int LED_CONFIG_FIELD_NUMBER = 50;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList ledConfig_;
    /**
     * <pre>
     *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
     * </pre>
     *
     * <code>repeated uint32 led_config = 50;</code>
     * @return A list containing the ledConfig.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLedConfigList() {
      return ledConfig_;
    }
    /**
     * <pre>
     *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
     * </pre>
     *
     * <code>repeated uint32 led_config = 50;</code>
     * @return The count of ledConfig.
     */
    public int getLedConfigCount() {
      return ledConfig_.size();
    }
    /**
     * <pre>
     *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
     * </pre>
     *
     * <code>repeated uint32 led_config = 50;</code>
     * @param index The index of the element to return.
     * @return The ledConfig at the given index.
     */
    public int getLedConfig(int index) {
      return ledConfig_.getInt(index);
    }
    private int ledConfigMemoizedSerializedSize = -1;

    public static final int NETWORK_TROUBLESHOOTING_FIELD_NUMBER = 51;
    private int networkTroubleshooting_ = 0;
    /**
     * <pre>
     *   - 2: network troubleshooting enabled                                                                                     
     * </pre>
     *
     * <code>uint32 network_troubleshooting = 51;</code>
     * @return The networkTroubleshooting.
     */
    @java.lang.Override
    public int getNetworkTroubleshooting() {
      return networkTroubleshooting_;
    }

    public static final int ENCRYPTION_KEY_FIELD_NUMBER = 54;
    private com.google.protobuf.ByteString encryptionKey_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * 0x7F - encryption key disabled.                                                                                            
     * </pre>
     *
     * <code>bytes encryption_key = 54;</code>
     * @return The encryptionKey.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getEncryptionKey() {
      return encryptionKey_;
    }

    public static final int APN_USER_NAME_FIELD_NUMBER = 55;
    @SuppressWarnings("serial")
    private volatile java.lang.Object apnUserName_ = "";
    /**
     * <pre>
     * User name can only be set to custom value if apn has been configured (is not automatic)                                    
     * </pre>
     *
     * <code>string apn_user_name = 55;</code>
     * @return The apnUserName.
     */
    @java.lang.Override
    public java.lang.String getApnUserName() {
      java.lang.Object ref = apnUserName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apnUserName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * User name can only be set to custom value if apn has been configured (is not automatic)                                    
     * </pre>
     *
     * <code>string apn_user_name = 55;</code>
     * @return The bytes for apnUserName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getApnUserNameBytes() {
      java.lang.Object ref = apnUserName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apnUserName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APN_PASSWORD_FIELD_NUMBER = 56;
    @SuppressWarnings("serial")
    private volatile java.lang.Object apnPassword_ = "";
    /**
     * <pre>
     * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
     * </pre>
     *
     * <code>string apn_password = 56;</code>
     * @return The apnPassword.
     */
    @java.lang.Override
    public java.lang.String getApnPassword() {
      java.lang.Object ref = apnPassword_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        apnPassword_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
     * </pre>
     *
     * <code>string apn_password = 56;</code>
     * @return The bytes for apnPassword.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getApnPasswordBytes() {
      java.lang.Object ref = apnPassword_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        apnPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (measurementPeriodBase_ != 0) {
        output.writeUInt32(2, measurementPeriodBase_);
      }
      if (transmissionInterval_ != 0) {
        output.writeUInt32(3, transmissionInterval_);
      }
      if (bleTurnoffTime_ != 0) {
        output.writeUInt32(4, bleTurnoffTime_);
      }
      if (ackInterval_ != 0) {
        output.writeUInt32(5, ackInterval_);
      }
      if (requestDeviceInfo_ != false) {
        output.writeBool(6, requestDeviceInfo_);
      }
      if (requestFwUpdate_ != false) {
        output.writeBool(7, requestFwUpdate_);
      }
      if (currentTime_ != 0) {
        output.writeUInt32(8, currentTime_);
      }
      if (transferLimit_ != 0) {
        output.writeUInt32(9, transferLimit_);
      }
      if (transferLimitTimer_ != 0) {
        output.writeUInt32(10, transferLimitTimer_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataServerIp_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, dataServerIp_);
      }
      if (dataServerPort_ != 0) {
        output.writeUInt32(12, dataServerPort_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(updateServerIp_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, updateServerIp_);
      }
      if (updateServerPortUdp_ != 0) {
        output.writeUInt32(14, updateServerPortUdp_);
      }
      if (updateServerPortCoap_ != 0) {
        output.writeUInt32(15, updateServerPortCoap_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(apn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, apn_);
      }
      if (plmnSelection_ != 0) {
        output.writeUInt32(17, plmnSelection_);
      }
      if (disableModemRequest_ != 0) {
        output.writeUInt32(18, disableModemRequest_);
      }
      if (requestConfiguration_ != false) {
        output.writeBool(19, requestConfiguration_);
      }
      if (getErrorsList().size() > 0) {
        output.writeUInt32NoTag(162);
        output.writeUInt32NoTag(errorsMemoizedSerializedSize);
      }
      for (int i = 0; i < errors_.size(); i++) {
        output.writeUInt32NoTag(errors_.getInt(i));
      }
      if (hash_ != 0) {
        output.writeUInt32(21, hash_);
      }
      if (acceptWithoutTesting_ != false) {
        output.writeBool(22, acceptWithoutTesting_);
      }
      if (cloudTokenConfig_ != 0) {
        output.writeUInt32(23, cloudTokenConfig_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cloudToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 24, cloudToken_);
      }
      if (!serialNumber_.isEmpty()) {
        output.writeBytes(25, serialNumber_);
      }
      if (measurementPeriodFactor_ != 0) {
        output.writeUInt32(26, measurementPeriodFactor_);
      }
      if (getChannelTypesList().size() > 0) {
        output.writeUInt32NoTag(218);
        output.writeUInt32NoTag(channelTypesMemoizedSerializedSize);
      }
      for (int i = 0; i < channelTypes_.size(); i++) {
        output.writeEnumNoTag(channelTypes_.get(i));
      }
      for (int i = 0; i < rules_.size(); i++) {
        output.writeMessage(28, rules_.get(i));
      }
      if (supervisionPeriod_ != 0) {
        output.writeUInt32(29, supervisionPeriod_);
      }
      if (memoryResetRequest_ != false) {
        output.writeBool(30, memoryResetRequest_);
      }
      if (modemBandsMask_ != 0) {
        output.writeUInt32(31, modemBandsMask_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataEndpoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 32, dataEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(configurationEndpoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 33, configurationEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceInfoEndpoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 34, deviceInfoEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timeEndpoint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 35, timeEndpoint_);
      }
      if (bleTxPowerLevel_ != 0) {
        output.writeUInt32(36, bleTxPowerLevel_);
      }
      if (requestRuntimeErrorsClear_ != false) {
        output.writeBool(37, requestRuntimeErrorsClear_);
      }
      if (errorTimestamp_ != 0) {
        output.writeUInt32(38, errorTimestamp_);
      }
      if (hashTimestamp_ != 0) {
        output.writeUInt32(39, hashTimestamp_);
      }
      if (cloudTokenCoapOption_ != 0) {
        output.writeUInt32(40, cloudTokenCoapOption_);
      }
      if (payloadSignatureCoapOption_ != 0) {
        output.writeUInt32(41, payloadSignatureCoapOption_);
      }
      if (getDnsServerIpList().size() > 0) {
        output.writeUInt32NoTag(338);
        output.writeUInt32NoTag(dnsServerIpMemoizedSerializedSize);
      }
      for (int i = 0; i < dnsServerIp_.size(); i++) {
        output.writeUInt32NoTag(dnsServerIp_.getInt(i));
      }
      if (dnsTtlConfig_ != 0) {
        output.writeUInt32(43, dnsTtlConfig_);
      }
      if (payloadSplitInfo_ != 0) {
        output.writeSInt32(44, payloadSplitInfo_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modemUpdateRequest_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 45, modemUpdateRequest_);
      }
      if (getCellularConfigParamsList().size() > 0) {
        output.writeUInt32NoTag(370);
        output.writeUInt32NoTag(cellularConfigParamsMemoizedSerializedSize);
      }
      for (int i = 0; i < cellularConfigParams_.size(); i++) {
        output.writeUInt32NoTag(cellularConfigParams_.getInt(i));
      }
      for (int i = 0; i < calendars_.size(); i++) {
        output.writeMessage(47, calendars_.get(i));
      }
      for (int i = 0; i < channelsControlRequest_.size(); i++) {
        output.writeMessage(48, channelsControlRequest_.get(i));
      }
      if (calibrationParametersRequest_ != null) {
        output.writeMessage(49, getCalibrationParametersRequest());
      }
      if (getLedConfigList().size() > 0) {
        output.writeUInt32NoTag(402);
        output.writeUInt32NoTag(ledConfigMemoizedSerializedSize);
      }
      for (int i = 0; i < ledConfig_.size(); i++) {
        output.writeUInt32NoTag(ledConfig_.getInt(i));
      }
      if (networkTroubleshooting_ != 0) {
        output.writeUInt32(51, networkTroubleshooting_);
      }
      if (!encryptionKey_.isEmpty()) {
        output.writeBytes(54, encryptionKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(apnUserName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 55, apnUserName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(apnPassword_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 56, apnPassword_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (measurementPeriodBase_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, measurementPeriodBase_);
      }
      if (transmissionInterval_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, transmissionInterval_);
      }
      if (bleTurnoffTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, bleTurnoffTime_);
      }
      if (ackInterval_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ackInterval_);
      }
      if (requestDeviceInfo_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, requestDeviceInfo_);
      }
      if (requestFwUpdate_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, requestFwUpdate_);
      }
      if (currentTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, currentTime_);
      }
      if (transferLimit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, transferLimit_);
      }
      if (transferLimitTimer_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, transferLimitTimer_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataServerIp_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, dataServerIp_);
      }
      if (dataServerPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, dataServerPort_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(updateServerIp_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, updateServerIp_);
      }
      if (updateServerPortUdp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, updateServerPortUdp_);
      }
      if (updateServerPortCoap_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, updateServerPortCoap_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(apn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, apn_);
      }
      if (plmnSelection_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, plmnSelection_);
      }
      if (disableModemRequest_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, disableModemRequest_);
      }
      if (requestConfiguration_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, requestConfiguration_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < errors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(errors_.getInt(i));
        }
        size += dataSize;
        if (!getErrorsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        errorsMemoizedSerializedSize = dataSize;
      }
      if (hash_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, hash_);
      }
      if (acceptWithoutTesting_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, acceptWithoutTesting_);
      }
      if (cloudTokenConfig_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, cloudTokenConfig_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cloudToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(24, cloudToken_);
      }
      if (!serialNumber_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(25, serialNumber_);
      }
      if (measurementPeriodFactor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, measurementPeriodFactor_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < channelTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(channelTypes_.get(i));
        }
        size += dataSize;
        if (!getChannelTypesList().isEmpty()) {  size += 2;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }channelTypesMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < rules_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, rules_.get(i));
      }
      if (supervisionPeriod_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, supervisionPeriod_);
      }
      if (memoryResetRequest_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(30, memoryResetRequest_);
      }
      if (modemBandsMask_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, modemBandsMask_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(dataEndpoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(32, dataEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(configurationEndpoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(33, configurationEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceInfoEndpoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(34, deviceInfoEndpoint_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timeEndpoint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(35, timeEndpoint_);
      }
      if (bleTxPowerLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(36, bleTxPowerLevel_);
      }
      if (requestRuntimeErrorsClear_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, requestRuntimeErrorsClear_);
      }
      if (errorTimestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, errorTimestamp_);
      }
      if (hashTimestamp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(39, hashTimestamp_);
      }
      if (cloudTokenCoapOption_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(40, cloudTokenCoapOption_);
      }
      if (payloadSignatureCoapOption_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(41, payloadSignatureCoapOption_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dnsServerIp_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dnsServerIp_.getInt(i));
        }
        size += dataSize;
        if (!getDnsServerIpList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dnsServerIpMemoizedSerializedSize = dataSize;
      }
      if (dnsTtlConfig_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(43, dnsTtlConfig_);
      }
      if (payloadSplitInfo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(44, payloadSplitInfo_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(modemUpdateRequest_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(45, modemUpdateRequest_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cellularConfigParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(cellularConfigParams_.getInt(i));
        }
        size += dataSize;
        if (!getCellularConfigParamsList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cellularConfigParamsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < calendars_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, calendars_.get(i));
      }
      for (int i = 0; i < channelsControlRequest_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(48, channelsControlRequest_.get(i));
      }
      if (calibrationParametersRequest_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(49, getCalibrationParametersRequest());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ledConfig_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(ledConfig_.getInt(i));
        }
        size += dataSize;
        if (!getLedConfigList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        ledConfigMemoizedSerializedSize = dataSize;
      }
      if (networkTroubleshooting_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(51, networkTroubleshooting_);
      }
      if (!encryptionKey_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(54, encryptionKey_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(apnUserName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(55, apnUserName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(apnPassword_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(56, apnPassword_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig)) {
        return super.equals(obj);
      }
      org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig other = (org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig) obj;

      if (getMeasurementPeriodBase()
          != other.getMeasurementPeriodBase()) return false;
      if (getMeasurementPeriodFactor()
          != other.getMeasurementPeriodFactor()) return false;
      if (getTransmissionInterval()
          != other.getTransmissionInterval()) return false;
      if (getBleTurnoffTime()
          != other.getBleTurnoffTime()) return false;
      if (getAckInterval()
          != other.getAckInterval()) return false;
      if (getRequestDeviceInfo()
          != other.getRequestDeviceInfo()) return false;
      if (getRequestFwUpdate()
          != other.getRequestFwUpdate()) return false;
      if (getCurrentTime()
          != other.getCurrentTime()) return false;
      if (getTransferLimit()
          != other.getTransferLimit()) return false;
      if (getTransferLimitTimer()
          != other.getTransferLimitTimer()) return false;
      if (!getDataServerIp()
          .equals(other.getDataServerIp())) return false;
      if (getDataServerPort()
          != other.getDataServerPort()) return false;
      if (!getUpdateServerIp()
          .equals(other.getUpdateServerIp())) return false;
      if (getUpdateServerPortUdp()
          != other.getUpdateServerPortUdp()) return false;
      if (getUpdateServerPortCoap()
          != other.getUpdateServerPortCoap()) return false;
      if (!getApn()
          .equals(other.getApn())) return false;
      if (getPlmnSelection()
          != other.getPlmnSelection()) return false;
      if (getDisableModemRequest()
          != other.getDisableModemRequest()) return false;
      if (getRequestConfiguration()
          != other.getRequestConfiguration()) return false;
      if (!getErrorsList()
          .equals(other.getErrorsList())) return false;
      if (getHash()
          != other.getHash()) return false;
      if (getAcceptWithoutTesting()
          != other.getAcceptWithoutTesting()) return false;
      if (getCloudTokenConfig()
          != other.getCloudTokenConfig()) return false;
      if (!getCloudToken()
          .equals(other.getCloudToken())) return false;
      if (!getSerialNumber()
          .equals(other.getSerialNumber())) return false;
      if (!channelTypes_.equals(other.channelTypes_)) return false;
      if (!getRulesList()
          .equals(other.getRulesList())) return false;
      if (getSupervisionPeriod()
          != other.getSupervisionPeriod()) return false;
      if (getMemoryResetRequest()
          != other.getMemoryResetRequest()) return false;
      if (getModemBandsMask()
          != other.getModemBandsMask()) return false;
      if (!getDataEndpoint()
          .equals(other.getDataEndpoint())) return false;
      if (!getConfigurationEndpoint()
          .equals(other.getConfigurationEndpoint())) return false;
      if (!getDeviceInfoEndpoint()
          .equals(other.getDeviceInfoEndpoint())) return false;
      if (!getTimeEndpoint()
          .equals(other.getTimeEndpoint())) return false;
      if (getBleTxPowerLevel()
          != other.getBleTxPowerLevel()) return false;
      if (getRequestRuntimeErrorsClear()
          != other.getRequestRuntimeErrorsClear()) return false;
      if (getErrorTimestamp()
          != other.getErrorTimestamp()) return false;
      if (getHashTimestamp()
          != other.getHashTimestamp()) return false;
      if (getCloudTokenCoapOption()
          != other.getCloudTokenCoapOption()) return false;
      if (getPayloadSignatureCoapOption()
          != other.getPayloadSignatureCoapOption()) return false;
      if (!getDnsServerIpList()
          .equals(other.getDnsServerIpList())) return false;
      if (getDnsTtlConfig()
          != other.getDnsTtlConfig()) return false;
      if (getPayloadSplitInfo()
          != other.getPayloadSplitInfo()) return false;
      if (!getModemUpdateRequest()
          .equals(other.getModemUpdateRequest())) return false;
      if (!getCellularConfigParamsList()
          .equals(other.getCellularConfigParamsList())) return false;
      if (!getCalendarsList()
          .equals(other.getCalendarsList())) return false;
      if (!getChannelsControlRequestList()
          .equals(other.getChannelsControlRequestList())) return false;
      if (hasCalibrationParametersRequest() != other.hasCalibrationParametersRequest()) return false;
      if (hasCalibrationParametersRequest()) {
        if (!getCalibrationParametersRequest()
            .equals(other.getCalibrationParametersRequest())) return false;
      }
      if (!getLedConfigList()
          .equals(other.getLedConfigList())) return false;
      if (getNetworkTroubleshooting()
          != other.getNetworkTroubleshooting()) return false;
      if (!getEncryptionKey()
          .equals(other.getEncryptionKey())) return false;
      if (!getApnUserName()
          .equals(other.getApnUserName())) return false;
      if (!getApnPassword()
          .equals(other.getApnPassword())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MEASUREMENT_PERIOD_BASE_FIELD_NUMBER;
      hash = (53 * hash) + getMeasurementPeriodBase();
      hash = (37 * hash) + MEASUREMENT_PERIOD_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + getMeasurementPeriodFactor();
      hash = (37 * hash) + TRANSMISSION_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getTransmissionInterval();
      hash = (37 * hash) + BLE_TURNOFF_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBleTurnoffTime();
      hash = (37 * hash) + ACK_INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getAckInterval();
      hash = (37 * hash) + REQUEST_DEVICE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequestDeviceInfo());
      hash = (37 * hash) + REQUEST_FW_UPDATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequestFwUpdate());
      hash = (37 * hash) + CURRENT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentTime();
      hash = (37 * hash) + TRANSFER_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + getTransferLimit();
      hash = (37 * hash) + TRANSFER_LIMIT_TIMER_FIELD_NUMBER;
      hash = (53 * hash) + getTransferLimitTimer();
      hash = (37 * hash) + DATA_SERVER_IP_FIELD_NUMBER;
      hash = (53 * hash) + getDataServerIp().hashCode();
      hash = (37 * hash) + DATA_SERVER_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getDataServerPort();
      hash = (37 * hash) + UPDATE_SERVER_IP_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateServerIp().hashCode();
      hash = (37 * hash) + UPDATE_SERVER_PORT_UDP_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateServerPortUdp();
      hash = (37 * hash) + UPDATE_SERVER_PORT_COAP_FIELD_NUMBER;
      hash = (53 * hash) + getUpdateServerPortCoap();
      hash = (37 * hash) + APN_FIELD_NUMBER;
      hash = (53 * hash) + getApn().hashCode();
      hash = (37 * hash) + PLMN_SELECTION_FIELD_NUMBER;
      hash = (53 * hash) + getPlmnSelection();
      hash = (37 * hash) + DISABLE_MODEM_REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getDisableModemRequest();
      hash = (37 * hash) + REQUEST_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequestConfiguration());
      if (getErrorsCount() > 0) {
        hash = (37 * hash) + ERRORS_FIELD_NUMBER;
        hash = (53 * hash) + getErrorsList().hashCode();
      }
      hash = (37 * hash) + HASH_FIELD_NUMBER;
      hash = (53 * hash) + getHash();
      hash = (37 * hash) + ACCEPT_WITHOUT_TESTING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAcceptWithoutTesting());
      hash = (37 * hash) + CLOUD_TOKEN_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getCloudTokenConfig();
      hash = (37 * hash) + CLOUD_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getCloudToken().hashCode();
      hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSerialNumber().hashCode();
      if (getChannelTypesCount() > 0) {
        hash = (37 * hash) + CHANNEL_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + channelTypes_.hashCode();
      }
      if (getRulesCount() > 0) {
        hash = (37 * hash) + RULES_FIELD_NUMBER;
        hash = (53 * hash) + getRulesList().hashCode();
      }
      hash = (37 * hash) + SUPERVISION_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getSupervisionPeriod();
      hash = (37 * hash) + MEMORY_RESET_REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getMemoryResetRequest());
      hash = (37 * hash) + MODEM_BANDS_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getModemBandsMask();
      hash = (37 * hash) + DATA_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getDataEndpoint().hashCode();
      hash = (37 * hash) + CONFIGURATION_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getConfigurationEndpoint().hashCode();
      hash = (37 * hash) + DEVICE_INFO_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceInfoEndpoint().hashCode();
      hash = (37 * hash) + TIME_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getTimeEndpoint().hashCode();
      hash = (37 * hash) + BLE_TX_POWER_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getBleTxPowerLevel();
      hash = (37 * hash) + REQUEST_RUNTIME_ERRORS_CLEAR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequestRuntimeErrorsClear());
      hash = (37 * hash) + ERROR_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getErrorTimestamp();
      hash = (37 * hash) + HASH_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getHashTimestamp();
      hash = (37 * hash) + CLOUD_TOKEN_COAP_OPTION_FIELD_NUMBER;
      hash = (53 * hash) + getCloudTokenCoapOption();
      hash = (37 * hash) + PAYLOAD_SIGNATURE_COAP_OPTION_FIELD_NUMBER;
      hash = (53 * hash) + getPayloadSignatureCoapOption();
      if (getDnsServerIpCount() > 0) {
        hash = (37 * hash) + DNS_SERVER_IP_FIELD_NUMBER;
        hash = (53 * hash) + getDnsServerIpList().hashCode();
      }
      hash = (37 * hash) + DNS_TTL_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getDnsTtlConfig();
      hash = (37 * hash) + PAYLOAD_SPLIT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getPayloadSplitInfo();
      hash = (37 * hash) + MODEM_UPDATE_REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getModemUpdateRequest().hashCode();
      if (getCellularConfigParamsCount() > 0) {
        hash = (37 * hash) + CELLULAR_CONFIG_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getCellularConfigParamsList().hashCode();
      }
      if (getCalendarsCount() > 0) {
        hash = (37 * hash) + CALENDARS_FIELD_NUMBER;
        hash = (53 * hash) + getCalendarsList().hashCode();
      }
      if (getChannelsControlRequestCount() > 0) {
        hash = (37 * hash) + CHANNELS_CONTROL_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getChannelsControlRequestList().hashCode();
      }
      if (hasCalibrationParametersRequest()) {
        hash = (37 * hash) + CALIBRATION_PARAMETERS_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getCalibrationParametersRequest().hashCode();
      }
      if (getLedConfigCount() > 0) {
        hash = (37 * hash) + LED_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getLedConfigList().hashCode();
      }
      hash = (37 * hash) + NETWORK_TROUBLESHOOTING_FIELD_NUMBER;
      hash = (53 * hash) + getNetworkTroubleshooting();
      hash = (37 * hash) + ENCRYPTION_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getEncryptionKey().hashCode();
      hash = (37 * hash) + APN_USER_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getApnUserName().hashCode();
      hash = (37 * hash) + APN_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getApnPassword().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * If the value of a selected parameter shall not be changed, do not include it in the payload                                  
     * </pre>
     *
     * Protobuf type {@code ProtoConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ProtoConfig)
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig.class, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig.Builder.class);
      }

      // Construct using org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        measurementPeriodBase_ = 0;
        measurementPeriodFactor_ = 0;
        transmissionInterval_ = 0;
        bleTurnoffTime_ = 0;
        ackInterval_ = 0;
        requestDeviceInfo_ = false;
        requestFwUpdate_ = false;
        currentTime_ = 0;
        transferLimit_ = 0;
        transferLimitTimer_ = 0;
        dataServerIp_ = "";
        dataServerPort_ = 0;
        updateServerIp_ = "";
        updateServerPortUdp_ = 0;
        updateServerPortCoap_ = 0;
        apn_ = "";
        plmnSelection_ = 0;
        disableModemRequest_ = 0;
        requestConfiguration_ = false;
        errors_ = emptyIntList();
        hash_ = 0;
        acceptWithoutTesting_ = false;
        cloudTokenConfig_ = 0;
        cloudToken_ = "";
        serialNumber_ = com.google.protobuf.ByteString.EMPTY;
        channelTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
        } else {
          rules_ = null;
          rulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        supervisionPeriod_ = 0;
        memoryResetRequest_ = false;
        modemBandsMask_ = 0;
        dataEndpoint_ = "";
        configurationEndpoint_ = "";
        deviceInfoEndpoint_ = "";
        timeEndpoint_ = "";
        bleTxPowerLevel_ = 0;
        requestRuntimeErrorsClear_ = false;
        errorTimestamp_ = 0;
        hashTimestamp_ = 0;
        cloudTokenCoapOption_ = 0;
        payloadSignatureCoapOption_ = 0;
        dnsServerIp_ = emptyIntList();
        dnsTtlConfig_ = 0;
        payloadSplitInfo_ = 0;
        modemUpdateRequest_ = "";
        cellularConfigParams_ = emptyIntList();
        if (calendarsBuilder_ == null) {
          calendars_ = java.util.Collections.emptyList();
        } else {
          calendars_ = null;
          calendarsBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00002000);
        if (channelsControlRequestBuilder_ == null) {
          channelsControlRequest_ = java.util.Collections.emptyList();
        } else {
          channelsControlRequest_ = null;
          channelsControlRequestBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00004000);
        calibrationParametersRequest_ = null;
        if (calibrationParametersRequestBuilder_ != null) {
          calibrationParametersRequestBuilder_.dispose();
          calibrationParametersRequestBuilder_ = null;
        }
        ledConfig_ = emptyIntList();
        networkTroubleshooting_ = 0;
        encryptionKey_ = com.google.protobuf.ByteString.EMPTY;
        apnUserName_ = "";
        apnPassword_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.internal_static_ProtoConfig_descriptor;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig getDefaultInstanceForType() {
        return org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig.getDefaultInstance();
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig build() {
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig buildPartial() {
        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig result = new org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig result) {
        if (((bitField0_ & 0x00080000) != 0)) {
          errors_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.errors_ = errors_;
        if (((bitField0_ & 0x02000000) != 0)) {
          channelTypes_ = java.util.Collections.unmodifiableList(channelTypes_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.channelTypes_ = channelTypes_;
        if (rulesBuilder_ == null) {
          if (((bitField0_ & 0x04000000) != 0)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
            bitField0_ = (bitField0_ & ~0x04000000);
          }
          result.rules_ = rules_;
        } else {
          result.rules_ = rulesBuilder_.build();
        }
        if (((bitField1_ & 0x00000100) != 0)) {
          dnsServerIp_.makeImmutable();
          bitField1_ = (bitField1_ & ~0x00000100);
        }
        result.dnsServerIp_ = dnsServerIp_;
        if (((bitField1_ & 0x00001000) != 0)) {
          cellularConfigParams_.makeImmutable();
          bitField1_ = (bitField1_ & ~0x00001000);
        }
        result.cellularConfigParams_ = cellularConfigParams_;
        if (calendarsBuilder_ == null) {
          if (((bitField1_ & 0x00002000) != 0)) {
            calendars_ = java.util.Collections.unmodifiableList(calendars_);
            bitField1_ = (bitField1_ & ~0x00002000);
          }
          result.calendars_ = calendars_;
        } else {
          result.calendars_ = calendarsBuilder_.build();
        }
        if (channelsControlRequestBuilder_ == null) {
          if (((bitField1_ & 0x00004000) != 0)) {
            channelsControlRequest_ = java.util.Collections.unmodifiableList(channelsControlRequest_);
            bitField1_ = (bitField1_ & ~0x00004000);
          }
          result.channelsControlRequest_ = channelsControlRequest_;
        } else {
          result.channelsControlRequest_ = channelsControlRequestBuilder_.build();
        }
        if (((bitField1_ & 0x00010000) != 0)) {
          ledConfig_.makeImmutable();
          bitField1_ = (bitField1_ & ~0x00010000);
        }
        result.ledConfig_ = ledConfig_;
      }

      private void buildPartial0(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.measurementPeriodBase_ = measurementPeriodBase_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.measurementPeriodFactor_ = measurementPeriodFactor_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.transmissionInterval_ = transmissionInterval_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.bleTurnoffTime_ = bleTurnoffTime_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ackInterval_ = ackInterval_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.requestDeviceInfo_ = requestDeviceInfo_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.requestFwUpdate_ = requestFwUpdate_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.currentTime_ = currentTime_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.transferLimit_ = transferLimit_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.transferLimitTimer_ = transferLimitTimer_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.dataServerIp_ = dataServerIp_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.dataServerPort_ = dataServerPort_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.updateServerIp_ = updateServerIp_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.updateServerPortUdp_ = updateServerPortUdp_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.updateServerPortCoap_ = updateServerPortCoap_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.apn_ = apn_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.plmnSelection_ = plmnSelection_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.disableModemRequest_ = disableModemRequest_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.requestConfiguration_ = requestConfiguration_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.hash_ = hash_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.acceptWithoutTesting_ = acceptWithoutTesting_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.cloudTokenConfig_ = cloudTokenConfig_;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.cloudToken_ = cloudToken_;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.serialNumber_ = serialNumber_;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.supervisionPeriod_ = supervisionPeriod_;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.memoryResetRequest_ = memoryResetRequest_;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.modemBandsMask_ = modemBandsMask_;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.dataEndpoint_ = dataEndpoint_;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.configurationEndpoint_ = configurationEndpoint_;
        }
      }

      private void buildPartial1(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig result) {
        int from_bitField1_ = bitField1_;
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.deviceInfoEndpoint_ = deviceInfoEndpoint_;
        }
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.timeEndpoint_ = timeEndpoint_;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.bleTxPowerLevel_ = bleTxPowerLevel_;
        }
        if (((from_bitField1_ & 0x00000008) != 0)) {
          result.requestRuntimeErrorsClear_ = requestRuntimeErrorsClear_;
        }
        if (((from_bitField1_ & 0x00000010) != 0)) {
          result.errorTimestamp_ = errorTimestamp_;
        }
        if (((from_bitField1_ & 0x00000020) != 0)) {
          result.hashTimestamp_ = hashTimestamp_;
        }
        if (((from_bitField1_ & 0x00000040) != 0)) {
          result.cloudTokenCoapOption_ = cloudTokenCoapOption_;
        }
        if (((from_bitField1_ & 0x00000080) != 0)) {
          result.payloadSignatureCoapOption_ = payloadSignatureCoapOption_;
        }
        if (((from_bitField1_ & 0x00000200) != 0)) {
          result.dnsTtlConfig_ = dnsTtlConfig_;
        }
        if (((from_bitField1_ & 0x00000400) != 0)) {
          result.payloadSplitInfo_ = payloadSplitInfo_;
        }
        if (((from_bitField1_ & 0x00000800) != 0)) {
          result.modemUpdateRequest_ = modemUpdateRequest_;
        }
        if (((from_bitField1_ & 0x00008000) != 0)) {
          result.calibrationParametersRequest_ = calibrationParametersRequestBuilder_ == null
              ? calibrationParametersRequest_
              : calibrationParametersRequestBuilder_.build();
        }
        if (((from_bitField1_ & 0x00020000) != 0)) {
          result.networkTroubleshooting_ = networkTroubleshooting_;
        }
        if (((from_bitField1_ & 0x00040000) != 0)) {
          result.encryptionKey_ = encryptionKey_;
        }
        if (((from_bitField1_ & 0x00080000) != 0)) {
          result.apnUserName_ = apnUserName_;
        }
        if (((from_bitField1_ & 0x00100000) != 0)) {
          result.apnPassword_ = apnPassword_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig) {
          return mergeFrom((org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig other) {
        if (other == org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig.getDefaultInstance()) return this;
        if (other.getMeasurementPeriodBase() != 0) {
          setMeasurementPeriodBase(other.getMeasurementPeriodBase());
        }
        if (other.getMeasurementPeriodFactor() != 0) {
          setMeasurementPeriodFactor(other.getMeasurementPeriodFactor());
        }
        if (other.getTransmissionInterval() != 0) {
          setTransmissionInterval(other.getTransmissionInterval());
        }
        if (other.getBleTurnoffTime() != 0) {
          setBleTurnoffTime(other.getBleTurnoffTime());
        }
        if (other.getAckInterval() != 0) {
          setAckInterval(other.getAckInterval());
        }
        if (other.getRequestDeviceInfo() != false) {
          setRequestDeviceInfo(other.getRequestDeviceInfo());
        }
        if (other.getRequestFwUpdate() != false) {
          setRequestFwUpdate(other.getRequestFwUpdate());
        }
        if (other.getCurrentTime() != 0) {
          setCurrentTime(other.getCurrentTime());
        }
        if (other.getTransferLimit() != 0) {
          setTransferLimit(other.getTransferLimit());
        }
        if (other.getTransferLimitTimer() != 0) {
          setTransferLimitTimer(other.getTransferLimitTimer());
        }
        if (!other.getDataServerIp().isEmpty()) {
          dataServerIp_ = other.dataServerIp_;
          bitField0_ |= 0x00000400;
          onChanged();
        }
        if (other.getDataServerPort() != 0) {
          setDataServerPort(other.getDataServerPort());
        }
        if (!other.getUpdateServerIp().isEmpty()) {
          updateServerIp_ = other.updateServerIp_;
          bitField0_ |= 0x00001000;
          onChanged();
        }
        if (other.getUpdateServerPortUdp() != 0) {
          setUpdateServerPortUdp(other.getUpdateServerPortUdp());
        }
        if (other.getUpdateServerPortCoap() != 0) {
          setUpdateServerPortCoap(other.getUpdateServerPortCoap());
        }
        if (!other.getApn().isEmpty()) {
          apn_ = other.apn_;
          bitField0_ |= 0x00008000;
          onChanged();
        }
        if (other.getPlmnSelection() != 0) {
          setPlmnSelection(other.getPlmnSelection());
        }
        if (other.getDisableModemRequest() != 0) {
          setDisableModemRequest(other.getDisableModemRequest());
        }
        if (other.getRequestConfiguration() != false) {
          setRequestConfiguration(other.getRequestConfiguration());
        }
        if (!other.errors_.isEmpty()) {
          if (errors_.isEmpty()) {
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureErrorsIsMutable();
            errors_.addAll(other.errors_);
          }
          onChanged();
        }
        if (other.getHash() != 0) {
          setHash(other.getHash());
        }
        if (other.getAcceptWithoutTesting() != false) {
          setAcceptWithoutTesting(other.getAcceptWithoutTesting());
        }
        if (other.getCloudTokenConfig() != 0) {
          setCloudTokenConfig(other.getCloudTokenConfig());
        }
        if (!other.getCloudToken().isEmpty()) {
          cloudToken_ = other.cloudToken_;
          bitField0_ |= 0x00800000;
          onChanged();
        }
        if (other.getSerialNumber() != com.google.protobuf.ByteString.EMPTY) {
          setSerialNumber(other.getSerialNumber());
        }
        if (!other.channelTypes_.isEmpty()) {
          if (channelTypes_.isEmpty()) {
            channelTypes_ = other.channelTypes_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureChannelTypesIsMutable();
            channelTypes_.addAll(other.channelTypes_);
          }
          onChanged();
        }
        if (rulesBuilder_ == null) {
          if (!other.rules_.isEmpty()) {
            if (rules_.isEmpty()) {
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x04000000);
            } else {
              ensureRulesIsMutable();
              rules_.addAll(other.rules_);
            }
            onChanged();
          }
        } else {
          if (!other.rules_.isEmpty()) {
            if (rulesBuilder_.isEmpty()) {
              rulesBuilder_.dispose();
              rulesBuilder_ = null;
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x04000000);
              rulesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRulesFieldBuilder() : null;
            } else {
              rulesBuilder_.addAllMessages(other.rules_);
            }
          }
        }
        if (other.getSupervisionPeriod() != 0) {
          setSupervisionPeriod(other.getSupervisionPeriod());
        }
        if (other.getMemoryResetRequest() != false) {
          setMemoryResetRequest(other.getMemoryResetRequest());
        }
        if (other.getModemBandsMask() != 0) {
          setModemBandsMask(other.getModemBandsMask());
        }
        if (!other.getDataEndpoint().isEmpty()) {
          dataEndpoint_ = other.dataEndpoint_;
          bitField0_ |= 0x40000000;
          onChanged();
        }
        if (!other.getConfigurationEndpoint().isEmpty()) {
          configurationEndpoint_ = other.configurationEndpoint_;
          bitField0_ |= 0x80000000;
          onChanged();
        }
        if (!other.getDeviceInfoEndpoint().isEmpty()) {
          deviceInfoEndpoint_ = other.deviceInfoEndpoint_;
          bitField1_ |= 0x00000001;
          onChanged();
        }
        if (!other.getTimeEndpoint().isEmpty()) {
          timeEndpoint_ = other.timeEndpoint_;
          bitField1_ |= 0x00000002;
          onChanged();
        }
        if (other.getBleTxPowerLevel() != 0) {
          setBleTxPowerLevel(other.getBleTxPowerLevel());
        }
        if (other.getRequestRuntimeErrorsClear() != false) {
          setRequestRuntimeErrorsClear(other.getRequestRuntimeErrorsClear());
        }
        if (other.getErrorTimestamp() != 0) {
          setErrorTimestamp(other.getErrorTimestamp());
        }
        if (other.getHashTimestamp() != 0) {
          setHashTimestamp(other.getHashTimestamp());
        }
        if (other.getCloudTokenCoapOption() != 0) {
          setCloudTokenCoapOption(other.getCloudTokenCoapOption());
        }
        if (other.getPayloadSignatureCoapOption() != 0) {
          setPayloadSignatureCoapOption(other.getPayloadSignatureCoapOption());
        }
        if (!other.dnsServerIp_.isEmpty()) {
          if (dnsServerIp_.isEmpty()) {
            dnsServerIp_ = other.dnsServerIp_;
            bitField1_ = (bitField1_ & ~0x00000100);
          } else {
            ensureDnsServerIpIsMutable();
            dnsServerIp_.addAll(other.dnsServerIp_);
          }
          onChanged();
        }
        if (other.getDnsTtlConfig() != 0) {
          setDnsTtlConfig(other.getDnsTtlConfig());
        }
        if (other.getPayloadSplitInfo() != 0) {
          setPayloadSplitInfo(other.getPayloadSplitInfo());
        }
        if (!other.getModemUpdateRequest().isEmpty()) {
          modemUpdateRequest_ = other.modemUpdateRequest_;
          bitField1_ |= 0x00000800;
          onChanged();
        }
        if (!other.cellularConfigParams_.isEmpty()) {
          if (cellularConfigParams_.isEmpty()) {
            cellularConfigParams_ = other.cellularConfigParams_;
            bitField1_ = (bitField1_ & ~0x00001000);
          } else {
            ensureCellularConfigParamsIsMutable();
            cellularConfigParams_.addAll(other.cellularConfigParams_);
          }
          onChanged();
        }
        if (calendarsBuilder_ == null) {
          if (!other.calendars_.isEmpty()) {
            if (calendars_.isEmpty()) {
              calendars_ = other.calendars_;
              bitField1_ = (bitField1_ & ~0x00002000);
            } else {
              ensureCalendarsIsMutable();
              calendars_.addAll(other.calendars_);
            }
            onChanged();
          }
        } else {
          if (!other.calendars_.isEmpty()) {
            if (calendarsBuilder_.isEmpty()) {
              calendarsBuilder_.dispose();
              calendarsBuilder_ = null;
              calendars_ = other.calendars_;
              bitField1_ = (bitField1_ & ~0x00002000);
              calendarsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCalendarsFieldBuilder() : null;
            } else {
              calendarsBuilder_.addAllMessages(other.calendars_);
            }
          }
        }
        if (channelsControlRequestBuilder_ == null) {
          if (!other.channelsControlRequest_.isEmpty()) {
            if (channelsControlRequest_.isEmpty()) {
              channelsControlRequest_ = other.channelsControlRequest_;
              bitField1_ = (bitField1_ & ~0x00004000);
            } else {
              ensureChannelsControlRequestIsMutable();
              channelsControlRequest_.addAll(other.channelsControlRequest_);
            }
            onChanged();
          }
        } else {
          if (!other.channelsControlRequest_.isEmpty()) {
            if (channelsControlRequestBuilder_.isEmpty()) {
              channelsControlRequestBuilder_.dispose();
              channelsControlRequestBuilder_ = null;
              channelsControlRequest_ = other.channelsControlRequest_;
              bitField1_ = (bitField1_ & ~0x00004000);
              channelsControlRequestBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChannelsControlRequestFieldBuilder() : null;
            } else {
              channelsControlRequestBuilder_.addAllMessages(other.channelsControlRequest_);
            }
          }
        }
        if (other.hasCalibrationParametersRequest()) {
          mergeCalibrationParametersRequest(other.getCalibrationParametersRequest());
        }
        if (!other.ledConfig_.isEmpty()) {
          if (ledConfig_.isEmpty()) {
            ledConfig_ = other.ledConfig_;
            bitField1_ = (bitField1_ & ~0x00010000);
          } else {
            ensureLedConfigIsMutable();
            ledConfig_.addAll(other.ledConfig_);
          }
          onChanged();
        }
        if (other.getNetworkTroubleshooting() != 0) {
          setNetworkTroubleshooting(other.getNetworkTroubleshooting());
        }
        if (other.getEncryptionKey() != com.google.protobuf.ByteString.EMPTY) {
          setEncryptionKey(other.getEncryptionKey());
        }
        if (!other.getApnUserName().isEmpty()) {
          apnUserName_ = other.apnUserName_;
          bitField1_ |= 0x00080000;
          onChanged();
        }
        if (!other.getApnPassword().isEmpty()) {
          apnPassword_ = other.apnPassword_;
          bitField1_ |= 0x00100000;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 16: {
                measurementPeriodBase_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 16
              case 24: {
                transmissionInterval_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                bleTurnoffTime_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                ackInterval_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                requestDeviceInfo_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                requestFwUpdate_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                currentTime_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                transferLimit_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                transferLimitTimer_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 90: {
                dataServerIp_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000400;
                break;
              } // case 90
              case 96: {
                dataServerPort_ = input.readUInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 106: {
                updateServerIp_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00001000;
                break;
              } // case 106
              case 112: {
                updateServerPortUdp_ = input.readUInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                updateServerPortCoap_ = input.readUInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 130: {
                apn_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00008000;
                break;
              } // case 130
              case 136: {
                plmnSelection_ = input.readUInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                disableModemRequest_ = input.readUInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                requestConfiguration_ = input.readBool();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                int v = input.readUInt32();
                ensureErrorsIsMutable();
                errors_.addInt(v);
                break;
              } // case 160
              case 162: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureErrorsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  errors_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 162
              case 168: {
                hash_ = input.readUInt32();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                acceptWithoutTesting_ = input.readBool();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              case 184: {
                cloudTokenConfig_ = input.readUInt32();
                bitField0_ |= 0x00400000;
                break;
              } // case 184
              case 194: {
                cloudToken_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00800000;
                break;
              } // case 194
              case 202: {
                serialNumber_ = input.readBytes();
                bitField0_ |= 0x01000000;
                break;
              } // case 202
              case 208: {
                measurementPeriodFactor_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 208
              case 216: {
                int tmpRaw = input.readEnum();
                ensureChannelTypesIsMutable();
                channelTypes_.add(tmpRaw);
                break;
              } // case 216
              case 218: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureChannelTypesIsMutable();
                  channelTypes_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 218
              case 226: {
                org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule m =
                    input.readMessage(
                        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.parser(),
                        extensionRegistry);
                if (rulesBuilder_ == null) {
                  ensureRulesIsMutable();
                  rules_.add(m);
                } else {
                  rulesBuilder_.addMessage(m);
                }
                break;
              } // case 226
              case 232: {
                supervisionPeriod_ = input.readUInt32();
                bitField0_ |= 0x08000000;
                break;
              } // case 232
              case 240: {
                memoryResetRequest_ = input.readBool();
                bitField0_ |= 0x10000000;
                break;
              } // case 240
              case 248: {
                modemBandsMask_ = input.readUInt32();
                bitField0_ |= 0x20000000;
                break;
              } // case 248
              case 258: {
                dataEndpoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x40000000;
                break;
              } // case 258
              case 266: {
                configurationEndpoint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x80000000;
                break;
              } // case 266
              case 274: {
                deviceInfoEndpoint_ = input.readStringRequireUtf8();
                bitField1_ |= 0x00000001;
                break;
              } // case 274
              case 282: {
                timeEndpoint_ = input.readStringRequireUtf8();
                bitField1_ |= 0x00000002;
                break;
              } // case 282
              case 288: {
                bleTxPowerLevel_ = input.readUInt32();
                bitField1_ |= 0x00000004;
                break;
              } // case 288
              case 296: {
                requestRuntimeErrorsClear_ = input.readBool();
                bitField1_ |= 0x00000008;
                break;
              } // case 296
              case 304: {
                errorTimestamp_ = input.readUInt32();
                bitField1_ |= 0x00000010;
                break;
              } // case 304
              case 312: {
                hashTimestamp_ = input.readUInt32();
                bitField1_ |= 0x00000020;
                break;
              } // case 312
              case 320: {
                cloudTokenCoapOption_ = input.readUInt32();
                bitField1_ |= 0x00000040;
                break;
              } // case 320
              case 328: {
                payloadSignatureCoapOption_ = input.readUInt32();
                bitField1_ |= 0x00000080;
                break;
              } // case 328
              case 336: {
                int v = input.readUInt32();
                ensureDnsServerIpIsMutable();
                dnsServerIp_.addInt(v);
                break;
              } // case 336
              case 338: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDnsServerIpIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  dnsServerIp_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 338
              case 344: {
                dnsTtlConfig_ = input.readUInt32();
                bitField1_ |= 0x00000200;
                break;
              } // case 344
              case 352: {
                payloadSplitInfo_ = input.readSInt32();
                bitField1_ |= 0x00000400;
                break;
              } // case 352
              case 362: {
                modemUpdateRequest_ = input.readStringRequireUtf8();
                bitField1_ |= 0x00000800;
                break;
              } // case 362
              case 368: {
                int v = input.readUInt32();
                ensureCellularConfigParamsIsMutable();
                cellularConfigParams_.addInt(v);
                break;
              } // case 368
              case 370: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureCellularConfigParamsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  cellularConfigParams_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 370
              case 378: {
                org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar m =
                    input.readMessage(
                        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.parser(),
                        extensionRegistry);
                if (calendarsBuilder_ == null) {
                  ensureCalendarsIsMutable();
                  calendars_.add(m);
                } else {
                  calendarsBuilder_.addMessage(m);
                }
                break;
              } // case 378
              case 386: {
                org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl m =
                    input.readMessage(
                        org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.parser(),
                        extensionRegistry);
                if (channelsControlRequestBuilder_ == null) {
                  ensureChannelsControlRequestIsMutable();
                  channelsControlRequest_.add(m);
                } else {
                  channelsControlRequestBuilder_.addMessage(m);
                }
                break;
              } // case 386
              case 394: {
                input.readMessage(
                    getCalibrationParametersRequestFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField1_ |= 0x00008000;
                break;
              } // case 394
              case 400: {
                int v = input.readUInt32();
                ensureLedConfigIsMutable();
                ledConfig_.addInt(v);
                break;
              } // case 400
              case 402: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureLedConfigIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  ledConfig_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 402
              case 408: {
                networkTroubleshooting_ = input.readUInt32();
                bitField1_ |= 0x00020000;
                break;
              } // case 408
              case 434: {
                encryptionKey_ = input.readBytes();
                bitField1_ |= 0x00040000;
                break;
              } // case 434
              case 442: {
                apnUserName_ = input.readStringRequireUtf8();
                bitField1_ |= 0x00080000;
                break;
              } // case 442
              case 450: {
                apnPassword_ = input.readStringRequireUtf8();
                bitField1_ |= 0x00100000;
                break;
              } // case 450
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int measurementPeriodBase_ ;
      /**
       * <pre>
       * Range [1:65535] - minimum value can vary depends on installed sensors 
       * </pre>
       *
       * <code>uint32 measurement_period_base = 2;</code>
       * @return The measurementPeriodBase.
       */
      @java.lang.Override
      public int getMeasurementPeriodBase() {
        return measurementPeriodBase_;
      }
      /**
       * <pre>
       * Range [1:65535] - minimum value can vary depends on installed sensors 
       * </pre>
       *
       * <code>uint32 measurement_period_base = 2;</code>
       * @param value The measurementPeriodBase to set.
       * @return This builder for chaining.
       */
      public Builder setMeasurementPeriodBase(int value) {
        
        measurementPeriodBase_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range [1:65535] - minimum value can vary depends on installed sensors 
       * </pre>
       *
       * <code>uint32 measurement_period_base = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeasurementPeriodBase() {
        bitField0_ = (bitField0_ & ~0x00000001);
        measurementPeriodBase_ = 0;
        onChanged();
        return this;
      }

      private int measurementPeriodFactor_ ;
      /**
       * <pre>
       * Range [1:65535] - minimum value can vary depends on installed sensors 
       * </pre>
       *
       * <code>uint32 measurement_period_factor = 26;</code>
       * @return The measurementPeriodFactor.
       */
      @java.lang.Override
      public int getMeasurementPeriodFactor() {
        return measurementPeriodFactor_;
      }
      /**
       * <pre>
       * Range [1:65535] - minimum value can vary depends on installed sensors 
       * </pre>
       *
       * <code>uint32 measurement_period_factor = 26;</code>
       * @param value The measurementPeriodFactor to set.
       * @return This builder for chaining.
       */
      public Builder setMeasurementPeriodFactor(int value) {
        
        measurementPeriodFactor_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range [1:65535] - minimum value can vary depends on installed sensors 
       * </pre>
       *
       * <code>uint32 measurement_period_factor = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeasurementPeriodFactor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        measurementPeriodFactor_ = 0;
        onChanged();
        return this;
      }

      private int transmissionInterval_ ;
      /**
       * <pre>
       * Transmission interval in seconds. Range: [60:604800]                                                                       
       * </pre>
       *
       * <code>uint32 transmission_interval = 3;</code>
       * @return The transmissionInterval.
       */
      @java.lang.Override
      public int getTransmissionInterval() {
        return transmissionInterval_;
      }
      /**
       * <pre>
       * Transmission interval in seconds. Range: [60:604800]                                                                       
       * </pre>
       *
       * <code>uint32 transmission_interval = 3;</code>
       * @param value The transmissionInterval to set.
       * @return This builder for chaining.
       */
      public Builder setTransmissionInterval(int value) {
        
        transmissionInterval_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Transmission interval in seconds. Range: [60:604800]                                                                       
       * </pre>
       *
       * <code>uint32 transmission_interval = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransmissionInterval() {
        bitField0_ = (bitField0_ & ~0x00000004);
        transmissionInterval_ = 0;
        onChanged();
        return this;
      }

      private int bleTurnoffTime_ ;
      /**
       * <pre>
       * 0xFFFFFFFF  - always on                                                                                                    
       * </pre>
       *
       * <code>uint32 ble_turnoff_time = 4;</code>
       * @return The bleTurnoffTime.
       */
      @java.lang.Override
      public int getBleTurnoffTime() {
        return bleTurnoffTime_;
      }
      /**
       * <pre>
       * 0xFFFFFFFF  - always on                                                                                                    
       * </pre>
       *
       * <code>uint32 ble_turnoff_time = 4;</code>
       * @param value The bleTurnoffTime to set.
       * @return This builder for chaining.
       */
      public Builder setBleTurnoffTime(int value) {
        
        bleTurnoffTime_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0xFFFFFFFF  - always on                                                                                                    
       * </pre>
       *
       * <code>uint32 ble_turnoff_time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBleTurnoffTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bleTurnoffTime_ = 0;
        onChanged();
        return this;
      }

      private int ackInterval_ ;
      /**
       * <pre>
       * 0xFFFFFFFF  - always request ACK                                                                                           
       * </pre>
       *
       * <code>uint32 ack_interval = 5;</code>
       * @return The ackInterval.
       */
      @java.lang.Override
      public int getAckInterval() {
        return ackInterval_;
      }
      /**
       * <pre>
       * 0xFFFFFFFF  - always request ACK                                                                                           
       * </pre>
       *
       * <code>uint32 ack_interval = 5;</code>
       * @param value The ackInterval to set.
       * @return This builder for chaining.
       */
      public Builder setAckInterval(int value) {
        
        ackInterval_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0xFFFFFFFF  - always request ACK                                                                                           
       * </pre>
       *
       * <code>uint32 ack_interval = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAckInterval() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ackInterval_ = 0;
        onChanged();
        return this;
      }

      private boolean requestDeviceInfo_ ;
      /**
       * <pre>
       * device info. This field is only sent by server                                                                             
       * </pre>
       *
       * <code>bool request_device_info = 6;</code>
       * @return The requestDeviceInfo.
       */
      @java.lang.Override
      public boolean getRequestDeviceInfo() {
        return requestDeviceInfo_;
      }
      /**
       * <pre>
       * device info. This field is only sent by server                                                                             
       * </pre>
       *
       * <code>bool request_device_info = 6;</code>
       * @param value The requestDeviceInfo to set.
       * @return This builder for chaining.
       */
      public Builder setRequestDeviceInfo(boolean value) {
        
        requestDeviceInfo_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * device info. This field is only sent by server                                                                             
       * </pre>
       *
       * <code>bool request_device_info = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestDeviceInfo() {
        bitField0_ = (bitField0_ & ~0x00000020);
        requestDeviceInfo_ = false;
        onChanged();
        return this;
      }

      private boolean requestFwUpdate_ ;
      /**
       * <pre>
       * Specifies, if software update is available. This field is only sent by server                                              
       * </pre>
       *
       * <code>bool request_fw_update = 7;</code>
       * @return The requestFwUpdate.
       */
      @java.lang.Override
      public boolean getRequestFwUpdate() {
        return requestFwUpdate_;
      }
      /**
       * <pre>
       * Specifies, if software update is available. This field is only sent by server                                              
       * </pre>
       *
       * <code>bool request_fw_update = 7;</code>
       * @param value The requestFwUpdate to set.
       * @return This builder for chaining.
       */
      public Builder setRequestFwUpdate(boolean value) {
        
        requestFwUpdate_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies, if software update is available. This field is only sent by server                                              
       * </pre>
       *
       * <code>bool request_fw_update = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestFwUpdate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        requestFwUpdate_ = false;
        onChanged();
        return this;
      }

      private int currentTime_ ;
      /**
       * <pre>
       * Current time in seconds sine 1st of January 1970 (epoch time).                                                             
       * </pre>
       *
       * <code>uint32 current_time = 8;</code>
       * @return The currentTime.
       */
      @java.lang.Override
      public int getCurrentTime() {
        return currentTime_;
      }
      /**
       * <pre>
       * Current time in seconds sine 1st of January 1970 (epoch time).                                                             
       * </pre>
       *
       * <code>uint32 current_time = 8;</code>
       * @param value The currentTime to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTime(int value) {
        
        currentTime_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Current time in seconds sine 1st of January 1970 (epoch time).                                                             
       * </pre>
       *
       * <code>uint32 current_time = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        currentTime_ = 0;
        onChanged();
        return this;
      }

      private int transferLimit_ ;
      /**
       * <pre>
       * 65535 - disable transfer limit function                                                                                    
       * </pre>
       *
       * <code>uint32 transfer_limit = 9;</code>
       * @return The transferLimit.
       */
      @java.lang.Override
      public int getTransferLimit() {
        return transferLimit_;
      }
      /**
       * <pre>
       * 65535 - disable transfer limit function                                                                                    
       * </pre>
       *
       * <code>uint32 transfer_limit = 9;</code>
       * @param value The transferLimit to set.
       * @return This builder for chaining.
       */
      public Builder setTransferLimit(int value) {
        
        transferLimit_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 65535 - disable transfer limit function                                                                                    
       * </pre>
       *
       * <code>uint32 transfer_limit = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransferLimit() {
        bitField0_ = (bitField0_ & ~0x00000100);
        transferLimit_ = 0;
        onChanged();
        return this;
      }

      private int transferLimitTimer_ ;
      /**
       * <pre>
       * 65535 - disable transfer limit function                                                                                    
       * </pre>
       *
       * <code>uint32 transfer_limit_timer = 10;</code>
       * @return The transferLimitTimer.
       */
      @java.lang.Override
      public int getTransferLimitTimer() {
        return transferLimitTimer_;
      }
      /**
       * <pre>
       * 65535 - disable transfer limit function                                                                                    
       * </pre>
       *
       * <code>uint32 transfer_limit_timer = 10;</code>
       * @param value The transferLimitTimer to set.
       * @return This builder for chaining.
       */
      public Builder setTransferLimitTimer(int value) {
        
        transferLimitTimer_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 65535 - disable transfer limit function                                                                                    
       * </pre>
       *
       * <code>uint32 transfer_limit_timer = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransferLimitTimer() {
        bitField0_ = (bitField0_ & ~0x00000200);
        transferLimitTimer_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dataServerIp_ = "";
      /**
       * <pre>
       * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
       * </pre>
       *
       * <code>string data_server_ip = 11;</code>
       * @return The dataServerIp.
       */
      public java.lang.String getDataServerIp() {
        java.lang.Object ref = dataServerIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataServerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
       * </pre>
       *
       * <code>string data_server_ip = 11;</code>
       * @return The bytes for dataServerIp.
       */
      public com.google.protobuf.ByteString
          getDataServerIpBytes() {
        java.lang.Object ref = dataServerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataServerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
       * </pre>
       *
       * <code>string data_server_ip = 11;</code>
       * @param value The dataServerIp to set.
       * @return This builder for chaining.
       */
      public Builder setDataServerIp(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        dataServerIp_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
       * </pre>
       *
       * <code>string data_server_ip = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataServerIp() {
        dataServerIp_ = getDefaultInstance().getDataServerIp();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IP of the data server as string in form x.x.x.x. For example: 18.184.24.239                                                
       * </pre>
       *
       * <code>string data_server_ip = 11;</code>
       * @param value The bytes for dataServerIp to set.
       * @return This builder for chaining.
       */
      public Builder setDataServerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        dataServerIp_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }

      private int dataServerPort_ ;
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 data_server_port = 12;</code>
       * @return The dataServerPort.
       */
      @java.lang.Override
      public int getDataServerPort() {
        return dataServerPort_;
      }
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 data_server_port = 12;</code>
       * @param value The dataServerPort to set.
       * @return This builder for chaining.
       */
      public Builder setDataServerPort(int value) {
        
        dataServerPort_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 data_server_port = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataServerPort() {
        bitField0_ = (bitField0_ & ~0x00000800);
        dataServerPort_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object updateServerIp_ = "";
      /**
       * <pre>
       * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
       * </pre>
       *
       * <code>string update_server_ip = 13;</code>
       * @return The updateServerIp.
       */
      public java.lang.String getUpdateServerIp() {
        java.lang.Object ref = updateServerIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          updateServerIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
       * </pre>
       *
       * <code>string update_server_ip = 13;</code>
       * @return The bytes for updateServerIp.
       */
      public com.google.protobuf.ByteString
          getUpdateServerIpBytes() {
        java.lang.Object ref = updateServerIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          updateServerIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
       * </pre>
       *
       * <code>string update_server_ip = 13;</code>
       * @param value The updateServerIp to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateServerIp(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        updateServerIp_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
       * </pre>
       *
       * <code>string update_server_ip = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateServerIp() {
        updateServerIp_ = getDefaultInstance().getUpdateServerIp();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IP of data server as string in form x.x.x.x. For example: 18.184.24.239                                                    
       * </pre>
       *
       * <code>string update_server_ip = 13;</code>
       * @param value The bytes for updateServerIp to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateServerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        updateServerIp_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }

      private int updateServerPortUdp_ ;
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 update_server_port_udp = 14;</code>
       * @return The updateServerPortUdp.
       */
      @java.lang.Override
      public int getUpdateServerPortUdp() {
        return updateServerPortUdp_;
      }
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 update_server_port_udp = 14;</code>
       * @param value The updateServerPortUdp to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateServerPortUdp(int value) {
        
        updateServerPortUdp_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 update_server_port_udp = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateServerPortUdp() {
        bitField0_ = (bitField0_ & ~0x00002000);
        updateServerPortUdp_ = 0;
        onChanged();
        return this;
      }

      private int updateServerPortCoap_ ;
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 update_server_port_coap = 15;</code>
       * @return The updateServerPortCoap.
       */
      @java.lang.Override
      public int getUpdateServerPortCoap() {
        return updateServerPortCoap_;
      }
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 update_server_port_coap = 15;</code>
       * @param value The updateServerPortCoap to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateServerPortCoap(int value) {
        
        updateServerPortCoap_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range: [1:65535]                                                                                                           
       * </pre>
       *
       * <code>uint32 update_server_port_coap = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateServerPortCoap() {
        bitField0_ = (bitField0_ & ~0x00004000);
        updateServerPortCoap_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object apn_ = "";
      /**
       * <pre>
       * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
       * </pre>
       *
       * <code>string apn = 16;</code>
       * @return The apn.
       */
      public java.lang.String getApn() {
        java.lang.Object ref = apn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          apn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
       * </pre>
       *
       * <code>string apn = 16;</code>
       * @return The bytes for apn.
       */
      public com.google.protobuf.ByteString
          getApnBytes() {
        java.lang.Object ref = apn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
       * </pre>
       *
       * <code>string apn = 16;</code>
       * @param value The apn to set.
       * @return This builder for chaining.
       */
      public Builder setApn(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        apn_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
       * </pre>
       *
       * <code>string apn = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearApn() {
        apn_ = getDefaultInstance().getApn();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * String with special character 0x7F (DEL) only indicates that automatic apn is turn on                                      
       * </pre>
       *
       * <code>string apn = 16;</code>
       * @param value The bytes for apn to set.
       * @return This builder for chaining.
       */
      public Builder setApnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        apn_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }

      private int plmnSelection_ ;
      /**
       * <pre>
       * 0xFFFFFFFF or 1000000 - automatic selection                                                                                
       * </pre>
       *
       * <code>uint32 plmn_selection = 17;</code>
       * @return The plmnSelection.
       */
      @java.lang.Override
      public int getPlmnSelection() {
        return plmnSelection_;
      }
      /**
       * <pre>
       * 0xFFFFFFFF or 1000000 - automatic selection                                                                                
       * </pre>
       *
       * <code>uint32 plmn_selection = 17;</code>
       * @param value The plmnSelection to set.
       * @return This builder for chaining.
       */
      public Builder setPlmnSelection(int value) {
        
        plmnSelection_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0xFFFFFFFF or 1000000 - automatic selection                                                                                
       * </pre>
       *
       * <code>uint32 plmn_selection = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlmnSelection() {
        bitField0_ = (bitField0_ & ~0x00010000);
        plmnSelection_ = 0;
        onChanged();
        return this;
      }

      private int disableModemRequest_ ;
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>uint32 disable_modem_request = 18;</code>
       * @return The disableModemRequest.
       */
      @java.lang.Override
      public int getDisableModemRequest() {
        return disableModemRequest_;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>uint32 disable_modem_request = 18;</code>
       * @param value The disableModemRequest to set.
       * @return This builder for chaining.
       */
      public Builder setDisableModemRequest(int value) {
        
        disableModemRequest_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>uint32 disable_modem_request = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisableModemRequest() {
        bitField0_ = (bitField0_ & ~0x00020000);
        disableModemRequest_ = 0;
        onChanged();
        return this;
      }

      private boolean requestConfiguration_ ;
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>bool request_configuration = 19;</code>
       * @return The requestConfiguration.
       */
      @java.lang.Override
      public boolean getRequestConfiguration() {
        return requestConfiguration_;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>bool request_configuration = 19;</code>
       * @param value The requestConfiguration to set.
       * @return This builder for chaining.
       */
      public Builder setRequestConfiguration(boolean value) {
        
        requestConfiguration_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>bool request_configuration = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestConfiguration() {
        bitField0_ = (bitField0_ & ~0x00040000);
        requestConfiguration_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList errors_ = emptyIntList();
      private void ensureErrorsIsMutable() {
        if (!((bitField0_ & 0x00080000) != 0)) {
          errors_ = mutableCopy(errors_);
          bitField0_ |= 0x00080000;
        }
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated uint32 errors = 20;</code>
       * @return A list containing the errors.
       */
      public java.util.List<java.lang.Integer>
          getErrorsList() {
        return ((bitField0_ & 0x00080000) != 0) ?
                 java.util.Collections.unmodifiableList(errors_) : errors_;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated uint32 errors = 20;</code>
       * @return The count of errors.
       */
      public int getErrorsCount() {
        return errors_.size();
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated uint32 errors = 20;</code>
       * @param index The index of the element to return.
       * @return The errors at the given index.
       */
      public int getErrors(int index) {
        return errors_.getInt(index);
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated uint32 errors = 20;</code>
       * @param index The index to set the value at.
       * @param value The errors to set.
       * @return This builder for chaining.
       */
      public Builder setErrors(
          int index, int value) {
        
        ensureErrorsIsMutable();
        errors_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated uint32 errors = 20;</code>
       * @param value The errors to add.
       * @return This builder for chaining.
       */
      public Builder addErrors(int value) {
        
        ensureErrorsIsMutable();
        errors_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated uint32 errors = 20;</code>
       * @param values The errors to add.
       * @return This builder for chaining.
       */
      public Builder addAllErrors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureErrorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, errors_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated uint32 errors = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrors() {
        errors_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      private int hash_ ;
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>uint32 hash = 21;</code>
       * @return The hash.
       */
      @java.lang.Override
      public int getHash() {
        return hash_;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>uint32 hash = 21;</code>
       * @param value The hash to set.
       * @return This builder for chaining.
       */
      public Builder setHash(int value) {
        
        hash_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>uint32 hash = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearHash() {
        bitField0_ = (bitField0_ & ~0x00100000);
        hash_ = 0;
        onChanged();
        return this;
      }

      private boolean acceptWithoutTesting_ ;
      /**
       * <pre>
       * If true, the device will accept the configuration without functional testing (eg. network connection)                      
       * </pre>
       *
       * <code>bool accept_without_testing = 22;</code>
       * @return The acceptWithoutTesting.
       */
      @java.lang.Override
      public boolean getAcceptWithoutTesting() {
        return acceptWithoutTesting_;
      }
      /**
       * <pre>
       * If true, the device will accept the configuration without functional testing (eg. network connection)                      
       * </pre>
       *
       * <code>bool accept_without_testing = 22;</code>
       * @param value The acceptWithoutTesting to set.
       * @return This builder for chaining.
       */
      public Builder setAcceptWithoutTesting(boolean value) {
        
        acceptWithoutTesting_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the device will accept the configuration without functional testing (eg. network connection)                      
       * </pre>
       *
       * <code>bool accept_without_testing = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearAcceptWithoutTesting() {
        bitField0_ = (bitField0_ & ~0x00200000);
        acceptWithoutTesting_ = false;
        onChanged();
        return this;
      }

      private int cloudTokenConfig_ ;
      /**
       * <pre>
       *   - 255: do not send cloud_token field                                                                                     
       * </pre>
       *
       * <code>uint32 cloud_token_config = 23;</code>
       * @return The cloudTokenConfig.
       */
      @java.lang.Override
      public int getCloudTokenConfig() {
        return cloudTokenConfig_;
      }
      /**
       * <pre>
       *   - 255: do not send cloud_token field                                                                                     
       * </pre>
       *
       * <code>uint32 cloud_token_config = 23;</code>
       * @param value The cloudTokenConfig to set.
       * @return This builder for chaining.
       */
      public Builder setCloudTokenConfig(int value) {
        
        cloudTokenConfig_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *   - 255: do not send cloud_token field                                                                                     
       * </pre>
       *
       * <code>uint32 cloud_token_config = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearCloudTokenConfig() {
        bitField0_ = (bitField0_ & ~0x00400000);
        cloudTokenConfig_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object cloudToken_ = "";
      /**
       * <pre>
       * Cloud token that should be sent with each measurement frame                                                                
       * </pre>
       *
       * <code>string cloud_token = 24;</code>
       * @return The cloudToken.
       */
      public java.lang.String getCloudToken() {
        java.lang.Object ref = cloudToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cloudToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Cloud token that should be sent with each measurement frame                                                                
       * </pre>
       *
       * <code>string cloud_token = 24;</code>
       * @return The bytes for cloudToken.
       */
      public com.google.protobuf.ByteString
          getCloudTokenBytes() {
        java.lang.Object ref = cloudToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cloudToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Cloud token that should be sent with each measurement frame                                                                
       * </pre>
       *
       * <code>string cloud_token = 24;</code>
       * @param value The cloudToken to set.
       * @return This builder for chaining.
       */
      public Builder setCloudToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        cloudToken_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cloud token that should be sent with each measurement frame                                                                
       * </pre>
       *
       * <code>string cloud_token = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearCloudToken() {
        cloudToken_ = getDefaultInstance().getCloudToken();
        bitField0_ = (bitField0_ & ~0x00800000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cloud token that should be sent with each measurement frame                                                                
       * </pre>
       *
       * <code>string cloud_token = 24;</code>
       * @param value The bytes for cloudToken to set.
       * @return This builder for chaining.
       */
      public Builder setCloudTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        cloudToken_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString serialNumber_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>bytes serial_number = 25;</code>
       * @return The serialNumber.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSerialNumber() {
        return serialNumber_;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>bytes serial_number = 25;</code>
       * @param value The serialNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSerialNumber(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        serialNumber_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>bytes serial_number = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearSerialNumber() {
        bitField0_ = (bitField0_ & ~0x01000000);
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> channelTypes_ =
        java.util.Collections.emptyList();
      private void ensureChannelTypesIsMutable() {
        if (!((bitField0_ & 0x02000000) != 0)) {
          channelTypes_ = new java.util.ArrayList<java.lang.Integer>(channelTypes_);
          bitField0_ |= 0x02000000;
        }
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @return A list containing the channelTypes.
       */
      public java.util.List<org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType> getChannelTypesList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType>(channelTypes_, channelTypes_converter_);
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @return The count of channelTypes.
       */
      public int getChannelTypesCount() {
        return channelTypes_.size();
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param index The index of the element to return.
       * @return The channelTypes at the given index.
       */
      public org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType getChannelTypes(int index) {
        return channelTypes_converter_.convert(channelTypes_.get(index));
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param index The index to set the value at.
       * @param value The channelTypes to set.
       * @return This builder for chaining.
       */
      public Builder setChannelTypes(
          int index, org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChannelTypesIsMutable();
        channelTypes_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param value The channelTypes to add.
       * @return This builder for chaining.
       */
      public Builder addChannelTypes(org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChannelTypesIsMutable();
        channelTypes_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param values The channelTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllChannelTypes(
          java.lang.Iterable<? extends org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType> values) {
        ensureChannelTypesIsMutable();
        for (org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.MeasurementType value : values) {
          channelTypes_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelTypes() {
        channelTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @return A list containing the enum numeric values on the wire for channelTypes.
       */
      public java.util.List<java.lang.Integer>
      getChannelTypesValueList() {
        return java.util.Collections.unmodifiableList(channelTypes_);
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of channelTypes at the given index.
       */
      public int getChannelTypesValue(int index) {
        return channelTypes_.get(index);
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for channelTypes to set.
       * @return This builder for chaining.
       */
      public Builder setChannelTypesValue(
          int index, int value) {
        ensureChannelTypesIsMutable();
        channelTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param value The enum numeric value on the wire for channelTypes to add.
       * @return This builder for chaining.
       */
      public Builder addChannelTypesValue(int value) {
        ensureChannelTypesIsMutable();
        channelTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is only sent by device                                                                                          
       * </pre>
       *
       * <code>repeated .MeasurementType channel_types = 27;</code>
       * @param values The enum numeric values on the wire for channelTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllChannelTypesValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureChannelTypesIsMutable();
        for (int value : values) {
          channelTypes_.add(value);
        }
        onChanged();
        return this;
      }

      private java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule> rules_ =
        java.util.Collections.emptyList();
      private void ensureRulesIsMutable() {
        if (!((bitField0_ & 0x04000000) != 0)) {
          rules_ = new java.util.ArrayList<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule>(rules_);
          bitField0_ |= 0x04000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder> rulesBuilder_;

      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule> getRulesList() {
        if (rulesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rules_);
        } else {
          return rulesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public int getRulesCount() {
        if (rulesBuilder_ == null) {
          return rules_.size();
        } else {
          return rulesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule getRules(int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);
        } else {
          return rulesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder setRules(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.set(index, value);
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder setRules(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.set(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder addRules(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder addRules(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(index, value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder addRules(
          org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder addRules(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder addAllRules(
          java.lang.Iterable<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule> values) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rules_);
          onChanged();
        } else {
          rulesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder clearRules() {
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
          onChanged();
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public Builder removeRules(int index) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.remove(index);
          onChanged();
        } else {
          rulesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder getRulesBuilder(
          int index) {
        return getRulesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder getRulesOrBuilder(
          int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);  } else {
          return rulesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public java.util.List<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder> 
           getRulesOrBuilderList() {
        if (rulesBuilder_ != null) {
          return rulesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rules_);
        }
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder addRulesBuilder() {
        return getRulesFieldBuilder().addBuilder(
            org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.getDefaultInstance());
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder addRulesBuilder(
          int index) {
        return getRulesFieldBuilder().addBuilder(
            index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.getDefaultInstance());
      }
      /**
       * <pre>
       * Edge logic rules set on the device. Up to 12 rules are supported                                                           
       * </pre>
       *
       * <code>repeated .ProtoRule rules = 28;</code>
       */
      public java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder> 
           getRulesBuilderList() {
        return getRulesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder> 
          getRulesFieldBuilder() {
        if (rulesBuilder_ == null) {
          rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder>(
                  rules_,
                  ((bitField0_ & 0x04000000) != 0),
                  getParentForChildren(),
                  isClean());
          rules_ = null;
        }
        return rulesBuilder_;
      }

      private int supervisionPeriod_ ;
      /**
       * <pre>
       * 0xFFFFFFFF - Functionality disabled                                                                                        
       * </pre>
       *
       * <code>uint32 supervision_period = 29;</code>
       * @return The supervisionPeriod.
       */
      @java.lang.Override
      public int getSupervisionPeriod() {
        return supervisionPeriod_;
      }
      /**
       * <pre>
       * 0xFFFFFFFF - Functionality disabled                                                                                        
       * </pre>
       *
       * <code>uint32 supervision_period = 29;</code>
       * @param value The supervisionPeriod to set.
       * @return This builder for chaining.
       */
      public Builder setSupervisionPeriod(int value) {
        
        supervisionPeriod_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0xFFFFFFFF - Functionality disabled                                                                                        
       * </pre>
       *
       * <code>uint32 supervision_period = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearSupervisionPeriod() {
        bitField0_ = (bitField0_ & ~0x08000000);
        supervisionPeriod_ = 0;
        onChanged();
        return this;
      }

      private boolean memoryResetRequest_ ;
      /**
       * <pre>
       * If true, sensor's measurement memory will be erased                                                                        
       * </pre>
       *
       * <code>bool memory_reset_request = 30;</code>
       * @return The memoryResetRequest.
       */
      @java.lang.Override
      public boolean getMemoryResetRequest() {
        return memoryResetRequest_;
      }
      /**
       * <pre>
       * If true, sensor's measurement memory will be erased                                                                        
       * </pre>
       *
       * <code>bool memory_reset_request = 30;</code>
       * @param value The memoryResetRequest to set.
       * @return This builder for chaining.
       */
      public Builder setMemoryResetRequest(boolean value) {
        
        memoryResetRequest_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, sensor's measurement memory will be erased                                                                        
       * </pre>
       *
       * <code>bool memory_reset_request = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemoryResetRequest() {
        bitField0_ = (bitField0_ & ~0x10000000);
        memoryResetRequest_ = false;
        onChanged();
        return this;
      }

      private int modemBandsMask_ ;
      /**
       * <pre>
       * example: To enable band 3, 8 and 20 set to  (1 &lt;&lt; 2) + (1 &lt;&lt; 5) + (1 &lt;&lt; 11) = 2084                                         
       * </pre>
       *
       * <code>uint32 modem_bands_mask = 31;</code>
       * @return The modemBandsMask.
       */
      @java.lang.Override
      public int getModemBandsMask() {
        return modemBandsMask_;
      }
      /**
       * <pre>
       * example: To enable band 3, 8 and 20 set to  (1 &lt;&lt; 2) + (1 &lt;&lt; 5) + (1 &lt;&lt; 11) = 2084                                         
       * </pre>
       *
       * <code>uint32 modem_bands_mask = 31;</code>
       * @param value The modemBandsMask to set.
       * @return This builder for chaining.
       */
      public Builder setModemBandsMask(int value) {
        
        modemBandsMask_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * example: To enable band 3, 8 and 20 set to  (1 &lt;&lt; 2) + (1 &lt;&lt; 5) + (1 &lt;&lt; 11) = 2084                                         
       * </pre>
       *
       * <code>uint32 modem_bands_mask = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearModemBandsMask() {
        bitField0_ = (bitField0_ & ~0x20000000);
        modemBandsMask_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object dataEndpoint_ = "";
      /**
       * <pre>
       * Data endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string data_endpoint = 32;</code>
       * @return The dataEndpoint.
       */
      public java.lang.String getDataEndpoint() {
        java.lang.Object ref = dataEndpoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dataEndpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Data endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string data_endpoint = 32;</code>
       * @return The bytes for dataEndpoint.
       */
      public com.google.protobuf.ByteString
          getDataEndpointBytes() {
        java.lang.Object ref = dataEndpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dataEndpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Data endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string data_endpoint = 32;</code>
       * @param value The dataEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDataEndpoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        dataEndpoint_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Data endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string data_endpoint = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataEndpoint() {
        dataEndpoint_ = getDefaultInstance().getDataEndpoint();
        bitField0_ = (bitField0_ & ~0x40000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Data endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string data_endpoint = 32;</code>
       * @param value The bytes for dataEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDataEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        dataEndpoint_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }

      private java.lang.Object configurationEndpoint_ = "";
      /**
       * <pre>
       * Configuration endpoint (string - max length 16)                                                                            
       * </pre>
       *
       * <code>string configuration_endpoint = 33;</code>
       * @return The configurationEndpoint.
       */
      public java.lang.String getConfigurationEndpoint() {
        java.lang.Object ref = configurationEndpoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          configurationEndpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Configuration endpoint (string - max length 16)                                                                            
       * </pre>
       *
       * <code>string configuration_endpoint = 33;</code>
       * @return The bytes for configurationEndpoint.
       */
      public com.google.protobuf.ByteString
          getConfigurationEndpointBytes() {
        java.lang.Object ref = configurationEndpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          configurationEndpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Configuration endpoint (string - max length 16)                                                                            
       * </pre>
       *
       * <code>string configuration_endpoint = 33;</code>
       * @param value The configurationEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setConfigurationEndpoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        configurationEndpoint_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration endpoint (string - max length 16)                                                                            
       * </pre>
       *
       * <code>string configuration_endpoint = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfigurationEndpoint() {
        configurationEndpoint_ = getDefaultInstance().getConfigurationEndpoint();
        bitField0_ = (bitField0_ & ~0x80000000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration endpoint (string - max length 16)                                                                            
       * </pre>
       *
       * <code>string configuration_endpoint = 33;</code>
       * @param value The bytes for configurationEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setConfigurationEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        configurationEndpoint_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }

      private java.lang.Object deviceInfoEndpoint_ = "";
      /**
       * <pre>
       * Device info endpoint (string - max length 16)                                                                              
       * </pre>
       *
       * <code>string device_info_endpoint = 34;</code>
       * @return The deviceInfoEndpoint.
       */
      public java.lang.String getDeviceInfoEndpoint() {
        java.lang.Object ref = deviceInfoEndpoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          deviceInfoEndpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Device info endpoint (string - max length 16)                                                                              
       * </pre>
       *
       * <code>string device_info_endpoint = 34;</code>
       * @return The bytes for deviceInfoEndpoint.
       */
      public com.google.protobuf.ByteString
          getDeviceInfoEndpointBytes() {
        java.lang.Object ref = deviceInfoEndpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceInfoEndpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Device info endpoint (string - max length 16)                                                                              
       * </pre>
       *
       * <code>string device_info_endpoint = 34;</code>
       * @param value The deviceInfoEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceInfoEndpoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        deviceInfoEndpoint_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device info endpoint (string - max length 16)                                                                              
       * </pre>
       *
       * <code>string device_info_endpoint = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceInfoEndpoint() {
        deviceInfoEndpoint_ = getDefaultInstance().getDeviceInfoEndpoint();
        bitField1_ = (bitField1_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device info endpoint (string - max length 16)                                                                              
       * </pre>
       *
       * <code>string device_info_endpoint = 34;</code>
       * @param value The bytes for deviceInfoEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceInfoEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        deviceInfoEndpoint_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object timeEndpoint_ = "";
      /**
       * <pre>
       * Time endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string time_endpoint = 35;</code>
       * @return The timeEndpoint.
       */
      public java.lang.String getTimeEndpoint() {
        java.lang.Object ref = timeEndpoint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timeEndpoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Time endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string time_endpoint = 35;</code>
       * @return The bytes for timeEndpoint.
       */
      public com.google.protobuf.ByteString
          getTimeEndpointBytes() {
        java.lang.Object ref = timeEndpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timeEndpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Time endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string time_endpoint = 35;</code>
       * @param value The timeEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setTimeEndpoint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        timeEndpoint_ = value;
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string time_endpoint = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeEndpoint() {
        timeEndpoint_ = getDefaultInstance().getTimeEndpoint();
        bitField1_ = (bitField1_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time endpoint (string - max length 16)                                                                                     
       * </pre>
       *
       * <code>string time_endpoint = 35;</code>
       * @param value The bytes for timeEndpoint to set.
       * @return This builder for chaining.
       */
      public Builder setTimeEndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        timeEndpoint_ = value;
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int bleTxPowerLevel_ ;
      /**
       * <pre>
       * Range: [1:4]                                                                                                               
       * </pre>
       *
       * <code>uint32 ble_tx_power_level = 36;</code>
       * @return The bleTxPowerLevel.
       */
      @java.lang.Override
      public int getBleTxPowerLevel() {
        return bleTxPowerLevel_;
      }
      /**
       * <pre>
       * Range: [1:4]                                                                                                               
       * </pre>
       *
       * <code>uint32 ble_tx_power_level = 36;</code>
       * @param value The bleTxPowerLevel to set.
       * @return This builder for chaining.
       */
      public Builder setBleTxPowerLevel(int value) {
        
        bleTxPowerLevel_ = value;
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Range: [1:4]                                                                                                               
       * </pre>
       *
       * <code>uint32 ble_tx_power_level = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearBleTxPowerLevel() {
        bitField1_ = (bitField1_ & ~0x00000004);
        bleTxPowerLevel_ = 0;
        onChanged();
        return this;
      }

      private boolean requestRuntimeErrorsClear_ ;
      /**
       * <pre>
       * If true, the sensor's runtime errors will be cleared                                                                       
       * </pre>
       *
       * <code>bool request_runtime_errors_clear = 37;</code>
       * @return The requestRuntimeErrorsClear.
       */
      @java.lang.Override
      public boolean getRequestRuntimeErrorsClear() {
        return requestRuntimeErrorsClear_;
      }
      /**
       * <pre>
       * If true, the sensor's runtime errors will be cleared                                                                       
       * </pre>
       *
       * <code>bool request_runtime_errors_clear = 37;</code>
       * @param value The requestRuntimeErrorsClear to set.
       * @return This builder for chaining.
       */
      public Builder setRequestRuntimeErrorsClear(boolean value) {
        
        requestRuntimeErrorsClear_ = value;
        bitField1_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the sensor's runtime errors will be cleared                                                                       
       * </pre>
       *
       * <code>bool request_runtime_errors_clear = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestRuntimeErrorsClear() {
        bitField1_ = (bitField1_ & ~0x00000008);
        requestRuntimeErrorsClear_ = false;
        onChanged();
        return this;
      }

      private int errorTimestamp_ ;
      /**
       * <pre>
       * Timestamp when a new error code was reported                                                                               
       * </pre>
       *
       * <code>uint32 error_timestamp = 38;</code>
       * @return The errorTimestamp.
       */
      @java.lang.Override
      public int getErrorTimestamp() {
        return errorTimestamp_;
      }
      /**
       * <pre>
       * Timestamp when a new error code was reported                                                                               
       * </pre>
       *
       * <code>uint32 error_timestamp = 38;</code>
       * @param value The errorTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setErrorTimestamp(int value) {
        
        errorTimestamp_ = value;
        bitField1_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp when a new error code was reported                                                                               
       * </pre>
       *
       * <code>uint32 error_timestamp = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearErrorTimestamp() {
        bitField1_ = (bitField1_ & ~0x00000010);
        errorTimestamp_ = 0;
        onChanged();
        return this;
      }

      private int hashTimestamp_ ;
      /**
       * <pre>
       * Timestamp when the new configuration was set                                                                               
       * </pre>
       *
       * <code>uint32 hash_timestamp = 39;</code>
       * @return The hashTimestamp.
       */
      @java.lang.Override
      public int getHashTimestamp() {
        return hashTimestamp_;
      }
      /**
       * <pre>
       * Timestamp when the new configuration was set                                                                               
       * </pre>
       *
       * <code>uint32 hash_timestamp = 39;</code>
       * @param value The hashTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setHashTimestamp(int value) {
        
        hashTimestamp_ = value;
        bitField1_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Timestamp when the new configuration was set                                                                               
       * </pre>
       *
       * <code>uint32 hash_timestamp = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearHashTimestamp() {
        bitField1_ = (bitField1_ & ~0x00000020);
        hashTimestamp_ = 0;
        onChanged();
        return this;
      }

      private int cloudTokenCoapOption_ ;
      /**
       * <pre>
       *   - 65000 - cloud token sent in the payload                                                                                
       * </pre>
       *
       * <code>uint32 cloud_token_coap_option = 40;</code>
       * @return The cloudTokenCoapOption.
       */
      @java.lang.Override
      public int getCloudTokenCoapOption() {
        return cloudTokenCoapOption_;
      }
      /**
       * <pre>
       *   - 65000 - cloud token sent in the payload                                                                                
       * </pre>
       *
       * <code>uint32 cloud_token_coap_option = 40;</code>
       * @param value The cloudTokenCoapOption to set.
       * @return This builder for chaining.
       */
      public Builder setCloudTokenCoapOption(int value) {
        
        cloudTokenCoapOption_ = value;
        bitField1_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *   - 65000 - cloud token sent in the payload                                                                                
       * </pre>
       *
       * <code>uint32 cloud_token_coap_option = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearCloudTokenCoapOption() {
        bitField1_ = (bitField1_ & ~0x00000040);
        cloudTokenCoapOption_ = 0;
        onChanged();
        return this;
      }

      private int payloadSignatureCoapOption_ ;
      /**
       * <pre>
       *   - 65000 - no payload signature in CoAP option                                                                            
       * </pre>
       *
       * <code>uint32 payload_signature_coap_option = 41;</code>
       * @return The payloadSignatureCoapOption.
       */
      @java.lang.Override
      public int getPayloadSignatureCoapOption() {
        return payloadSignatureCoapOption_;
      }
      /**
       * <pre>
       *   - 65000 - no payload signature in CoAP option                                                                            
       * </pre>
       *
       * <code>uint32 payload_signature_coap_option = 41;</code>
       * @param value The payloadSignatureCoapOption to set.
       * @return This builder for chaining.
       */
      public Builder setPayloadSignatureCoapOption(int value) {
        
        payloadSignatureCoapOption_ = value;
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *   - 65000 - no payload signature in CoAP option                                                                            
       * </pre>
       *
       * <code>uint32 payload_signature_coap_option = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayloadSignatureCoapOption() {
        bitField1_ = (bitField1_ & ~0x00000080);
        payloadSignatureCoapOption_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dnsServerIp_ = emptyIntList();
      private void ensureDnsServerIpIsMutable() {
        if (!((bitField1_ & 0x00000100) != 0)) {
          dnsServerIp_ = mutableCopy(dnsServerIp_);
          bitField1_ |= 0x00000100;
        }
      }
      /**
       * <pre>
       * Note: when setting less than four octets the remaining will be filled with zeros.                                          
       * </pre>
       *
       * <code>repeated uint32 dns_server_ip = 42;</code>
       * @return A list containing the dnsServerIp.
       */
      public java.util.List<java.lang.Integer>
          getDnsServerIpList() {
        return ((bitField1_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(dnsServerIp_) : dnsServerIp_;
      }
      /**
       * <pre>
       * Note: when setting less than four octets the remaining will be filled with zeros.                                          
       * </pre>
       *
       * <code>repeated uint32 dns_server_ip = 42;</code>
       * @return The count of dnsServerIp.
       */
      public int getDnsServerIpCount() {
        return dnsServerIp_.size();
      }
      /**
       * <pre>
       * Note: when setting less than four octets the remaining will be filled with zeros.                                          
       * </pre>
       *
       * <code>repeated uint32 dns_server_ip = 42;</code>
       * @param index The index of the element to return.
       * @return The dnsServerIp at the given index.
       */
      public int getDnsServerIp(int index) {
        return dnsServerIp_.getInt(index);
      }
      /**
       * <pre>
       * Note: when setting less than four octets the remaining will be filled with zeros.                                          
       * </pre>
       *
       * <code>repeated uint32 dns_server_ip = 42;</code>
       * @param index The index to set the value at.
       * @param value The dnsServerIp to set.
       * @return This builder for chaining.
       */
      public Builder setDnsServerIp(
          int index, int value) {
        
        ensureDnsServerIpIsMutable();
        dnsServerIp_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Note: when setting less than four octets the remaining will be filled with zeros.                                          
       * </pre>
       *
       * <code>repeated uint32 dns_server_ip = 42;</code>
       * @param value The dnsServerIp to add.
       * @return This builder for chaining.
       */
      public Builder addDnsServerIp(int value) {
        
        ensureDnsServerIpIsMutable();
        dnsServerIp_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Note: when setting less than four octets the remaining will be filled with zeros.                                          
       * </pre>
       *
       * <code>repeated uint32 dns_server_ip = 42;</code>
       * @param values The dnsServerIp to add.
       * @return This builder for chaining.
       */
      public Builder addAllDnsServerIp(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDnsServerIpIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dnsServerIp_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Note: when setting less than four octets the remaining will be filled with zeros.                                          
       * </pre>
       *
       * <code>repeated uint32 dns_server_ip = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearDnsServerIp() {
        dnsServerIp_ = emptyIntList();
        bitField1_ = (bitField1_ & ~0x00000100);
        onChanged();
        return this;
      }

      private int dnsTtlConfig_ ;
      /**
       * <pre>
       *   - 864002 - DNS request is only after communication failed                                                                
       * </pre>
       *
       * <code>uint32 dns_ttl_config = 43;</code>
       * @return The dnsTtlConfig.
       */
      @java.lang.Override
      public int getDnsTtlConfig() {
        return dnsTtlConfig_;
      }
      /**
       * <pre>
       *   - 864002 - DNS request is only after communication failed                                                                
       * </pre>
       *
       * <code>uint32 dns_ttl_config = 43;</code>
       * @param value The dnsTtlConfig to set.
       * @return This builder for chaining.
       */
      public Builder setDnsTtlConfig(int value) {
        
        dnsTtlConfig_ = value;
        bitField1_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *   - 864002 - DNS request is only after communication failed                                                                
       * </pre>
       *
       * <code>uint32 dns_ttl_config = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearDnsTtlConfig() {
        bitField1_ = (bitField1_ & ~0x00000200);
        dnsTtlConfig_ = 0;
        onChanged();
        return this;
      }

      private int payloadSplitInfo_ ;
      /**
       * <pre>
       * values &gt; 0 - last part of the split payload, the value indicates the total number of the messages sent                     
       * </pre>
       *
       * <code>sint32 payload_split_info = 44;</code>
       * @return The payloadSplitInfo.
       */
      @java.lang.Override
      public int getPayloadSplitInfo() {
        return payloadSplitInfo_;
      }
      /**
       * <pre>
       * values &gt; 0 - last part of the split payload, the value indicates the total number of the messages sent                     
       * </pre>
       *
       * <code>sint32 payload_split_info = 44;</code>
       * @param value The payloadSplitInfo to set.
       * @return This builder for chaining.
       */
      public Builder setPayloadSplitInfo(int value) {
        
        payloadSplitInfo_ = value;
        bitField1_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * values &gt; 0 - last part of the split payload, the value indicates the total number of the messages sent                     
       * </pre>
       *
       * <code>sint32 payload_split_info = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayloadSplitInfo() {
        bitField1_ = (bitField1_ & ~0x00000400);
        payloadSplitInfo_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object modemUpdateRequest_ = "";
      /**
       * <pre>
       * For BC66 module, this field is a DFOTA URL                                                                                 
       * </pre>
       *
       * <code>string modem_update_request = 45;</code>
       * @return The modemUpdateRequest.
       */
      public java.lang.String getModemUpdateRequest() {
        java.lang.Object ref = modemUpdateRequest_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modemUpdateRequest_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * For BC66 module, this field is a DFOTA URL                                                                                 
       * </pre>
       *
       * <code>string modem_update_request = 45;</code>
       * @return The bytes for modemUpdateRequest.
       */
      public com.google.protobuf.ByteString
          getModemUpdateRequestBytes() {
        java.lang.Object ref = modemUpdateRequest_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modemUpdateRequest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * For BC66 module, this field is a DFOTA URL                                                                                 
       * </pre>
       *
       * <code>string modem_update_request = 45;</code>
       * @param value The modemUpdateRequest to set.
       * @return This builder for chaining.
       */
      public Builder setModemUpdateRequest(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        modemUpdateRequest_ = value;
        bitField1_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For BC66 module, this field is a DFOTA URL                                                                                 
       * </pre>
       *
       * <code>string modem_update_request = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearModemUpdateRequest() {
        modemUpdateRequest_ = getDefaultInstance().getModemUpdateRequest();
        bitField1_ = (bitField1_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For BC66 module, this field is a DFOTA URL                                                                                 
       * </pre>
       *
       * <code>string modem_update_request = 45;</code>
       * @param value The bytes for modemUpdateRequest to set.
       * @return This builder for chaining.
       */
      public Builder setModemUpdateRequestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        modemUpdateRequest_ = value;
        bitField1_ |= 0x00000800;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList cellularConfigParams_ = emptyIntList();
      private void ensureCellularConfigParamsIsMutable() {
        if (!((bitField1_ & 0x00001000) != 0)) {
          cellularConfigParams_ = mutableCopy(cellularConfigParams_);
          bitField1_ |= 0x00001000;
        }
      }
      /**
       * <pre>
       * 2nd - 12th items - Cellular parameters                                                                                     
       * </pre>
       *
       * <code>repeated uint32 cellular_config_params = 46;</code>
       * @return A list containing the cellularConfigParams.
       */
      public java.util.List<java.lang.Integer>
          getCellularConfigParamsList() {
        return ((bitField1_ & 0x00001000) != 0) ?
                 java.util.Collections.unmodifiableList(cellularConfigParams_) : cellularConfigParams_;
      }
      /**
       * <pre>
       * 2nd - 12th items - Cellular parameters                                                                                     
       * </pre>
       *
       * <code>repeated uint32 cellular_config_params = 46;</code>
       * @return The count of cellularConfigParams.
       */
      public int getCellularConfigParamsCount() {
        return cellularConfigParams_.size();
      }
      /**
       * <pre>
       * 2nd - 12th items - Cellular parameters                                                                                     
       * </pre>
       *
       * <code>repeated uint32 cellular_config_params = 46;</code>
       * @param index The index of the element to return.
       * @return The cellularConfigParams at the given index.
       */
      public int getCellularConfigParams(int index) {
        return cellularConfigParams_.getInt(index);
      }
      /**
       * <pre>
       * 2nd - 12th items - Cellular parameters                                                                                     
       * </pre>
       *
       * <code>repeated uint32 cellular_config_params = 46;</code>
       * @param index The index to set the value at.
       * @param value The cellularConfigParams to set.
       * @return This builder for chaining.
       */
      public Builder setCellularConfigParams(
          int index, int value) {
        
        ensureCellularConfigParamsIsMutable();
        cellularConfigParams_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 2nd - 12th items - Cellular parameters                                                                                     
       * </pre>
       *
       * <code>repeated uint32 cellular_config_params = 46;</code>
       * @param value The cellularConfigParams to add.
       * @return This builder for chaining.
       */
      public Builder addCellularConfigParams(int value) {
        
        ensureCellularConfigParamsIsMutable();
        cellularConfigParams_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 2nd - 12th items - Cellular parameters                                                                                     
       * </pre>
       *
       * <code>repeated uint32 cellular_config_params = 46;</code>
       * @param values The cellularConfigParams to add.
       * @return This builder for chaining.
       */
      public Builder addAllCellularConfigParams(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCellularConfigParamsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cellularConfigParams_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 2nd - 12th items - Cellular parameters                                                                                     
       * </pre>
       *
       * <code>repeated uint32 cellular_config_params = 46;</code>
       * @return This builder for chaining.
       */
      public Builder clearCellularConfigParams() {
        cellularConfigParams_ = emptyIntList();
        bitField1_ = (bitField1_ & ~0x00001000);
        onChanged();
        return this;
      }

      private java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar> calendars_ =
        java.util.Collections.emptyList();
      private void ensureCalendarsIsMutable() {
        if (!((bitField1_ & 0x00002000) != 0)) {
          calendars_ = new java.util.ArrayList<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar>(calendars_);
          bitField1_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder> calendarsBuilder_;

      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar> getCalendarsList() {
        if (calendarsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calendars_);
        } else {
          return calendarsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public int getCalendarsCount() {
        if (calendarsBuilder_ == null) {
          return calendars_.size();
        } else {
          return calendarsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar getCalendars(int index) {
        if (calendarsBuilder_ == null) {
          return calendars_.get(index);
        } else {
          return calendarsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder setCalendars(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar value) {
        if (calendarsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarsIsMutable();
          calendars_.set(index, value);
          onChanged();
        } else {
          calendarsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder setCalendars(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder builderForValue) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.set(index, builderForValue.build());
          onChanged();
        } else {
          calendarsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder addCalendars(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar value) {
        if (calendarsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarsIsMutable();
          calendars_.add(value);
          onChanged();
        } else {
          calendarsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder addCalendars(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar value) {
        if (calendarsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarsIsMutable();
          calendars_.add(index, value);
          onChanged();
        } else {
          calendarsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder addCalendars(
          org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder builderForValue) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.add(builderForValue.build());
          onChanged();
        } else {
          calendarsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder addCalendars(
          int index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder builderForValue) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.add(index, builderForValue.build());
          onChanged();
        } else {
          calendarsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder addAllCalendars(
          java.lang.Iterable<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar> values) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, calendars_);
          onChanged();
        } else {
          calendarsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder clearCalendars() {
        if (calendarsBuilder_ == null) {
          calendars_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00002000);
          onChanged();
        } else {
          calendarsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public Builder removeCalendars(int index) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.remove(index);
          onChanged();
        } else {
          calendarsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder getCalendarsBuilder(
          int index) {
        return getCalendarsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder getCalendarsOrBuilder(
          int index) {
        if (calendarsBuilder_ == null) {
          return calendars_.get(index);  } else {
          return calendarsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public java.util.List<? extends org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder> 
           getCalendarsOrBuilderList() {
        if (calendarsBuilder_ != null) {
          return calendarsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calendars_);
        }
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder addCalendarsBuilder() {
        return getCalendarsFieldBuilder().addBuilder(
            org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.getDefaultInstance());
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder addCalendarsBuilder(
          int index) {
        return getCalendarsFieldBuilder().addBuilder(
            index, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.getDefaultInstance());
      }
      /**
       * <pre>
       * Calendar configuration. Up to 6 calendars are supported                                                                    
       * </pre>
       *
       * <code>repeated .ProtoCalendar calendars = 47;</code>
       */
      public java.util.List<org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder> 
           getCalendarsBuilderList() {
        return getCalendarsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder> 
          getCalendarsFieldBuilder() {
        if (calendarsBuilder_ == null) {
          calendarsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder>(
                  calendars_,
                  ((bitField1_ & 0x00002000) != 0),
                  getParentForChildren(),
                  isClean());
          calendars_ = null;
        }
        return calendarsBuilder_;
      }

      private java.util.List<org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl> channelsControlRequest_ =
        java.util.Collections.emptyList();
      private void ensureChannelsControlRequestIsMutable() {
        if (!((bitField1_ & 0x00004000) != 0)) {
          channelsControlRequest_ = new java.util.ArrayList<org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl>(channelsControlRequest_);
          bitField1_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder> channelsControlRequestBuilder_;

      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public java.util.List<org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl> getChannelsControlRequestList() {
        if (channelsControlRequestBuilder_ == null) {
          return java.util.Collections.unmodifiableList(channelsControlRequest_);
        } else {
          return channelsControlRequestBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public int getChannelsControlRequestCount() {
        if (channelsControlRequestBuilder_ == null) {
          return channelsControlRequest_.size();
        } else {
          return channelsControlRequestBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl getChannelsControlRequest(int index) {
        if (channelsControlRequestBuilder_ == null) {
          return channelsControlRequest_.get(index);
        } else {
          return channelsControlRequestBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder setChannelsControlRequest(
          int index, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl value) {
        if (channelsControlRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsControlRequestIsMutable();
          channelsControlRequest_.set(index, value);
          onChanged();
        } else {
          channelsControlRequestBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder setChannelsControlRequest(
          int index, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder builderForValue) {
        if (channelsControlRequestBuilder_ == null) {
          ensureChannelsControlRequestIsMutable();
          channelsControlRequest_.set(index, builderForValue.build());
          onChanged();
        } else {
          channelsControlRequestBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder addChannelsControlRequest(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl value) {
        if (channelsControlRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsControlRequestIsMutable();
          channelsControlRequest_.add(value);
          onChanged();
        } else {
          channelsControlRequestBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder addChannelsControlRequest(
          int index, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl value) {
        if (channelsControlRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChannelsControlRequestIsMutable();
          channelsControlRequest_.add(index, value);
          onChanged();
        } else {
          channelsControlRequestBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder addChannelsControlRequest(
          org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder builderForValue) {
        if (channelsControlRequestBuilder_ == null) {
          ensureChannelsControlRequestIsMutable();
          channelsControlRequest_.add(builderForValue.build());
          onChanged();
        } else {
          channelsControlRequestBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder addChannelsControlRequest(
          int index, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder builderForValue) {
        if (channelsControlRequestBuilder_ == null) {
          ensureChannelsControlRequestIsMutable();
          channelsControlRequest_.add(index, builderForValue.build());
          onChanged();
        } else {
          channelsControlRequestBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder addAllChannelsControlRequest(
          java.lang.Iterable<? extends org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl> values) {
        if (channelsControlRequestBuilder_ == null) {
          ensureChannelsControlRequestIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, channelsControlRequest_);
          onChanged();
        } else {
          channelsControlRequestBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder clearChannelsControlRequest() {
        if (channelsControlRequestBuilder_ == null) {
          channelsControlRequest_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00004000);
          onChanged();
        } else {
          channelsControlRequestBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public Builder removeChannelsControlRequest(int index) {
        if (channelsControlRequestBuilder_ == null) {
          ensureChannelsControlRequestIsMutable();
          channelsControlRequest_.remove(index);
          onChanged();
        } else {
          channelsControlRequestBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder getChannelsControlRequestBuilder(
          int index) {
        return getChannelsControlRequestFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder getChannelsControlRequestOrBuilder(
          int index) {
        if (channelsControlRequestBuilder_ == null) {
          return channelsControlRequest_.get(index);  } else {
          return channelsControlRequestBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public java.util.List<? extends org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder> 
           getChannelsControlRequestOrBuilderList() {
        if (channelsControlRequestBuilder_ != null) {
          return channelsControlRequestBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(channelsControlRequest_);
        }
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder addChannelsControlRequestBuilder() {
        return getChannelsControlRequestFieldBuilder().addBuilder(
            org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.getDefaultInstance());
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder addChannelsControlRequestBuilder(
          int index) {
        return getChannelsControlRequestFieldBuilder().addBuilder(
            index, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.getDefaultInstance());
      }
      /**
       * <pre>
       * This field is only sent by server                                                                                          
       * </pre>
       *
       * <code>repeated .ProtoChannelControl channels_control_request = 48;</code>
       */
      public java.util.List<org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder> 
           getChannelsControlRequestBuilderList() {
        return getChannelsControlRequestFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder> 
          getChannelsControlRequestFieldBuilder() {
        if (channelsControlRequestBuilder_ == null) {
          channelsControlRequestBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControl.Builder, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoChannelControlOrBuilder>(
                  channelsControlRequest_,
                  ((bitField1_ & 0x00004000) != 0),
                  getParentForChildren(),
                  isClean());
          channelsControlRequest_ = null;
        }
        return channelsControlRequestBuilder_;
      }

      private org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters calibrationParametersRequest_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.Builder, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParametersOrBuilder> calibrationParametersRequestBuilder_;
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       * @return Whether the calibrationParametersRequest field is set.
       */
      public boolean hasCalibrationParametersRequest() {
        return ((bitField1_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       * @return The calibrationParametersRequest.
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters getCalibrationParametersRequest() {
        if (calibrationParametersRequestBuilder_ == null) {
          return calibrationParametersRequest_ == null ? org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.getDefaultInstance() : calibrationParametersRequest_;
        } else {
          return calibrationParametersRequestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       */
      public Builder setCalibrationParametersRequest(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters value) {
        if (calibrationParametersRequestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calibrationParametersRequest_ = value;
        } else {
          calibrationParametersRequestBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       */
      public Builder setCalibrationParametersRequest(
          org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.Builder builderForValue) {
        if (calibrationParametersRequestBuilder_ == null) {
          calibrationParametersRequest_ = builderForValue.build();
        } else {
          calibrationParametersRequestBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       */
      public Builder mergeCalibrationParametersRequest(org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters value) {
        if (calibrationParametersRequestBuilder_ == null) {
          if (((bitField1_ & 0x00008000) != 0) &&
            calibrationParametersRequest_ != null &&
            calibrationParametersRequest_ != org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.getDefaultInstance()) {
            getCalibrationParametersRequestBuilder().mergeFrom(value);
          } else {
            calibrationParametersRequest_ = value;
          }
        } else {
          calibrationParametersRequestBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       */
      public Builder clearCalibrationParametersRequest() {
        bitField1_ = (bitField1_ & ~0x00008000);
        calibrationParametersRequest_ = null;
        if (calibrationParametersRequestBuilder_ != null) {
          calibrationParametersRequestBuilder_.dispose();
          calibrationParametersRequestBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.Builder getCalibrationParametersRequestBuilder() {
        bitField1_ |= 0x00008000;
        onChanged();
        return getCalibrationParametersRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       */
      public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParametersOrBuilder getCalibrationParametersRequestOrBuilder() {
        if (calibrationParametersRequestBuilder_ != null) {
          return calibrationParametersRequestBuilder_.getMessageOrBuilder();
        } else {
          return calibrationParametersRequest_ == null ?
              org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.getDefaultInstance() : calibrationParametersRequest_;
        }
      }
      /**
       * <pre>
       * Set/get calibration parameters for single channel.                                                                         
       * </pre>
       *
       * <code>.ProtoCalibrationParameters calibration_parameters_request = 49;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.Builder, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParametersOrBuilder> 
          getCalibrationParametersRequestFieldBuilder() {
        if (calibrationParametersRequestBuilder_ == null) {
          calibrationParametersRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParameters.Builder, org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoCalibrationParametersOrBuilder>(
                  getCalibrationParametersRequest(),
                  getParentForChildren(),
                  isClean());
          calibrationParametersRequest_ = null;
        }
        return calibrationParametersRequestBuilder_;
      }

      private com.google.protobuf.Internal.IntList ledConfig_ = emptyIntList();
      private void ensureLedConfigIsMutable() {
        if (!((bitField1_ & 0x00010000) != 0)) {
          ledConfig_ = mutableCopy(ledConfig_);
          bitField1_ |= 0x00010000;
        }
      }
      /**
       * <pre>
       *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
       * </pre>
       *
       * <code>repeated uint32 led_config = 50;</code>
       * @return A list containing the ledConfig.
       */
      public java.util.List<java.lang.Integer>
          getLedConfigList() {
        return ((bitField1_ & 0x00010000) != 0) ?
                 java.util.Collections.unmodifiableList(ledConfig_) : ledConfig_;
      }
      /**
       * <pre>
       *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
       * </pre>
       *
       * <code>repeated uint32 led_config = 50;</code>
       * @return The count of ledConfig.
       */
      public int getLedConfigCount() {
        return ledConfig_.size();
      }
      /**
       * <pre>
       *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
       * </pre>
       *
       * <code>repeated uint32 led_config = 50;</code>
       * @param index The index of the element to return.
       * @return The ledConfig at the given index.
       */
      public int getLedConfig(int index) {
        return ledConfig_.getInt(index);
      }
      /**
       * <pre>
       *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
       * </pre>
       *
       * <code>repeated uint32 led_config = 50;</code>
       * @param index The index to set the value at.
       * @param value The ledConfig to set.
       * @return This builder for chaining.
       */
      public Builder setLedConfig(
          int index, int value) {
        
        ensureLedConfigIsMutable();
        ledConfig_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
       * </pre>
       *
       * <code>repeated uint32 led_config = 50;</code>
       * @param value The ledConfig to add.
       * @return This builder for chaining.
       */
      public Builder addLedConfig(int value) {
        
        ensureLedConfigIsMutable();
        ledConfig_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
       * </pre>
       *
       * <code>repeated uint32 led_config = 50;</code>
       * @param values The ledConfig to add.
       * @return This builder for chaining.
       */
      public Builder addAllLedConfig(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLedConfigIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ledConfig_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *    - led_config[8] - Blink duration (20-1000ms in 5 ms resolution)                                                         
       * </pre>
       *
       * <code>repeated uint32 led_config = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearLedConfig() {
        ledConfig_ = emptyIntList();
        bitField1_ = (bitField1_ & ~0x00010000);
        onChanged();
        return this;
      }

      private int networkTroubleshooting_ ;
      /**
       * <pre>
       *   - 2: network troubleshooting enabled                                                                                     
       * </pre>
       *
       * <code>uint32 network_troubleshooting = 51;</code>
       * @return The networkTroubleshooting.
       */
      @java.lang.Override
      public int getNetworkTroubleshooting() {
        return networkTroubleshooting_;
      }
      /**
       * <pre>
       *   - 2: network troubleshooting enabled                                                                                     
       * </pre>
       *
       * <code>uint32 network_troubleshooting = 51;</code>
       * @param value The networkTroubleshooting to set.
       * @return This builder for chaining.
       */
      public Builder setNetworkTroubleshooting(int value) {
        
        networkTroubleshooting_ = value;
        bitField1_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *   - 2: network troubleshooting enabled                                                                                     
       * </pre>
       *
       * <code>uint32 network_troubleshooting = 51;</code>
       * @return This builder for chaining.
       */
      public Builder clearNetworkTroubleshooting() {
        bitField1_ = (bitField1_ & ~0x00020000);
        networkTroubleshooting_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString encryptionKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 0x7F - encryption key disabled.                                                                                            
       * </pre>
       *
       * <code>bytes encryption_key = 54;</code>
       * @return The encryptionKey.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncryptionKey() {
        return encryptionKey_;
      }
      /**
       * <pre>
       * 0x7F - encryption key disabled.                                                                                            
       * </pre>
       *
       * <code>bytes encryption_key = 54;</code>
       * @param value The encryptionKey to set.
       * @return This builder for chaining.
       */
      public Builder setEncryptionKey(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        encryptionKey_ = value;
        bitField1_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0x7F - encryption key disabled.                                                                                            
       * </pre>
       *
       * <code>bytes encryption_key = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncryptionKey() {
        bitField1_ = (bitField1_ & ~0x00040000);
        encryptionKey_ = getDefaultInstance().getEncryptionKey();
        onChanged();
        return this;
      }

      private java.lang.Object apnUserName_ = "";
      /**
       * <pre>
       * User name can only be set to custom value if apn has been configured (is not automatic)                                    
       * </pre>
       *
       * <code>string apn_user_name = 55;</code>
       * @return The apnUserName.
       */
      public java.lang.String getApnUserName() {
        java.lang.Object ref = apnUserName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          apnUserName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User name can only be set to custom value if apn has been configured (is not automatic)                                    
       * </pre>
       *
       * <code>string apn_user_name = 55;</code>
       * @return The bytes for apnUserName.
       */
      public com.google.protobuf.ByteString
          getApnUserNameBytes() {
        java.lang.Object ref = apnUserName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apnUserName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User name can only be set to custom value if apn has been configured (is not automatic)                                    
       * </pre>
       *
       * <code>string apn_user_name = 55;</code>
       * @param value The apnUserName to set.
       * @return This builder for chaining.
       */
      public Builder setApnUserName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        apnUserName_ = value;
        bitField1_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User name can only be set to custom value if apn has been configured (is not automatic)                                    
       * </pre>
       *
       * <code>string apn_user_name = 55;</code>
       * @return This builder for chaining.
       */
      public Builder clearApnUserName() {
        apnUserName_ = getDefaultInstance().getApnUserName();
        bitField1_ = (bitField1_ & ~0x00080000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User name can only be set to custom value if apn has been configured (is not automatic)                                    
       * </pre>
       *
       * <code>string apn_user_name = 55;</code>
       * @param value The bytes for apnUserName to set.
       * @return This builder for chaining.
       */
      public Builder setApnUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        apnUserName_ = value;
        bitField1_ |= 0x00080000;
        onChanged();
        return this;
      }

      private java.lang.Object apnPassword_ = "";
      /**
       * <pre>
       * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
       * </pre>
       *
       * <code>string apn_password = 56;</code>
       * @return The apnPassword.
       */
      public java.lang.String getApnPassword() {
        java.lang.Object ref = apnPassword_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          apnPassword_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
       * </pre>
       *
       * <code>string apn_password = 56;</code>
       * @return The bytes for apnPassword.
       */
      public com.google.protobuf.ByteString
          getApnPasswordBytes() {
        java.lang.Object ref = apnPassword_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          apnPassword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
       * </pre>
       *
       * <code>string apn_password = 56;</code>
       * @param value The apnPassword to set.
       * @return This builder for chaining.
       */
      public Builder setApnPassword(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        apnPassword_ = value;
        bitField1_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
       * </pre>
       *
       * <code>string apn_password = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearApnPassword() {
        apnPassword_ = getDefaultInstance().getApnPassword();
        bitField1_ = (bitField1_ & ~0x00100000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Password can only be set to custom value if apn_user_name has been configured (is not automatic)                           
       * </pre>
       *
       * <code>string apn_password = 56;</code>
       * @param value The bytes for apnPassword to set.
       * @return This builder for chaining.
       */
      public Builder setApnPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        apnPassword_ = value;
        bitField1_ |= 0x00100000;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ProtoConfig)
    }

    // @@protoc_insertion_point(class_scope:ProtoConfig)
    private static final org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig();
    }

    public static org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoConfig>
        PARSER = new com.google.protobuf.AbstractParser<ProtoConfig>() {
      @java.lang.Override
      public ProtoConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ConfigProtos.ProtoConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ProtoChannelControl_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ProtoChannelControl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ProtoCalibrationParameters_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ProtoCalibrationParameters_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ProtoConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ProtoConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031efento/proto_config.proto\032$efento/prot" +
      "o_measurement_types.proto\032\027efento/proto_" +
      "rule.proto\"D\n\023ProtoChannelControl\022\025\n\rcha" +
      "nnel_index\030\001 \001(\r\022\026\n\016control_params\030\002 \003(\r" +
      "\"i\n\032ProtoCalibrationParameters\022\033\n\023calibr" +
      "ation_request\030\001 \001(\r\022\032\n\022channel_assignmen" +
      "t\030\002 \001(\r\022\022\n\nparameters\030\003 \003(\005\"\210\014\n\013ProtoCon" +
      "fig\022\037\n\027measurement_period_base\030\002 \001(\r\022!\n\031" +
      "measurement_period_factor\030\032 \001(\r\022\035\n\025trans" +
      "mission_interval\030\003 \001(\r\022\030\n\020ble_turnoff_ti" +
      "me\030\004 \001(\r\022\024\n\014ack_interval\030\005 \001(\r\022\033\n\023reques" +
      "t_device_info\030\006 \001(\010\022\031\n\021request_fw_update" +
      "\030\007 \001(\010\022\024\n\014current_time\030\010 \001(\r\022\026\n\016transfer" +
      "_limit\030\t \001(\r\022\034\n\024transfer_limit_timer\030\n \001" +
      "(\r\022\026\n\016data_server_ip\030\013 \001(\t\022\030\n\020data_serve" +
      "r_port\030\014 \001(\r\022\030\n\020update_server_ip\030\r \001(\t\022\036" +
      "\n\026update_server_port_udp\030\016 \001(\r\022\037\n\027update" +
      "_server_port_coap\030\017 \001(\r\022\013\n\003apn\030\020 \001(\t\022\026\n\016" +
      "plmn_selection\030\021 \001(\r\022\035\n\025disable_modem_re" +
      "quest\030\022 \001(\r\022\035\n\025request_configuration\030\023 \001" +
      "(\010\022\016\n\006errors\030\024 \003(\r\022\014\n\004hash\030\025 \001(\r\022\036\n\026acce" +
      "pt_without_testing\030\026 \001(\010\022\032\n\022cloud_token_" +
      "config\030\027 \001(\r\022\023\n\013cloud_token\030\030 \001(\t\022\025\n\rser" +
      "ial_number\030\031 \001(\014\022\'\n\rchannel_types\030\033 \003(\0162" +
      "\020.MeasurementType\022\031\n\005rules\030\034 \003(\0132\n.Proto" +
      "Rule\022\032\n\022supervision_period\030\035 \001(\r\022\034\n\024memo" +
      "ry_reset_request\030\036 \001(\010\022\030\n\020modem_bands_ma" +
      "sk\030\037 \001(\r\022\025\n\rdata_endpoint\030  \001(\t\022\036\n\026confi" +
      "guration_endpoint\030! \001(\t\022\034\n\024device_info_e" +
      "ndpoint\030\" \001(\t\022\025\n\rtime_endpoint\030# \001(\t\022\032\n\022" +
      "ble_tx_power_level\030$ \001(\r\022$\n\034request_runt" +
      "ime_errors_clear\030% \001(\010\022\027\n\017error_timestam" +
      "p\030& \001(\r\022\026\n\016hash_timestamp\030\' \001(\r\022\037\n\027cloud" +
      "_token_coap_option\030( \001(\r\022%\n\035payload_sign" +
      "ature_coap_option\030) \001(\r\022\025\n\rdns_server_ip" +
      "\030* \003(\r\022\026\n\016dns_ttl_config\030+ \001(\r\022\032\n\022payloa" +
      "d_split_info\030, \001(\021\022\034\n\024modem_update_reque" +
      "st\030- \001(\t\022\036\n\026cellular_config_params\030. \003(\r" +
      "\022!\n\tcalendars\030/ \003(\0132\016.ProtoCalendar\0226\n\030c" +
      "hannels_control_request\0300 \003(\0132\024.ProtoCha" +
      "nnelControl\022C\n\036calibration_parameters_re" +
      "quest\0301 \001(\0132\033.ProtoCalibrationParameters" +
      "\022\022\n\nled_config\0302 \003(\r\022\037\n\027network_troubles" +
      "hooting\0303 \001(\r\022\026\n\016encryption_key\0306 \001(\014\022\025\n" +
      "\rapn_user_name\0307 \001(\t\022\024\n\014apn_password\0308 \001" +
      "(\tJ\004\0104\0205J\004\0105\0206B9\n)org.thingsboard.server" +
      ".gen.transport.coapB\014ConfigProtosb\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.getDescriptor(),
          org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.getDescriptor(),
        });
    internal_static_ProtoChannelControl_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ProtoChannelControl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ProtoChannelControl_descriptor,
        new java.lang.String[] { "ChannelIndex", "ControlParams", });
    internal_static_ProtoCalibrationParameters_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ProtoCalibrationParameters_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ProtoCalibrationParameters_descriptor,
        new java.lang.String[] { "CalibrationRequest", "ChannelAssignment", "Parameters", });
    internal_static_ProtoConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_ProtoConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ProtoConfig_descriptor,
        new java.lang.String[] { "MeasurementPeriodBase", "MeasurementPeriodFactor", "TransmissionInterval", "BleTurnoffTime", "AckInterval", "RequestDeviceInfo", "RequestFwUpdate", "CurrentTime", "TransferLimit", "TransferLimitTimer", "DataServerIp", "DataServerPort", "UpdateServerIp", "UpdateServerPortUdp", "UpdateServerPortCoap", "Apn", "PlmnSelection", "DisableModemRequest", "RequestConfiguration", "Errors", "Hash", "AcceptWithoutTesting", "CloudTokenConfig", "CloudToken", "SerialNumber", "ChannelTypes", "Rules", "SupervisionPeriod", "MemoryResetRequest", "ModemBandsMask", "DataEndpoint", "ConfigurationEndpoint", "DeviceInfoEndpoint", "TimeEndpoint", "BleTxPowerLevel", "RequestRuntimeErrorsClear", "ErrorTimestamp", "HashTimestamp", "CloudTokenCoapOption", "PayloadSignatureCoapOption", "DnsServerIp", "DnsTtlConfig", "PayloadSplitInfo", "ModemUpdateRequest", "CellularConfigParams", "Calendars", "ChannelsControlRequest", "CalibrationParametersRequest", "LedConfig", "NetworkTroubleshooting", "EncryptionKey", "ApnUserName", "ApnPassword", });
    org.thingsboard.server.gen.transport.coap.MeasurementTypeProtos.getDescriptor();
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
