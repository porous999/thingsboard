// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_rule.proto

package org.thingsboard.server.gen.transport.coap;

public final class ProtoRuleProtos {
  private ProtoRuleProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Condition to be checked by the device. If the condition is true, an action is triggered                                      
   * </pre>
   *
   * Protobuf enum {@code Condition}
   */
  public enum Condition
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Invalid value                                                                                                              
     * </pre>
     *
     * <code>CONDITION_UNSPECIFIED = 0;</code>
     */
    CONDITION_UNSPECIFIED(0),
    /**
     * <pre>
     * Threshold function for given rule_id is disabled                                                                           
     * </pre>
     *
     * <code>CONDITION_DISABLED = 1;</code>
     */
    CONDITION_DISABLED(1),
    /**
     * <pre>
     * parameter[4] - Type of measurement (as described in MeasurementType).                                                      
     * </pre>
     *
     * <code>CONDITION_HIGH_THRESHOLD = 2;</code>
     */
    CONDITION_HIGH_THRESHOLD(2),
    /**
     * <pre>
     * parameter[4] - Type of measurement (as described in MeasurementType).                                                      
     * </pre>
     *
     * <code>CONDITION_LOW_THRESHOLD = 3;</code>
     */
    CONDITION_LOW_THRESHOLD(3),
    /**
     * <pre>
     * parameter[3] - Type of measurement (as described in MeasurementType).                                                      
     * </pre>
     *
     * <code>CONDITION_DIFF_THRESHOLD = 4;</code>
     */
    CONDITION_DIFF_THRESHOLD(4),
    /**
     * <pre>
     * Change of binary sensor's state. Binary sensors only. Each change of the binary's sensor state will trigger an action.     
     * </pre>
     *
     * <code>CONDITION_BINARY_CHANGE_STATE = 5;</code>
     */
    CONDITION_BINARY_CHANGE_STATE(5),
    /**
     * <pre>
     *                Range: [0:864001]. Max parameter value disables action triggering on rule deactivation.                     
     * </pre>
     *
     * <code>CONDITION_LOGIC_OPERATOR = 6;</code>
     */
    CONDITION_LOGIC_OPERATOR(6),
    /**
     * <pre>
     *                before determining the measurement rule outcome.                                                            
     * </pre>
     *
     * <code>CONDITION_ON_MEASUREMENT = 7;</code>
     */
    CONDITION_ON_MEASUREMENT(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Invalid value                                                                                                              
     * </pre>
     *
     * <code>CONDITION_UNSPECIFIED = 0;</code>
     */
    public static final int CONDITION_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Threshold function for given rule_id is disabled                                                                           
     * </pre>
     *
     * <code>CONDITION_DISABLED = 1;</code>
     */
    public static final int CONDITION_DISABLED_VALUE = 1;
    /**
     * <pre>
     * parameter[4] - Type of measurement (as described in MeasurementType).                                                      
     * </pre>
     *
     * <code>CONDITION_HIGH_THRESHOLD = 2;</code>
     */
    public static final int CONDITION_HIGH_THRESHOLD_VALUE = 2;
    /**
     * <pre>
     * parameter[4] - Type of measurement (as described in MeasurementType).                                                      
     * </pre>
     *
     * <code>CONDITION_LOW_THRESHOLD = 3;</code>
     */
    public static final int CONDITION_LOW_THRESHOLD_VALUE = 3;
    /**
     * <pre>
     * parameter[3] - Type of measurement (as described in MeasurementType).                                                      
     * </pre>
     *
     * <code>CONDITION_DIFF_THRESHOLD = 4;</code>
     */
    public static final int CONDITION_DIFF_THRESHOLD_VALUE = 4;
    /**
     * <pre>
     * Change of binary sensor's state. Binary sensors only. Each change of the binary's sensor state will trigger an action.     
     * </pre>
     *
     * <code>CONDITION_BINARY_CHANGE_STATE = 5;</code>
     */
    public static final int CONDITION_BINARY_CHANGE_STATE_VALUE = 5;
    /**
     * <pre>
     *                Range: [0:864001]. Max parameter value disables action triggering on rule deactivation.                     
     * </pre>
     *
     * <code>CONDITION_LOGIC_OPERATOR = 6;</code>
     */
    public static final int CONDITION_LOGIC_OPERATOR_VALUE = 6;
    /**
     * <pre>
     *                before determining the measurement rule outcome.                                                            
     * </pre>
     *
     * <code>CONDITION_ON_MEASUREMENT = 7;</code>
     */
    public static final int CONDITION_ON_MEASUREMENT_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Condition valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Condition forNumber(int value) {
      switch (value) {
        case 0: return CONDITION_UNSPECIFIED;
        case 1: return CONDITION_DISABLED;
        case 2: return CONDITION_HIGH_THRESHOLD;
        case 3: return CONDITION_LOW_THRESHOLD;
        case 4: return CONDITION_DIFF_THRESHOLD;
        case 5: return CONDITION_BINARY_CHANGE_STATE;
        case 6: return CONDITION_LOGIC_OPERATOR;
        case 7: return CONDITION_ON_MEASUREMENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Condition>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Condition> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Condition>() {
            public Condition findValueByNumber(int number) {
              return Condition.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final Condition[] VALUES = values();

    public static Condition valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Condition(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Condition)
  }

  /**
   * <pre>
   * Logic operators to be used for determining the outcome of rules with logic operator condition.                               
   * </pre>
   *
   * Protobuf enum {@code LogicOperator}
   */
  public enum LogicOperator
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Invalid use                                                                                                                
     * </pre>
     *
     * <code>LOGIC_OPERATOR_UNSPECIFIED = 0;</code>
     */
    LOGIC_OPERATOR_UNSPECIFIED(0),
    /**
     * <pre>
     * Logic AND                                                                                                                  
     * </pre>
     *
     * <code>LOGIC_OPERATOR_AND = 1;</code>
     */
    LOGIC_OPERATOR_AND(1),
    /**
     * <pre>
     * Logic OR                                                                                                                   
     * </pre>
     *
     * <code>LOGIC_OPERATOR_OR = 2;</code>
     */
    LOGIC_OPERATOR_OR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Invalid use                                                                                                                
     * </pre>
     *
     * <code>LOGIC_OPERATOR_UNSPECIFIED = 0;</code>
     */
    public static final int LOGIC_OPERATOR_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Logic AND                                                                                                                  
     * </pre>
     *
     * <code>LOGIC_OPERATOR_AND = 1;</code>
     */
    public static final int LOGIC_OPERATOR_AND_VALUE = 1;
    /**
     * <pre>
     * Logic OR                                                                                                                   
     * </pre>
     *
     * <code>LOGIC_OPERATOR_OR = 2;</code>
     */
    public static final int LOGIC_OPERATOR_OR_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogicOperator valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LogicOperator forNumber(int value) {
      switch (value) {
        case 0: return LOGIC_OPERATOR_UNSPECIFIED;
        case 1: return LOGIC_OPERATOR_AND;
        case 2: return LOGIC_OPERATOR_OR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogicOperator>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LogicOperator> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LogicOperator>() {
            public LogicOperator findValueByNumber(int number) {
              return LogicOperator.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final LogicOperator[] VALUES = values();

    public static LogicOperator valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LogicOperator(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:LogicOperator)
  }

  /**
   * <pre>
   * Other actions will be available in next SW releases.                                                                         
   * </pre>
   *
   * Protobuf enum {@code Action}
   */
  public enum Action
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Invalid value                                                                                                              
     * </pre>
     *
     * <code>ACTION_UNSPECIFIED = 0;</code>
     */
    ACTION_UNSPECIFIED(0),
    /**
     * <pre>
     * To trigger the transmission                                                                                                
     * </pre>
     *
     * <code>ACTION_TRIGGER_TRANSMISSION = 1;</code>
     */
    ACTION_TRIGGER_TRANSMISSION(1),
    /**
     * <pre>
     * To take no action. Possible for logic operator components                                                                  
     * </pre>
     *
     * <code>ACTION_NO_ACTION = 2;</code>
     */
    ACTION_NO_ACTION(2),
    /**
     * <pre>
     * To trigger the transmission with ACK                                                                                       
     * </pre>
     *
     * <code>ACTION_TRIGGER_TRANSMISSION_WITH_ACK = 3;</code>
     */
    ACTION_TRIGGER_TRANSMISSION_WITH_ACK(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Invalid value                                                                                                              
     * </pre>
     *
     * <code>ACTION_UNSPECIFIED = 0;</code>
     */
    public static final int ACTION_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * To trigger the transmission                                                                                                
     * </pre>
     *
     * <code>ACTION_TRIGGER_TRANSMISSION = 1;</code>
     */
    public static final int ACTION_TRIGGER_TRANSMISSION_VALUE = 1;
    /**
     * <pre>
     * To take no action. Possible for logic operator components                                                                  
     * </pre>
     *
     * <code>ACTION_NO_ACTION = 2;</code>
     */
    public static final int ACTION_NO_ACTION_VALUE = 2;
    /**
     * <pre>
     * To trigger the transmission with ACK                                                                                       
     * </pre>
     *
     * <code>ACTION_TRIGGER_TRANSMISSION_WITH_ACK = 3;</code>
     */
    public static final int ACTION_TRIGGER_TRANSMISSION_WITH_ACK_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Action valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Action forNumber(int value) {
      switch (value) {
        case 0: return ACTION_UNSPECIFIED;
        case 1: return ACTION_TRIGGER_TRANSMISSION;
        case 2: return ACTION_NO_ACTION;
        case 3: return ACTION_TRIGGER_TRANSMISSION_WITH_ACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Action>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Action> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Action>() {
            public Action findValueByNumber(int number) {
              return Action.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final Action[] VALUES = values();

    public static Action valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Action(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Action)
  }

  /**
   * <pre>
   * Type of a rule calendars.                                                                                                    
   * </pre>
   *
   * Protobuf enum {@code CalendarType}
   */
  public enum CalendarType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Invalid value                                                                                                              
     * </pre>
     *
     * <code>CALENDAR_TYPE_UNSPECIFIED = 0;</code>
     */
    CALENDAR_TYPE_UNSPECIFIED(0),
    /**
     * <pre>
     * Type for inactive calendars                                                                                                
     * </pre>
     *
     * <code>CALENDAR_TYPE_DISABLED = 1;</code>
     */
    CALENDAR_TYPE_DISABLED(1),
    /**
     * <pre>
     *                  - example - if N = 4, then  offset = 4 * 15min = 1h. I.e. timezone is UTC+1.                              
     * </pre>
     *
     * <code>CALENDAR_TYPE_WEEK = 2;</code>
     */
    CALENDAR_TYPE_WEEK(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Invalid value                                                                                                              
     * </pre>
     *
     * <code>CALENDAR_TYPE_UNSPECIFIED = 0;</code>
     */
    public static final int CALENDAR_TYPE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Type for inactive calendars                                                                                                
     * </pre>
     *
     * <code>CALENDAR_TYPE_DISABLED = 1;</code>
     */
    public static final int CALENDAR_TYPE_DISABLED_VALUE = 1;
    /**
     * <pre>
     *                  - example - if N = 4, then  offset = 4 * 15min = 1h. I.e. timezone is UTC+1.                              
     * </pre>
     *
     * <code>CALENDAR_TYPE_WEEK = 2;</code>
     */
    public static final int CALENDAR_TYPE_WEEK_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CalendarType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CalendarType forNumber(int value) {
      switch (value) {
        case 0: return CALENDAR_TYPE_UNSPECIFIED;
        case 1: return CALENDAR_TYPE_DISABLED;
        case 2: return CALENDAR_TYPE_WEEK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CalendarType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CalendarType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CalendarType>() {
            public CalendarType findValueByNumber(int number) {
              return CalendarType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.getDescriptor().getEnumTypes().get(3);
    }

    private static final CalendarType[] VALUES = values();

    public static CalendarType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CalendarType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CalendarType)
  }

  public interface ProtoCalendarOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ProtoCalendar)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *                  - Bit 11 - Rule ID 11                                                                                     
     * </pre>
     *
     * <code>uint32 rule_mask = 1;</code>
     * @return The ruleMask.
     */
    int getRuleMask();

    /**
     * <pre>
     * Calendars's parameters. Described in Type.                                                                                 
     * </pre>
     *
     * <code>repeated sint32 parameters = 2;</code>
     * @return A list containing the parameters.
     */
    java.util.List<java.lang.Integer> getParametersList();
    /**
     * <pre>
     * Calendars's parameters. Described in Type.                                                                                 
     * </pre>
     *
     * <code>repeated sint32 parameters = 2;</code>
     * @return The count of parameters.
     */
    int getParametersCount();
    /**
     * <pre>
     * Calendars's parameters. Described in Type.                                                                                 
     * </pre>
     *
     * <code>repeated sint32 parameters = 2;</code>
     * @param index The index of the element to return.
     * @return The parameters at the given index.
     */
    int getParameters(int index);

    /**
     * <pre>
     * Calendar's type.  Described in Type.                                                                                       
     * </pre>
     *
     * <code>.CalendarType type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Calendar's type.  Described in Type.                                                                                       
     * </pre>
     *
     * <code>.CalendarType type = 3;</code>
     * @return The type.
     */
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType getType();
  }
  /**
   * <pre>
   * It is possible to configure up to 6 calendars. Each of them can affect any number of rules.                                  
   * </pre>
   *
   * Protobuf type {@code ProtoCalendar}
   */
  public static final class ProtoCalendar extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ProtoCalendar)
      ProtoCalendarOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtoCalendar.newBuilder() to construct.
    private ProtoCalendar(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoCalendar() {
      parameters_ = emptyIntList();
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtoCalendar();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoCalendar_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoCalendar_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.class, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder.class);
    }

    public static final int RULE_MASK_FIELD_NUMBER = 1;
    private int ruleMask_ = 0;
    /**
     * <pre>
     *                  - Bit 11 - Rule ID 11                                                                                     
     * </pre>
     *
     * <code>uint32 rule_mask = 1;</code>
     * @return The ruleMask.
     */
    @java.lang.Override
    public int getRuleMask() {
      return ruleMask_;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList parameters_;
    /**
     * <pre>
     * Calendars's parameters. Described in Type.                                                                                 
     * </pre>
     *
     * <code>repeated sint32 parameters = 2;</code>
     * @return A list containing the parameters.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getParametersList() {
      return parameters_;
    }
    /**
     * <pre>
     * Calendars's parameters. Described in Type.                                                                                 
     * </pre>
     *
     * <code>repeated sint32 parameters = 2;</code>
     * @return The count of parameters.
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <pre>
     * Calendars's parameters. Described in Type.                                                                                 
     * </pre>
     *
     * <code>repeated sint32 parameters = 2;</code>
     * @param index The index of the element to return.
     * @return The parameters at the given index.
     */
    public int getParameters(int index) {
      return parameters_.getInt(index);
    }
    private int parametersMemoizedSerializedSize = -1;

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_ = 0;
    /**
     * <pre>
     * Calendar's type.  Described in Type.                                                                                       
     * </pre>
     *
     * <code>.CalendarType type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Calendar's type.  Described in Type.                                                                                       
     * </pre>
     *
     * <code>.CalendarType type = 3;</code>
     * @return The type.
     */
    @java.lang.Override public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType getType() {
      org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType result = org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType.forNumber(type_);
      return result == null ? org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (ruleMask_ != 0) {
        output.writeUInt32(1, ruleMask_);
      }
      if (getParametersList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(parametersMemoizedSerializedSize);
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeSInt32NoTag(parameters_.getInt(i));
      }
      if (type_ != org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType.CALENDAR_TYPE_UNSPECIFIED.getNumber()) {
        output.writeEnum(3, type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ruleMask_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ruleMask_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < parameters_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(parameters_.getInt(i));
        }
        size += dataSize;
        if (!getParametersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        parametersMemoizedSerializedSize = dataSize;
      }
      if (type_ != org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType.CALENDAR_TYPE_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar)) {
        return super.equals(obj);
      }
      org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar other = (org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar) obj;

      if (getRuleMask()
          != other.getRuleMask()) return false;
      if (!getParametersList()
          .equals(other.getParametersList())) return false;
      if (type_ != other.type_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + RULE_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getRuleMask();
      if (getParametersCount() > 0) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParametersList().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * It is possible to configure up to 6 calendars. Each of them can affect any number of rules.                                  
     * </pre>
     *
     * Protobuf type {@code ProtoCalendar}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ProtoCalendar)
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendarOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoCalendar_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoCalendar_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.class, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.Builder.class);
      }

      // Construct using org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        ruleMask_ = 0;
        parameters_ = emptyIntList();
        type_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoCalendar_descriptor;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar getDefaultInstanceForType() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.getDefaultInstance();
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar build() {
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar buildPartial() {
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar result = new org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          parameters_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.parameters_ = parameters_;
      }

      private void buildPartial0(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ruleMask_ = ruleMask_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.type_ = type_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar) {
          return mergeFrom((org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar other) {
        if (other == org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar.getDefaultInstance()) return this;
        if (other.getRuleMask() != 0) {
          setRuleMask(other.getRuleMask());
        }
        if (!other.parameters_.isEmpty()) {
          if (parameters_.isEmpty()) {
            parameters_ = other.parameters_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureParametersIsMutable();
            parameters_.addAll(other.parameters_);
          }
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                ruleMask_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int v = input.readSInt32();
                ensureParametersIsMutable();
                parameters_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureParametersIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  parameters_.addInt(input.readSInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int ruleMask_ ;
      /**
       * <pre>
       *                  - Bit 11 - Rule ID 11                                                                                     
       * </pre>
       *
       * <code>uint32 rule_mask = 1;</code>
       * @return The ruleMask.
       */
      @java.lang.Override
      public int getRuleMask() {
        return ruleMask_;
      }
      /**
       * <pre>
       *                  - Bit 11 - Rule ID 11                                                                                     
       * </pre>
       *
       * <code>uint32 rule_mask = 1;</code>
       * @param value The ruleMask to set.
       * @return This builder for chaining.
       */
      public Builder setRuleMask(int value) {
        
        ruleMask_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *                  - Bit 11 - Rule ID 11                                                                                     
       * </pre>
       *
       * <code>uint32 rule_mask = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRuleMask() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ruleMask_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList parameters_ = emptyIntList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          parameters_ = mutableCopy(parameters_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * Calendars's parameters. Described in Type.                                                                                 
       * </pre>
       *
       * <code>repeated sint32 parameters = 2;</code>
       * @return A list containing the parameters.
       */
      public java.util.List<java.lang.Integer>
          getParametersList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(parameters_) : parameters_;
      }
      /**
       * <pre>
       * Calendars's parameters. Described in Type.                                                                                 
       * </pre>
       *
       * <code>repeated sint32 parameters = 2;</code>
       * @return The count of parameters.
       */
      public int getParametersCount() {
        return parameters_.size();
      }
      /**
       * <pre>
       * Calendars's parameters. Described in Type.                                                                                 
       * </pre>
       *
       * <code>repeated sint32 parameters = 2;</code>
       * @param index The index of the element to return.
       * @return The parameters at the given index.
       */
      public int getParameters(int index) {
        return parameters_.getInt(index);
      }
      /**
       * <pre>
       * Calendars's parameters. Described in Type.                                                                                 
       * </pre>
       *
       * <code>repeated sint32 parameters = 2;</code>
       * @param index The index to set the value at.
       * @param value The parameters to set.
       * @return This builder for chaining.
       */
      public Builder setParameters(
          int index, int value) {
        
        ensureParametersIsMutable();
        parameters_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Calendars's parameters. Described in Type.                                                                                 
       * </pre>
       *
       * <code>repeated sint32 parameters = 2;</code>
       * @param value The parameters to add.
       * @return This builder for chaining.
       */
      public Builder addParameters(int value) {
        
        ensureParametersIsMutable();
        parameters_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Calendars's parameters. Described in Type.                                                                                 
       * </pre>
       *
       * <code>repeated sint32 parameters = 2;</code>
       * @param values The parameters to add.
       * @return This builder for chaining.
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureParametersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameters_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Calendars's parameters. Described in Type.                                                                                 
       * </pre>
       *
       * <code>repeated sint32 parameters = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameters() {
        parameters_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Calendar's type.  Described in Type.                                                                                       
       * </pre>
       *
       * <code>.CalendarType type = 3;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Calendar's type.  Described in Type.                                                                                       
       * </pre>
       *
       * <code>.CalendarType type = 3;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Calendar's type.  Described in Type.                                                                                       
       * </pre>
       *
       * <code>.CalendarType type = 3;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType getType() {
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType result = org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType.forNumber(type_);
        return result == null ? org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Calendar's type.  Described in Type.                                                                                       
       * </pre>
       *
       * <code>.CalendarType type = 3;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.CalendarType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Calendar's type.  Described in Type.                                                                                       
       * </pre>
       *
       * <code>.CalendarType type = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ProtoCalendar)
    }

    // @@protoc_insertion_point(class_scope:ProtoCalendar)
    private static final org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar();
    }

    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoCalendar>
        PARSER = new com.google.protobuf.AbstractParser<ProtoCalendar>() {
      @java.lang.Override
      public ProtoCalendar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoCalendar> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoCalendar> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoCalendar getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtoRuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ProtoRule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Bit mask on bits [0:5]. E.g. To assign the rule for channel 1: "000001", to assign rule to channels 2 and 4: "001010"      
     * </pre>
     *
     * <code>uint32 channel_mask = 1;</code>
     * @return The channelMask.
     */
    int getChannelMask();

    /**
     * <pre>
     * Rule's condition (as described in Condition).                                                                              
     * </pre>
     *
     * <code>.Condition condition = 2;</code>
     * @return The enum numeric value on the wire for condition.
     */
    int getConditionValue();
    /**
     * <pre>
     * Rule's condition (as described in Condition).                                                                              
     * </pre>
     *
     * <code>.Condition condition = 2;</code>
     * @return The condition.
     */
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition getCondition();

    /**
     * <pre>
     * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
     * </pre>
     *
     * <code>repeated sint32 parameters = 3;</code>
     * @return A list containing the parameters.
     */
    java.util.List<java.lang.Integer> getParametersList();
    /**
     * <pre>
     * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
     * </pre>
     *
     * <code>repeated sint32 parameters = 3;</code>
     * @return The count of parameters.
     */
    int getParametersCount();
    /**
     * <pre>
     * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
     * </pre>
     *
     * <code>repeated sint32 parameters = 3;</code>
     * @param index The index of the element to return.
     * @return The parameters at the given index.
     */
    int getParameters(int index);

    /**
     * <pre>
     * Action to be triggered.                                                                                                    
     * </pre>
     *
     * <code>.Action action = 4;</code>
     * @return The enum numeric value on the wire for action.
     */
    int getActionValue();
    /**
     * <pre>
     * Action to be triggered.                                                                                                    
     * </pre>
     *
     * <code>.Action action = 4;</code>
     * @return The action.
     */
    org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action getAction();
  }
  /**
   * <pre>
   * can be assigned to channels 1 and 2. No matter to how many channels a rule is assigned, it's still counted as one rule.      
   * </pre>
   *
   * Protobuf type {@code ProtoRule}
   */
  public static final class ProtoRule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ProtoRule)
      ProtoRuleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProtoRule.newBuilder() to construct.
    private ProtoRule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProtoRule() {
      condition_ = 0;
      parameters_ = emptyIntList();
      action_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProtoRule();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.class, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder.class);
    }

    public static final int CHANNEL_MASK_FIELD_NUMBER = 1;
    private int channelMask_ = 0;
    /**
     * <pre>
     * Bit mask on bits [0:5]. E.g. To assign the rule for channel 1: "000001", to assign rule to channels 2 and 4: "001010"      
     * </pre>
     *
     * <code>uint32 channel_mask = 1;</code>
     * @return The channelMask.
     */
    @java.lang.Override
    public int getChannelMask() {
      return channelMask_;
    }

    public static final int CONDITION_FIELD_NUMBER = 2;
    private int condition_ = 0;
    /**
     * <pre>
     * Rule's condition (as described in Condition).                                                                              
     * </pre>
     *
     * <code>.Condition condition = 2;</code>
     * @return The enum numeric value on the wire for condition.
     */
    @java.lang.Override public int getConditionValue() {
      return condition_;
    }
    /**
     * <pre>
     * Rule's condition (as described in Condition).                                                                              
     * </pre>
     *
     * <code>.Condition condition = 2;</code>
     * @return The condition.
     */
    @java.lang.Override public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition getCondition() {
      org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition result = org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition.forNumber(condition_);
      return result == null ? org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition.UNRECOGNIZED : result;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList parameters_;
    /**
     * <pre>
     * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
     * </pre>
     *
     * <code>repeated sint32 parameters = 3;</code>
     * @return A list containing the parameters.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getParametersList() {
      return parameters_;
    }
    /**
     * <pre>
     * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
     * </pre>
     *
     * <code>repeated sint32 parameters = 3;</code>
     * @return The count of parameters.
     */
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <pre>
     * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
     * </pre>
     *
     * <code>repeated sint32 parameters = 3;</code>
     * @param index The index of the element to return.
     * @return The parameters at the given index.
     */
    public int getParameters(int index) {
      return parameters_.getInt(index);
    }
    private int parametersMemoizedSerializedSize = -1;

    public static final int ACTION_FIELD_NUMBER = 4;
    private int action_ = 0;
    /**
     * <pre>
     * Action to be triggered.                                                                                                    
     * </pre>
     *
     * <code>.Action action = 4;</code>
     * @return The enum numeric value on the wire for action.
     */
    @java.lang.Override public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     * Action to be triggered.                                                                                                    
     * </pre>
     *
     * <code>.Action action = 4;</code>
     * @return The action.
     */
    @java.lang.Override public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action getAction() {
      org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action result = org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action.forNumber(action_);
      return result == null ? org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (channelMask_ != 0) {
        output.writeUInt32(1, channelMask_);
      }
      if (condition_ != org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition.CONDITION_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, condition_);
      }
      if (getParametersList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(parametersMemoizedSerializedSize);
      }
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeSInt32NoTag(parameters_.getInt(i));
      }
      if (action_ != org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action.ACTION_UNSPECIFIED.getNumber()) {
        output.writeEnum(4, action_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (channelMask_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, channelMask_);
      }
      if (condition_ != org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition.CONDITION_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, condition_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < parameters_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(parameters_.getInt(i));
        }
        size += dataSize;
        if (!getParametersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        parametersMemoizedSerializedSize = dataSize;
      }
      if (action_ != org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action.ACTION_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, action_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule)) {
        return super.equals(obj);
      }
      org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule other = (org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule) obj;

      if (getChannelMask()
          != other.getChannelMask()) return false;
      if (condition_ != other.condition_) return false;
      if (!getParametersList()
          .equals(other.getParametersList())) return false;
      if (action_ != other.action_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CHANNEL_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getChannelMask();
      hash = (37 * hash) + CONDITION_FIELD_NUMBER;
      hash = (53 * hash) + condition_;
      if (getParametersCount() > 0) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParametersList().hashCode();
      }
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * can be assigned to channels 1 and 2. No matter to how many channels a rule is assigned, it's still counted as one rule.      
     * </pre>
     *
     * Protobuf type {@code ProtoRule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ProtoRule)
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoRule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.class, org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.Builder.class);
      }

      // Construct using org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelMask_ = 0;
        condition_ = 0;
        parameters_ = emptyIntList();
        action_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.internal_static_ProtoRule_descriptor;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule getDefaultInstanceForType() {
        return org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.getDefaultInstance();
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule build() {
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule buildPartial() {
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule result = new org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule result) {
        if (((bitField0_ & 0x00000004) != 0)) {
          parameters_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.parameters_ = parameters_;
      }

      private void buildPartial0(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelMask_ = channelMask_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.condition_ = condition_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.action_ = action_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule) {
          return mergeFrom((org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule other) {
        if (other == org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule.getDefaultInstance()) return this;
        if (other.getChannelMask() != 0) {
          setChannelMask(other.getChannelMask());
        }
        if (other.condition_ != 0) {
          setConditionValue(other.getConditionValue());
        }
        if (!other.parameters_.isEmpty()) {
          if (parameters_.isEmpty()) {
            parameters_ = other.parameters_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureParametersIsMutable();
            parameters_.addAll(other.parameters_);
          }
          onChanged();
        }
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelMask_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                condition_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                int v = input.readSInt32();
                ensureParametersIsMutable();
                parameters_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureParametersIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  parameters_.addInt(input.readSInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                action_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int channelMask_ ;
      /**
       * <pre>
       * Bit mask on bits [0:5]. E.g. To assign the rule for channel 1: "000001", to assign rule to channels 2 and 4: "001010"      
       * </pre>
       *
       * <code>uint32 channel_mask = 1;</code>
       * @return The channelMask.
       */
      @java.lang.Override
      public int getChannelMask() {
        return channelMask_;
      }
      /**
       * <pre>
       * Bit mask on bits [0:5]. E.g. To assign the rule for channel 1: "000001", to assign rule to channels 2 and 4: "001010"      
       * </pre>
       *
       * <code>uint32 channel_mask = 1;</code>
       * @param value The channelMask to set.
       * @return This builder for chaining.
       */
      public Builder setChannelMask(int value) {
        
        channelMask_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bit mask on bits [0:5]. E.g. To assign the rule for channel 1: "000001", to assign rule to channels 2 and 4: "001010"      
       * </pre>
       *
       * <code>uint32 channel_mask = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelMask() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelMask_ = 0;
        onChanged();
        return this;
      }

      private int condition_ = 0;
      /**
       * <pre>
       * Rule's condition (as described in Condition).                                                                              
       * </pre>
       *
       * <code>.Condition condition = 2;</code>
       * @return The enum numeric value on the wire for condition.
       */
      @java.lang.Override public int getConditionValue() {
        return condition_;
      }
      /**
       * <pre>
       * Rule's condition (as described in Condition).                                                                              
       * </pre>
       *
       * <code>.Condition condition = 2;</code>
       * @param value The enum numeric value on the wire for condition to set.
       * @return This builder for chaining.
       */
      public Builder setConditionValue(int value) {
        condition_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Rule's condition (as described in Condition).                                                                              
       * </pre>
       *
       * <code>.Condition condition = 2;</code>
       * @return The condition.
       */
      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition getCondition() {
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition result = org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition.forNumber(condition_);
        return result == null ? org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Rule's condition (as described in Condition).                                                                              
       * </pre>
       *
       * <code>.Condition condition = 2;</code>
       * @param value The condition to set.
       * @return This builder for chaining.
       */
      public Builder setCondition(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Condition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        condition_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Rule's condition (as described in Condition).                                                                              
       * </pre>
       *
       * <code>.Condition condition = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCondition() {
        bitField0_ = (bitField0_ & ~0x00000002);
        condition_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList parameters_ = emptyIntList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          parameters_ = mutableCopy(parameters_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
       * </pre>
       *
       * <code>repeated sint32 parameters = 3;</code>
       * @return A list containing the parameters.
       */
      public java.util.List<java.lang.Integer>
          getParametersList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(parameters_) : parameters_;
      }
      /**
       * <pre>
       * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
       * </pre>
       *
       * <code>repeated sint32 parameters = 3;</code>
       * @return The count of parameters.
       */
      public int getParametersCount() {
        return parameters_.size();
      }
      /**
       * <pre>
       * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
       * </pre>
       *
       * <code>repeated sint32 parameters = 3;</code>
       * @param index The index of the element to return.
       * @return The parameters at the given index.
       */
      public int getParameters(int index) {
        return parameters_.getInt(index);
      }
      /**
       * <pre>
       * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
       * </pre>
       *
       * <code>repeated sint32 parameters = 3;</code>
       * @param index The index to set the value at.
       * @param value The parameters to set.
       * @return This builder for chaining.
       */
      public Builder setParameters(
          int index, int value) {
        
        ensureParametersIsMutable();
        parameters_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
       * </pre>
       *
       * <code>repeated sint32 parameters = 3;</code>
       * @param value The parameters to add.
       * @return This builder for chaining.
       */
      public Builder addParameters(int value) {
        
        ensureParametersIsMutable();
        parameters_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
       * </pre>
       *
       * <code>repeated sint32 parameters = 3;</code>
       * @param values The parameters to add.
       * @return This builder for chaining.
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureParametersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameters_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Condition's parameters (as described in Condition). For binary sensors there are no parameters                             
       * </pre>
       *
       * <code>repeated sint32 parameters = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameters() {
        parameters_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int action_ = 0;
      /**
       * <pre>
       * Action to be triggered.                                                                                                    
       * </pre>
       *
       * <code>.Action action = 4;</code>
       * @return The enum numeric value on the wire for action.
       */
      @java.lang.Override public int getActionValue() {
        return action_;
      }
      /**
       * <pre>
       * Action to be triggered.                                                                                                    
       * </pre>
       *
       * <code>.Action action = 4;</code>
       * @param value The enum numeric value on the wire for action to set.
       * @return This builder for chaining.
       */
      public Builder setActionValue(int value) {
        action_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Action to be triggered.                                                                                                    
       * </pre>
       *
       * <code>.Action action = 4;</code>
       * @return The action.
       */
      @java.lang.Override
      public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action getAction() {
        org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action result = org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action.forNumber(action_);
        return result == null ? org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Action to be triggered.                                                                                                    
       * </pre>
       *
       * <code>.Action action = 4;</code>
       * @param value The action to set.
       * @return This builder for chaining.
       */
      public Builder setAction(org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.Action value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Action to be triggered.                                                                                                    
       * </pre>
       *
       * <code>.Action action = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000008);
        action_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ProtoRule)
    }

    // @@protoc_insertion_point(class_scope:ProtoRule)
    private static final org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule();
    }

    public static org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoRule>
        PARSER = new com.google.protobuf.AbstractParser<ProtoRule>() {
      @java.lang.Override
      public ProtoRule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoRule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoRule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.thingsboard.server.gen.transport.coap.ProtoRuleProtos.ProtoRule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ProtoCalendar_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ProtoCalendar_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ProtoRule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ProtoRule_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020proto_rule.proto\"S\n\rProtoCalendar\022\021\n\tr" +
      "ule_mask\030\001 \001(\r\022\022\n\nparameters\030\002 \003(\021\022\033\n\004ty" +
      "pe\030\003 \001(\0162\r.CalendarType\"m\n\tProtoRule\022\024\n\014" +
      "channel_mask\030\001 \001(\r\022\035\n\tcondition\030\002 \001(\0162\n." +
      "Condition\022\022\n\nparameters\030\003 \003(\021\022\027\n\006action\030" +
      "\004 \001(\0162\007.Action*\366\001\n\tCondition\022\031\n\025CONDITIO" +
      "N_UNSPECIFIED\020\000\022\026\n\022CONDITION_DISABLED\020\001\022" +
      "\034\n\030CONDITION_HIGH_THRESHOLD\020\002\022\033\n\027CONDITI" +
      "ON_LOW_THRESHOLD\020\003\022\034\n\030CONDITION_DIFF_THR" +
      "ESHOLD\020\004\022!\n\035CONDITION_BINARY_CHANGE_STAT" +
      "E\020\005\022\034\n\030CONDITION_LOGIC_OPERATOR\020\006\022\034\n\030CON" +
      "DITION_ON_MEASUREMENT\020\007*^\n\rLogicOperator" +
      "\022\036\n\032LOGIC_OPERATOR_UNSPECIFIED\020\000\022\026\n\022LOGI" +
      "C_OPERATOR_AND\020\001\022\025\n\021LOGIC_OPERATOR_OR\020\002*" +
      "\201\001\n\006Action\022\026\n\022ACTION_UNSPECIFIED\020\000\022\037\n\033AC" +
      "TION_TRIGGER_TRANSMISSION\020\001\022\024\n\020ACTION_NO" +
      "_ACTION\020\002\022(\n$ACTION_TRIGGER_TRANSMISSION" +
      "_WITH_ACK\020\003*a\n\014CalendarType\022\035\n\031CALENDAR_" +
      "TYPE_UNSPECIFIED\020\000\022\032\n\026CALENDAR_TYPE_DISA" +
      "BLED\020\001\022\026\n\022CALENDAR_TYPE_WEEK\020\002B<\n)org.th" +
      "ingsboard.server.gen.transport.coapB\017Pro" +
      "toRuleProtosb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ProtoCalendar_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ProtoCalendar_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ProtoCalendar_descriptor,
        new java.lang.String[] { "RuleMask", "Parameters", "Type", });
    internal_static_ProtoRule_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_ProtoRule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ProtoRule_descriptor,
        new java.lang.String[] { "ChannelMask", "Condition", "Parameters", "Action", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
